#pragma once

// Name: AceCombat7, Version: 1.3.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Nimbus.Texture3DUIActor
// 0x0028 (0x0390 - 0x0368)
class ATexture3DUIActor : public AActor
{
public:
	class UMaterialBillboardComponent*                 TextureBox;                                               // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          TextureBoxMaterial;                                       // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    TextureBoxMaterialInst;                                   // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  CurrentTexture;                                           // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Texture3DUIActor");
		return ptr;
	}

};


// Class Nimbus.AerialRefuel3DUIActor
// 0x0108 (0x0498 - 0x0390)
class AAerialRefuel3DUIActor : public ATexture3DUIActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0390(0x0008) MISSED OFFSET
	class UMaterialInterface*                          TextMaterial;                                             // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          TextMaterialVR;                                           // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       TextFont;                                                 // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       TextFontVR;                                               // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    WidthAlignmentMaterialInst;                               // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    HeightAlignmentMaterialInst;                              // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextRenderComponent*                        WidthAlignmentText;                                       // 0x03C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        HeightAlignmentText;                                      // 0x03D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              TextScreenHeight;                                         // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VRTextScreenHeight;                                       // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WidthAlignmentYOffsetScale;                               // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WidthAlignmentXOffset;                                    // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03E8(0x0004) MISSED OFFSET
	struct FLinearColor                                AerialRefuelHUDColor;                                     // 0x03EC(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class UTexture2D*                                  AerialRefuelDiamondTexture;                               // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AerialRefuelDottedTexture;                                // 0x0408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AerialRefuelSolidTexture;                                 // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          AerialRefuelMaterial;                                     // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AerialRefuelPlayerInst;                                   // 0x0420(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AerialRefuelTargetInst;                                   // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AerialRefuelDottedInst;                                   // 0x0430(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AerialRefuelSolidInst;                                    // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AerialRefuelTextureScale;                                 // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelVRTextureScale;                               // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AerialRefuelGuideRelativePosition;                        // 0x0448(0x000C) (Edit, IsPlainOldData)
	float                                              AerialRefuelMinScaleLimit;                                // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelMinDistanceSquaredLimit;                      // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelMaxDistanceSquaredLimit;                      // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelTargetCentralizedBuffer;                      // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelTargetSensitivity;                            // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LimitCornerScale;                                         // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2C];                                      // 0x046C(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AerialRefuel3DUIActor");
		return ptr;
	}

};


// Class Nimbus.AiasAvoidsObject
// 0x0050 (0x03B8 - 0x0368)
class AAiasAvoidsObject : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FVector                                     ApproachRange;                                            // 0x0370(0x000C) (Edit, IsPlainOldData)
	float                                              ApproachAttenuationGravity;                               // 0x037C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	struct FVector                                     ImpactRange;                                              // 0x0388(0x000C) (Edit, IsPlainOldData)
	float                                              UpperHeight;                                              // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MiddleHeight;                                             // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpperFallSpeed;                                           // 0x039C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowerFallSpeed;                                           // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	class UArrowComponent*                             ArrowComponentUpperHeight;                                // 0x03A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             ArrowComponentMiddleHeight;                               // 0x03B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AiasAvoidsObject");
		return ptr;
	}

};


// Class Nimbus.NimbusGameObjectComponent
// 0x0000 (0x00F0 - 0x00F0)
class UNimbusGameObjectComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameObjectComponent");
		return ptr;
	}

};


// Class Nimbus.AIComponentBase
// 0x0008 (0x00F8 - 0x00F0)
class UAIComponentBase : public UNimbusGameObjectComponent
{
public:
	class AAIGameObject*                               OwningAIGameObject;                                       // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIComponentBase");
		return ptr;
	}

};


// Class Nimbus.AIASCommandComponent
// 0x0040 (0x0138 - 0x00F8)
class UAIASCommandComponent : public UAIComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnActivateBarrier;                                        // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopBarrier;                                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UClass*>                              SpawnRectennaBarrierWeaponClassList;                      // 0x0118(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<TWeakObjectPtr<class ARectennaBarrier>>     SpawnBarrierList;                                         // 0x0128(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIASCommandComponent");
		return ptr;
	}


	void StopBarrier();
	void OnStopBarrier__DelegateSignature(class AGameObject* Owner);
	void OnReleaseBarrierWeapon();
	void OnActivateBarrier__DelegateSignature(class AGameObject* Owner);
	void ActivateBarrier(int InNumber);
};


// Class Nimbus.AIASDamagedStateComponent
// 0x02F8 (0x03E8 - 0x00F0)
class UAIASDamagedStateComponent : public UNimbusGameObjectComponent
{
public:
	struct FString                                     MeshComponentName;                                        // 0x00F0(0x0010) (Edit, ZeroConstructor)
	bool                                               bAreDamagedStatesCompounded;                              // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateBeginning;                                       // 0x0101(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowOwnerComponent;                                      // 0x0102(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableCheckGroundHit;                                    // 0x0103(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FName                                       ChangeDamagedStateComponentName;                          // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FDamagedStateInstance>               DamagedStateInstances;                                    // 0x0110(0x0010) (Edit, ZeroConstructor)
	struct FName                                       MeshMaterialDamageParameterName;                          // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamagedMainBodySpinParam*                   MainBodySpinParam;                                        // 0x0128(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDamagedBreakApartSequence*                  DamageBreakApartSequence;                                 // 0x0130(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               MainBodyTrailSocketNames;                                 // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     DestroyedBodyMeshComponentName;                           // 0x0148(0x0010) (Edit, ZeroConstructor)
	struct FString                                     DestroyedPartsMeshComponentName;                          // 0x0158(0x0010) (Edit, ZeroConstructor)
	struct FString                                     DestroyedStaticMeshComponentName;                         // 0x0168(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               FallingSoundPlayEvent;                                    // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               FallingSoundStopEvent;                                    // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSeaExplosionInfo                           SeaExplosionInfo;                                         // 0x0188(0x0008) (Edit)
	TArray<struct FSeaExplosionVFXInfo>                SeaExplosionVFXInfo;                                      // 0x0190(0x0010) (Edit, ZeroConstructor)
	bool                                               bShowExtraDestroyedVFX;                                   // 0x01A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET
	TArray<struct FDamagedVFXInfo>                     ExtraVfxInfo;                                             // 0x01A8(0x0010) (Edit, ZeroConstructor)
	bool                                               bShowGroundDecal;                                         // 0x01B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	struct FGroundDecalInfo                            GroundDecalInfo;                                          // 0x01C0(0x0020) (Edit)
	TArray<struct FAIASChildDelayDestructInfo>         ChildDelayDestructInfo;                                   // 0x01E0(0x0010) (Edit, ZeroConstructor)
	bool                                               bIsShownInFirstPersonView;                                // 0x01F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsShownInCockpitView;                                    // 0x01F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsShownInThirdPersonView;                                // 0x01F2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x01F3(0x0005) MISSED OFFSET
	class AGameObject*                                 OwnerGameObject;                                          // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMeshComponent*                              OwnerMesh;                                                // 0x0200(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              OwnerDamagedMesh;                                         // 0x0208(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AAIPlane*                                    OwnerAIPlane;                                             // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMeshComponent*                        PlaneBodyMeshComponent;                                   // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      DamagedBodyMeshComponent;                                 // 0x0220(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      DamagedPartsMeshComponent;                                // 0x0228(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        DamagedStaticMeshComponent;                               // 0x0230(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x178];                                     // 0x0238(0x0178) MISSED OFFSET
	TArray<int>                                        PendingDeathVFXList;                                      // 0x03B0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x10];                                      // 0x03C0(0x0010) MISSED OFFSET
	class UNimbusGameInstance*                         GameInstance;                                             // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AAiasAvoidsObject*>                   CheckAiasAvoidsObject;                                    // 0x03D8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIASDamagedStateComponent");
		return ptr;
	}


	void OnVisibilityChanged(bool bVisibility);
	void OnRestored();
	void OnComponentHitSurface(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ForceShowExtraDestroyedVFX();
	void DamageStateLifeSpanExpired(struct FDamagedStateInstance* DamagedStateInstance);
};


// Class Nimbus.AIASStateComponent
// 0x0080 (0x0178 - 0x00F8)
class UAIASStateComponent : public UAIComponentBase
{
public:
	TArray<struct FAIASPartsDestroyInfo>               PartsDestroyInfo;                                         // 0x00F8(0x0010) (Edit, ZeroConstructor)
	class UCurveVector*                                TiltingDOCMLocationCurve;                                 // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                TiltingDOCMRotationCurve;                                 // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TiltingDOCMParticle;                                      // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TiltingDOCMParticleLocationOffset;                        // 0x0120(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class UParticleSystemComponent*                    TiltingDOCMParticleComponent;                             // 0x0130(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PlaneBodyMeshComponent;                                   // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        DamagedBodyMeshComponent;                                 // 0x0140(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AAIGameObject*                               RectBaseObject;                                           // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIASStateComponent");
		return ptr;
	}


	void OnRestored();
};


// Class Nimbus.AIFireControlSystem
// 0x01A8 (0x02A0 - 0x00F8)
class UAIFireControlSystem : public UAIComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnWeaponFired;                                            // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	float                                              EnemySearchLockRadius;                                    // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              EnemySearchLockRadiusSquared;                             // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              EnemySearchLossRadius;                                    // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              EnemySearchLossRadiusSquared;                             // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bRegulateTick;                                            // 0x0120(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsHighPriority;                                          // 0x0121(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0122(0x0002) MISSED OFFSET
	float                                              MinRegulateTickDistanceUU;                                // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRegulateTickDistanceUU;                                // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HighPriorityMinTickInterval;                              // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HighPriorityMaxTickInterval;                              // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowPriorityMinTickInterval;                               // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowPriorityMaxTickInterval;                               // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETargetType                                        EnemySearchType;                                          // 0x013C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	float                                              EnemySearchRefreshRateMin;                                // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemySearchRefreshRateMax;                                // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0148(0x0004) MISSED OFFSET
	float                                              EnemyTargetUpdateRate;                                    // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0150(0x0008) MISSED OFFSET
	float                                              LostTargetInCloudTime;                                    // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LostTargetInCloudRecoveryTime;                            // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Weapon1;                                                  // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Weapon2;                                                  // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Weapon3;                                                  // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FlareClass;                                               // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FlareParticlePerActivation;                               // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlareParticlePeriod;                                      // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlareParticleMaxSpawnAngle;                               // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FlareParticleSpawnPosition;                               // 0x018C(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    FlareParticleSpawnRotation;                               // 0x0198(0x000C) (Edit, IsPlainOldData)
	float                                              EnemySearchAngleLimit;                                    // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x01A8(0x0018) MISSED OFFSET
	class AActor*                                      EnemySearchFilter;                                        // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 ExceptionTarget;                                          // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x01D0(0x0008) MISSED OFFSET
	class AGameObject*                                 TrackingTarget;                                           // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x70];                                      // 0x01E0(0x0070) MISSED OFFSET
	class AGameObject*                                 FCSLockedTarget;                                          // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x48];                                      // 0x0258(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIFireControlSystem");
		return ptr;
	}


	void SetInitialPose(const struct FVector& Location);
	void OnWeaponFired__DelegateSignature();
	bool CanActivateFlares();
};


// Class Nimbus.GameObject
// 0x0778 (0x0B40 - 0x03C8)
class AGameObject : public APawn
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x03C8(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTakeDamage;                                             // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChildGameObjectDeath;                                   // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChildGameObjectRecoveryTriggered;                       // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChildGameObjectRecoveryEnded;                           // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIdentified;                                             // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRestoredDelegate;                                       // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0458(0x0050) MISSED OFFSET
	class USphereComponent*                            OverlapCollision;                                         // 0x04A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SphereCollision;                                          // 0x04B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04B8(0x0008) MISSED OFFSET
	EGameObjectCategory                                GameObjectCategory;                                       // 0x04C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGameObjectSubCategory                             GameObjectSubCategory;                                    // 0x04C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x04C2(0x0002) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x04C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinHealth;                                                // 0x04C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Speed;                                                    // 0x04CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET
	unsigned char                                      StealthLevel;                                             // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x04E1(0x0003) MISSED OFFSET
	int                                                KillBountyScore;                                          // 0x04E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsActivated;                                             // 0x04E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x04E9(0x0001) MISSED OFFSET
	bool                                               bIsInvincible;                                            // 0x04EA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x04EB(0x0002) MISSED OFFSET
	bool                                               bIsReplayMode;                                            // 0x04ED(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsIGCMode;                                               // 0x04EE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShownDuringIGC;                                        // 0x04EF(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAttackTargetsException;                                // 0x04F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x04F1(0x0001) MISSED OFFSET
	bool                                               bIsExcludeFromGunAutoFire;                                // 0x04F2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5];                                       // 0x04F3(0x0005) MISSED OFFSET
	float                                              LookAheadTimeSec;                                         // 0x04F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	struct FString                                     ObjNameID;                                                // 0x0500(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     CallsignID;                                               // 0x0510(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SpeakerID;                                                // 0x0520(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData11[0x10];                                      // 0x0530(0x0010) MISSED OFFSET
	TArray<class AWeaponBase*>                         AttackingMainWeaponArray;                                 // 0x0540(0x0010) (ZeroConstructor, Transient)
	TArray<class AWeaponBase*>                         AttackingSpecialWeaponArray;                              // 0x0550(0x0010) (ZeroConstructor, Transient)
	class AGameObject*                                 LastAttackingSpecialWeaponOwner;                          // 0x0560(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x60];                                      // 0x0568(0x0060) MISSED OFFSET
	TArray<class AGameObject*>                         AttachedGameObjects;                                      // 0x05C8(0x0010) (ZeroConstructor, Transient)
	EMissileAlert                                      MissileAlert;                                             // 0x05D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMissileAlertedByAI;                                    // 0x05D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x6];                                       // 0x05DA(0x0006) MISSED OFFSET
	class AWeaponBase*                                 AlertedWeapon;                                            // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AGameObject*>                         PursuitAttackers;                                         // 0x05E8(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         NonPursuitAttackers;                                      // 0x05F8(0x0010) (ZeroConstructor, Transient)
	class UParticleSystem*                             DeathVFX;                                                 // 0x0608(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             StruckByLightningVFX;                                     // 0x0610(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               StruckByLightningSound;                                   // 0x0618(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HitCenterOffset;                                          // 0x0620(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PursuitPointOffset;                                       // 0x062C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LeadPointOffset;                                          // 0x0638(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              FrontViewHalfConeAngle;                                   // 0x0644(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AirCurrentPositionInfluenceModifier;                      // 0x0648(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AirCurrentRotationInfluenceModifier;                      // 0x064C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeToRecoverFromLightningStrike;                         // 0x0650(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LightningAffectModifier;                                  // 0x0654(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x8];                                       // 0x0658(0x0008) MISSED OFFSET
	bool                                               bIsUnidentified;                                          // 0x0660(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x1];                                       // 0x0661(0x0001) MISSED OFFSET
	bool                                               bNeedsDetection;                                          // 0x0662(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x1];                                       // 0x0663(0x0001) MISSED OFFSET
	float                                              DetectionDistanceMeters;                                  // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0668(0x0004) MISSED OFFSET
	float                                              IdentifyDistanceMeters;                                   // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData18[0x18];                                      // 0x0670(0x0018) MISSED OFFSET
	class UWeaponManager*                              WeaponManager;                                            // 0x0688(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData19[0x28];                                      // 0x0690(0x0028) MISSED OFFSET
	bool                                               bIsPlayerTarget;                                          // 0x06B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x167];                                     // 0x06B9(0x0167) MISSED OFFSET
	class AGameObject*                                 OwningParent;                                             // 0x0820(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 ChildGameObjectParent;                                    // 0x0828(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData21[0x30];                                      // 0x0830(0x0030) MISSED OFFSET
	float                                              CloudEnterDensity;                                        // 0x0860(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudExitDensity;                                         // 0x0864(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeToDeactivateAfterDeath;                               // 0x0868(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData22[0xC];                                       // 0x086C(0x000C) MISSED OFFSET
	class ATargetContainer3DUIActor*                   TargetContainerActor;                                     // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0xC8];                                      // 0x0880(0x00C8) MISSED OFFSET
	TMap<class AAirCurrentVolume*, struct FAirCurrentData> AirCurrentDataList;                                       // 0x0948(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData24[0x40];                                      // 0x0998(0x0040) MISSED OFFSET
	TArray<class UMeshComponent*>                      OverriddenForceLODMeshs;                                  // 0x09D8(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               bIsPersistentForceLOD;                                    // 0x09E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData25[0x1];                                       // 0x09E9(0x0001) MISSED OFFSET
	uint16_t                                           PilotDataID;                                              // 0x09EA(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableOverlapEvent;                                      // 0x09EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0xB];                                       // 0x09ED(0x000B) MISSED OFFSET
	TArray<class UNimbusGameObjectComponent*>          GameObjectComponentsToTick;                               // 0x09F8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FOneTimeFunc>                        SafelyCallBeforeTickComponentOneTimeFuncs;                // 0x0A08(0x0010) (ZeroConstructor, Transient)
	TArray<class ANimbusTriggerBase*>                  OverlappedNimbusTriggerActors;                            // 0x0A18(0x0010) (ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnNimbusBeginOverlap;                                     // 0x0A28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNimbusEndOverlap;                                       // 0x0A38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              BackBlindZoneTransitionDuration;                          // 0x0A48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData27[0xC];                                       // 0x0A4C(0x000C) MISSED OFFSET
	class UMeshComponent*                              GunHitMeshComponent;                                      // 0x0A58(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData28[0x40];                                      // 0x0A60(0x0040) MISSED OFFSET
	struct FName                                       OriginalCollisionProfileName;                             // 0x0AA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       CurrentCollisionProfileName;                              // 0x0AA8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x50];                                      // 0x0AB0(0x0050) MISSED OFFSET
	bool                                               bIsDeathCameraShake;                                      // 0x0B00(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ENimbusCameraShakeType                             DeathCameraShakeType;                                     // 0x0B01(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDrowHUDMessage;                                          // 0x0B02(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x1];                                       // 0x0B03(0x0001) MISSED OFFSET
	float                                              FullDisplayTimeAfterStealthAttack;                        // 0x0B04(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ReturnToStealthTimeAfterStealthAttack;                    // 0x0B08(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData31[0x14];                                      // 0x0B0C(0x0014) MISSED OFFSET
	class AElectronicSupportMeasures*                  JammingMeasures;                                          // 0x0B20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AElectronicSupportMeasures*                  SupportMeasures;                                          // 0x0B28(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                HealthInternal;                                           // 0x0B30(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x0B34(0x0004) MISSED OFFSET
	class ANimbusHUD*                                  NimbusHUDCache;                                           // 0x0B38(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GameObject");
		return ptr;
	}


	void SetMinHealth(float InHealth);
	void SetIsUnidentified(bool bUnidentified);
	void SetIsInvincibleFromAI(bool bInvincible);
	void SetIsInvincible(bool bInvincible);
	void SetIsExcludeFromGunAutoFire(bool bExcludeFromGunAutoFire);
	void SetIsAttackTargetsException(bool bAttackTargetsException);
	void SetHudBoxAttribute(EHudBoxAttribute Type);
	void SetActive(bool bActive, bool bReset);
	void OnWeaponLocked();
	void OnWeaponDetectionLost();
	void OnWeaponDetectionAcquired();
	void OnVisibilityChanged__DelegateSignature(bool bVisibility);
	void OnTakeDamage__DelegateSignature(class AGameObject* Causer, class AGameObject* DamagedObject, class AWeaponBase* Weapon, float Damage, class AWeaponBase* WeaponTypeCDO);
	void OnSleepChanged__DelegateSignature();
	void OnRestoredDelegate__DelegateSignature();
	void OnRestored();
	void OnRepositionDelegate__DelegateSignature();
	void OnReposition();
	void OnMissileAlertStateChange(EMissileAlert NewState, class AActor* Attacker);
	void OnLockedOnByEnemy__DelegateSignature(class AGameObject* LockedObject, class AGameObject* EnemyObject);
	void OnIdentified__DelegateSignature();
	void OnHitByGun(class AActor* Attacker);
	void OnExecRecordableEvent(int EventID);
	void OnDeath(class AGameObject* DeadGameObject);
	void OnDeactivate();
	void OnChildGameObjectRecoveryTriggered__DelegateSignature(class AGameObject* ChildGameObject);
	void OnChildGameObjectRecoveryEnded__DelegateSignature(class AGameObject* ChildGameObject);
	void OnChildGameObjectDeath__DelegateSignature(class AGameObject* DeadChildGameObject);
	void OnAttackedBySpecialWeapon(bool isAttacked, class AActor* Attacker);
	void OnAttachedActorLockedOnByEnemy(class AGameObject* LockedObject, class AGameObject* EnemyObject);
	void OnActivate();
	float ModifyHealth(float InValue, class APawn* DamageCauser, bool bCauseDamageEvent);
	void K2_DestroyActor();
	bool IsStruckByLightning();
	bool IsPlayerTarget();
	bool IsNimbusOverlappingActor(class AActor* Other);
	bool IsAttackedBySpecialWeapon();
	bool IsAttackedByOpponent();
	bool IsAttackedByMainWeapon();
	bool IsAlive();
	bool IsActivated();
	class AUnit* GetUnit();
	int GetTrueSkyQueryID(int RelativeID);
	float GetSpeedMps();
	float GetSpeedKmph();
	struct FString GetSpeakerID();
	struct FVector GetPursuitPoint();
	struct FString GetObjNameID();
	struct FString GetObjName();
	void GetNimbusOverlappingActors(class UClass* ClassFilter, TArray<class AActor*>* OverlappingActors);
	float GetMinHealth();
	float GetMaxHealth();
	class AGameObject* GetLockedOnTarget();
	struct FVector GetLeadPoint();
	bool GetIsUnidentified();
	bool GetIsInStealth(const struct FVector& PlayerLocation, class AGameObject* GameObject);
	bool GetIsDetected();
	float GetHealth();
	float GetDamagePercentage();
	struct FString GetCallsignID();
	struct FString GetCallsign();
	TArray<class AWeaponBase*> GetAttackingMainWeaponArray();
	float GetAltitudeMeters();
	void ForceShowHudBoxInSand(bool bShow);
	void ForceDetection();
	void ExecRecordableEvent(int EventID);
	void EnableKDSMode(bool bIsEnabled);
	void EnableFriendlyFireDamage(bool bEnable);
};


// Class Nimbus.AIGameObject
// 0x01A0 (0x0CE0 - 0x0B40)
class AAIGameObject : public AGameObject
{
public:
	struct FScriptMulticastDelegate                    OnStartedMovingOnPath;                                    // 0x0B40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedPathEntryPoint;                                  // 0x0B50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedPathPoint;                                       // 0x0B60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFinishedMovingOnPath;                                   // 0x0B70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResetPath;                                              // 0x0B80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AUnit*                                       Unit;                                                     // 0x0B90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAIFireControlSystem*                        FCS;                                                      // 0x0B98(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UAIPathComponent*                            AIPathComp;                                               // 0x0BA0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      AILevel;                                                  // 0x0BA8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BA9(0x0007) MISSED OFFSET
	class UDataTable*                                  AIPilotDataTable;                                         // 0x0BB0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  AIParamDataTable;                                         // 0x0BB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  AIParamModifierDataTable;                                 // 0x0BC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  AIFlaresDataTable;                                        // 0x0BC8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AIWeaponDurabilityDataTable;                              // 0x0BD0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  AIWeaponExplosionDurabilityDataTable;                     // 0x0BD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0BE0(0x0050) MISSED OFFSET
	bool                                               bScaleLevelWithDifficulty;                                // 0x0C30(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldShowInBriefing;                                    // 0x0C31(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFocusableInBriefing;                                   // 0x0C32(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTgtInBriefing;                                         // 0x0C33(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldRecordForDebriefing;                               // 0x0C34(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForceDisplayObjNameIDForDebriefing;                      // 0x0C35(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowHUDBox;                                              // 0x0C36(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0C37(0x0002) MISSED OFFSET
	bool                                               bPermissionToEngage;                                      // 0x0C39(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPermissionToFire;                                        // 0x0C3A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPermissionToUseFlares;                                   // 0x0C3B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPermissionToProvoke;                                     // 0x0C3C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPermissionToEvade;                                       // 0x0C3D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIgnoreAttackQuota;                                       // 0x0C3E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTGT;                                                   // 0x0C3F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsAir;                                                   // 0x0C40(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsSea;                                                   // 0x0C41(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsMissionSpecialObject;                                  // 0x0C42(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0C43(0x0001) MISSED OFFSET
	bool                                               bIsICBM;                                                  // 0x0C44(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0C45(0x0003) MISSED OFFSET
	class UClass*                                      ExplosionWeapon;                                          // 0x0C48(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCauseExplosionOnDeath;                                   // 0x0C50(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCauseExplosionWeaponOwnerIsKilledByAttacker;             // 0x0C51(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNeedOutOfWldReact;                                       // 0x0C52(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x21];                                      // 0x0C53(0x0021) MISSED OFFSET
	float                                              CloudCoverDensity;                                        // 0x0C74(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanRecover;                                              // 0x0C78(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0C79(0x0003) MISSED OFFSET
	int                                                RecoveryTimes;                                            // 0x0C7C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0C80(0x0004) MISSED OFFSET
	float                                              RecoveryDuration;                                         // 0x0C84(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x30];                                      // 0x0C88(0x0030) MISSED OFFSET
	struct FDataTableRowHandle                         NPCMoveSoundRowHandle;                                    // 0x0CB8(0x0010) (Edit)
	struct FDataTableRowHandle                         NPCPassingSoundSwitchRowHandle;                           // 0x0CC8(0x0010) (Edit)
	bool                                               bCanActivateFlares;                                       // 0x0CD8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0CD9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIGameObject");
		return ptr;
	}


	void StopFireContinuousShotWeapon();
	void SetWeaponSpecialBehavior(EWeaponNumber WeaponNumber, EWeaponSpecialBehaviorType BehaviorType);
	void SetWeaponSettings(bool bInCanDamageTGT, bool bInCanFireNoCollisionWeapon);
	void SetShowHudBox(bool bShow);
	void SetPathParameter(float InSpeedKmph, float InAccelerationMpss, float InRotationSpeedDegree, EAIPathMovingActorSnap InSnapSetting);
	void SetParkingMode(bool bParked, float DelayTime);
	void SetMoveOnPathApproachTimeOutValue(float InTime);
	void SetIsTGT(bool bIsTarget);
	void SetIsMissionSpecialObject(bool bIsMissionSpecial);
	void SetExceptionTarget(class AGameObject* ExceptionTarget);
	void SetEnemySearchType(ETargetType InType);
	void RemoveFromDebriefingRecording();
	void ParkOnPoint(class AActor* Point);
	void OnStartedMovingOnPath__DelegateSignature(class AAIPath* Path);
	void OnResetPath__DelegateSignature(class AAIPath* Path);
	void OnRecoveryTriggered();
	void OnRecoveryEnded();
	void OnReachedPathPoint__DelegateSignature(class AAIPathPoint* PathPoint);
	void OnReachedPathEntryPoint__DelegateSignature(class AAIPath* Path);
	void OnNotRecoveryTriggered();
	void OnFinishedMovingOnPath__DelegateSignature(class AAIPath* Path);
	void OnEngagementOrderIssued();
	void MoveWithCurve(class UCurveVector* TransCurve, class UCurveVector* RotCurve);
	void MoveOnPath(class AAIPath* AIPath, float InSpeedKmph, float InAccelerationMpss, float InRotationSpeedDegree, EAIPathMovingActorSnap InSnapSetting, float InPointRadiusMeter, bool bTeleport, bool bUseApproachActorForwardVector, bool bKeepOnLastPathPoint, bool bUseQuaternionVersion);
	bool IsTrackingAirTarget();
	bool IsTGT();
	bool IsSea();
	bool IsReallyOnGround();
	bool IsParkingMode();
	bool IsAir();
	class AGameObject* GetTrackingTarget();
	ESubFaction GetSubFaction();
	class AGameObject* GetLockedOnTarget();
	EFaction GetFaction();
	class AAIGameObject* GetChildGameObject(const struct FName& ComponentName);
	void FireOneShotWeaponWithTargetTracking(EWeaponNumber WeaponNumber, class AGameObject* Target, bool bIgnoreTargetRange, bool bContinueTrackingTarget);
	void FireOneShotWeaponWithLocationTracking(EWeaponNumber WeaponNumber, const struct FVector& Target, bool bIgnoreTargetRange, bool bContinueTrackingTarget);
	bool FireOneShotWeapon(EWeaponNumber WeaponNumber, class AGameObject* Target, const struct FVector& DummyTargetOffset);
	void FireContinuousShotWeapon(EWeaponNumber WeaponNumber, class AGameObject* Target, const struct FVector& DummyTargetOffset, float InFCSVolleyTime, float InFCSVolleyFireInterval);
	void EngagementOrderOverride(EEngagement Order, class AActor* TargetEnemy, EEnemySearchPriority SearchPriority, EEnemySearchPriorityExtension SearchPriorityExtension, bool bIgnoreUnidentifiedObject, bool IgnoreAttackQuota, bool CanFireWeapon1, bool CanFireWeapon2, bool CanFireWeapon3, bool PropogateToChild);
	void DisableRecovery(bool bDisable);
	void CheckOutOfWorld();
	void CancelMovingOnPath();
	void AddToDebriefingRecording();
	void ActivateFlares();
};


// Class Nimbus.AIGroundVehicle
// 0x00D0 (0x0DB0 - 0x0CE0)
class AAIGroundVehicle : public AAIGameObject
{
public:
	bool                                               bLargeShip;                                               // 0x0CE0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepOnGround;                                            // 0x0CE1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0CE2(0x0002) MISSED OFFSET
	float                                              RootHeight;                                               // 0x0CE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxGroundRotateAngle;                                     // 0x0CE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanMove;                                                 // 0x0CEC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0CED(0x0003) MISSED OFFSET
	float                                              MaximumSpeed;                                             // 0x0CF0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Acceleration;                                             // 0x0CF4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0CF8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReachDistance;                                            // 0x0CFC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ArriveDistance;                                           // 0x0D00(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsPropeller;                                             // 0x0D04(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0D05(0x0003) MISSED OFFSET
	float                                              PropellerAnimRateChange;                                  // 0x0D08(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PropellerCurrentAnimRate;                                 // 0x0D0C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PropellerTargetAnimRate;                                  // 0x0D10(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0D14(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      PropellerMeshComponent;                                   // 0x0D18(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              VFXTickMinDistanceUU;                                     // 0x0D20(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TrailVFXTickMinDistanceUU;                                // 0x0D24(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0D28(0x0004) MISSED OFFSET
	float                                              GroundCheckMinInterval;                                   // 0x0D2C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundCheckMaxInterval;                                   // 0x0D30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0D34(0x0004) MISSED OFFSET
	class USubmarineMoveComponent*                     SubmarineMoveComponent;                                   // 0x0D38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    TrailParticleComponent;                                   // 0x0D40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bShootAppearanceAngle;                                    // 0x0D48(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x67];                                      // 0x0D49(0x0067) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIGroundVehicle");
		return ptr;
	}


	void SubmarineSurface();
	void SubmarineStartNoseLift();
	void SubmarineRailgunStored();
	void SubmarineRailgunExtract();
	void SubmarineRailgunDown();
	void SubmarineRailgunBroken();
	void SubmarineRailgunAttack();
	void SubmarineForcedUnderWater();
	void SubmarineForcedOnWater();
	void SubmarineEndNoseLift();
	void SubmarineDiving();
	void SetLocationAboveGround();
};


// Class Nimbus.AIHeli
// 0x0330 (0x1010 - 0x0CE0)
class AAIHeli : public AAIGameObject
{
public:
	float                                              RootHeight;                                               // 0x0CE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxGroundRotateAngle;                                     // 0x0CE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    ParkedRotation;                                           // 0x0CE8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0CF4(0x0004) MISSED OFFSET
	struct FName                                       RotorParentMeshName;                                      // 0x0CF8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     FlyingRotorMeshPrefix;                                    // 0x0D00(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     FlyingRotorBonePrefix;                                    // 0x0D10(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ParkedRotorMeshPrefix;                                    // 0x0D20(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              MinimumSpeed;                                             // 0x0D30(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MaximumSpeed;                                             // 0x0D34(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MaxRotationSpeed;                                         // 0x0D38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x0D3C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MinimumHeight;                                            // 0x0D40(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              VerticalSpeed;                                            // 0x0D44(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0D48(0x0048) MISSED OFFSET
	class USkeletalMeshComponent*                      RotorParentMeshComponent;                                 // 0x0D90(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UStaticMeshComponent*>                FlyingOnlyRotorMeshes;                                    // 0x0D98(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UStaticMeshComponent*                        ParkedOnlyRotorMesh;                                      // 0x0DA8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0DB0(0x0010) MISSED OFFSET
	bool                                               bIsInertialMovement;                                      // 0x0DC0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0DC1(0x0007) MISSED OFFSET
	float                                              GroundCheckMinInterval;                                   // 0x0DC8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundCheckMaxInterval;                                   // 0x0DCC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackMoveTargetDelayMin;                             // 0x0DD0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackMoveTargetDelayMax;                             // 0x0DD4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HoveringAttackTargetDist;                                 // 0x0DD8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackTargetDistModifier;                             // 0x0DDC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackTargetDeclinationX;                             // 0x0DE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackTargetDeclinationXModifer;                      // 0x0DE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandAttackTargetDeclinationZModifer;                      // 0x0DE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0DEC(0x0020) MISSED OFFSET
	float                                              VariableWingMinSpeedKmph;                                 // 0x0E0C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0E10(0x0008) MISSED OFFSET
	struct FHoveringParam                              HoveringParam;                                            // 0x0E18(0x0030) (Edit)
	unsigned char                                      UnknownData06[0x124];                                     // 0x0E48(0x0124) MISSED OFFSET
	float                                              TrackingMaxAngle;                                         // 0x0F6C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    TrackingModiferRotationOnMove;                            // 0x0F70(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    TrackingModiferRotationOnStop;                            // 0x0F7C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0F88(0x0008) MISSED OFFSET
	float                                              DroneSelfDestructAirResistance;                           // 0x0F90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DroneSelfDestructGravity;                                 // 0x0F94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSeaExplosionInfo                           DroneSeaExplosionInfo;                                    // 0x0F98(0x0008) (Edit, DisableEditOnInstance)
	class UParticleSystem*                             DroneSeaExplosionVFX;                                     // 0x0FA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     DroneSeaExplosionVFXOffsetLocation;                       // 0x0FA8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    DroneSeaExplosionVFXOffsetRotation;                       // 0x0FB4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             DroneOtherExplosionVFX;                                   // 0x0FC0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     DroneOtherExplosionVFXOffsetLocation;                     // 0x0FC8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    DroneOtherExplosionVFXOffsetRotation;                     // 0x0FD4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DroneReturnModeAirResistance;                             // 0x0FE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DroneReturnModeGravity;                                   // 0x0FE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             DroneReturnModeVFX;                                       // 0x0FE8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    DroneExplosionSpawnVFX;                                   // 0x0FF0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0FF8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIHeli");
		return ptr;
	}


	bool IsEnabledRotorRotation();
	void EnableRotorRotation(bool bEnable, float InDelayTime);
	void DroneSelfDestruct();
	void DroneReturn();
};


// Class Nimbus.AIMihaiComponent
// 0x0028 (0x0120 - 0x00F8)
class UAIMihaiComponent : public UAIComponentBase
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimingSoundHalfAngleMax;                                  // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AimingSoundHalfAngleMin;                                  // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIMihaiComponent");
		return ptr;
	}


	void StopRailgunCharge();
	void StopRailgunAiming();
	void StartRailgunCharge(float ChargeTime);
	void StartRailgunAiming(float AimingTime);
};


// Class Nimbus.AIPath
// 0x0030 (0x0398 - 0x0368)
class AAIPath : public AActor
{
public:
	TArray<class AAIPathPoint*>                        PathPointActors;                                          // 0x0368(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FAIPathPointData>                    PathData;                                                 // 0x0378(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USplineComponent*                            SplineComponent;                                          // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EAIPathControlType                                 ControlType;                                              // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIPath");
		return ptr;
	}

};


// Class Nimbus.AIPathComponent
// 0x00F0 (0x01E0 - 0x00F0)
class UAIPathComponent : public UActorComponent
{
public:
	class AActor*                                      OwningActor;                                              // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIGameObject*                               OwningGameObject;                                         // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUnit*                                       OwningUnit;                                               // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      PathOwningActor;                                          // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIPath*                                     AIPath;                                                   // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USplineComponent*                            SplineComponent;                                          // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCurveVector*                                TransCurve;                                               // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveVector*                                RotCurve;                                                 // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0130(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIPathComponent");
		return ptr;
	}

};


// Class Nimbus.AIPathPoint
// 0x0018 (0x0380 - 0x0368)
class AAIPathPoint : public AActor
{
public:
	float                                              RadiusInMeter;                                            // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSpeed;                                             // 0x036C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAcceleration;                                      // 0x036D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableRotationSpeed;                                     // 0x036E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSnapSetting;                                       // 0x036F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedKmph;                                                // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AccelerationInMeter;                                      // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeedDegree;                                      // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EAIPathMovingActorSnap                             SnapSetting;                                              // 0x037C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x037D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIPathPoint");
		return ptr;
	}

};


// Class Nimbus.AIPlane
// 0x0590 (0x1270 - 0x0CE0)
class AAIPlane : public AAIGameObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0CE0(0x0008) MISSED OFFSET
	class UBehaviorTree*                               EvadeBT;                                                  // 0x0CE8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               EvadeMissileNearBT;                                       // 0x0CF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               EvadeMissileFarBT;                                        // 0x0CF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               EvadeGunBT;                                               // 0x0D00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               EvadeSpecialBT;                                           // 0x0D08(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               ProvokeBT;                                                // 0x0D10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               ProvokeNearBT;                                            // 0x0D18(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               ProvokeMidBT;                                             // 0x0D20(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               ProvokeFarBT;                                             // 0x0D28(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               EscapeFromPursuerBT;                                      // 0x0D30(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               MoveAwayFromTargetBT;                                     // 0x0D38(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBehaviorTree*                               PursueTargetBT;                                           // 0x0D40(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProvokeDeterminationTime;                                 // 0x0D48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProvokeConditionConeAngle;                                // 0x0D4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0D50(0x0004) MISSED OFFSET
	float                                              KDSSelectionTimeLimit;                                    // 0x0D54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FrontEntranceTimeLimit;                                   // 0x0D58(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FrontLeadTimeLimit;                                       // 0x0D5C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitMinRange;                                  // 0x0D60(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitMaxRange;                                  // 0x0D64(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitParamA;                                    // 0x0D68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitParamB;                                    // 0x0D6C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitParamC;                                    // 0x0D70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitResetTimeMin;                              // 0x0D74(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurroundPursuitResetTimeMax;                              // 0x0D78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLargePlane;                                            // 0x0D7C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsVTOLPlane;                                             // 0x0D7D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0D7E(0x0006) MISSED OFFSET
	float                                              LargePlaneBankAngle;                                      // 0x0D84(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LargePlanePitchAngle;                                     // 0x0D88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LargePlaneRollSpeedOnPath;                                // 0x0D8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RootHeight;                                               // 0x0D90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxGroundRotateAngle;                                     // 0x0D94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FDataTableRowHandle                         VFXSocketTable;                                           // 0x0D98(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EAIState                                           CurrentRunningState;                                      // 0x0DA8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0DA9(0x0007) MISSED OFFSET
	class APlayerPlane*                                NearestPlayerPlane;                                       // 0x0DB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0DB8(0x0008) MISSED OFFSET
	class AGameObject*                                 EscapeFromPursuerActor;                                   // 0x0DC0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 MoveAwayFromTargetActor;                                  // 0x0DC8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x60];                                      // 0x0DD0(0x0060) MISSED OFFSET
	float                                              InCloudMovementDegradePercent;                            // 0x0E30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x20];                                      // 0x0E34(0x0020) MISSED OFFSET
	bool                                               bDamagedRotate;                                           // 0x0E54(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0E55(0x0003) MISSED OFFSET
	float                                              DamagedRotateIntervalMin;                                 // 0x0E58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagedRotateIntervalMax;                                 // 0x0E5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamagedRotateNum;                                         // 0x0E60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0E64(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        PlaneBodyStaticMeshComponent;                             // 0x0E68(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PlaneBodySkelMeshComponent;                               // 0x0E70(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PilotMeshComponent;                                       // 0x0E78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x30];                                      // 0x0E80(0x0030) MISSED OFFSET
	class AGameObject*                                 LastAttackingGunOwner;                                    // 0x0EB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0EB8(0x0004) MISSED OFFSET
	bool                                               bEnableKDSMode;                                           // 0x0EBC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x0EBD(0x0002) MISSED OFFSET
	bool                                               bIsInCloud;                                               // 0x0EBF(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              WingTipEffectExitCloudDuration;                           // 0x0EC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x28];                                      // 0x0EC4(0x0028) MISSED OFFSET
	float                                              BattleSituationLowHealthThreshold;                        // 0x0EEC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BattleSituationRelativeLowAltitude;                       // 0x0EF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BattleSituationRelativeHighAltitude;                      // 0x0EF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EKDSPhase                                          KDSPhase;                                                 // 0x0EF8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x23];                                      // 0x0EF9(0x0023) MISSED OFFSET
	float                                              OverrideMaxSpeed;                                         // 0x0F1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0F20(0x0004) MISSED OFFSET
	float                                              OverrideNormalSpeed;                                      // 0x0F24(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              VariableWingMinSpeedKmph;                                 // 0x0F28(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x44];                                      // 0x0F2C(0x0044) MISSED OFFSET
	class UBehaviorTreeComponent*                      BTComponent;                                              // 0x0F70(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBlackboardComponent*                        BlackboardComponent;                                      // 0x0F78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData16[0x1E0];                                     // 0x0F80(0x01E0) MISSED OFFSET
	class UDataTable*                                  PartsAnimationParamDataTable;                             // 0x1160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPlaneRadioStateComponent*                   RadioStateComp;                                           // 0x1168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bCanManeuverPugachevsCobra;                               // 0x1170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanManeuverKulbit;                                       // 0x1171(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasInstabilityInFormation;                               // 0x1172(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0xD];                                       // 0x1173(0x000D) MISSED OFFSET
	class UAIPlaneBehaviorWork*                        BehaviorWork;                                             // 0x1180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMeshComponent*                              PlaneBodyMeshComponent;                                   // 0x1188(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LandingGearOnMeshComponent;                               // 0x1190(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LandingGearOffMeshComponent;                              // 0x1198(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeOffMesh;                                       // 0x11A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeNavyMesh;                                      // 0x11A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeAirforceMesh;                                  // 0x11B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPlaneVFXComponent*                          PlaneVFXComponent;                                        // 0x11B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData18[0x28];                                      // 0x11C0(0x0028) MISSED OFFSET
	struct FDamageImbalanceAnimSettings                DamageImbalanceAnimSettings;                              // 0x11E8(0x0038) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData19[0x50];                                      // 0x1220(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIPlane");
		return ptr;
	}


	void StopImbalanceAnime();
	void StartDamagedRotate();
	void SetFormationLightEmissive(float intensity);
	void SetFELocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation);
	void SetCurrentBehaviorTreeName(const struct FString& Name);
	void SetCloudAvoidanceAbility(bool CloudAvoidanceAbility);
	void SetBehaviorActive(bool BehaviorActiveState);
	void SetAutopilotYawRelative(float RelativeAngle, float Power);
	void SetAutopilotRollRelative(float RelativeAngle, float Power);
	void SetAutopilotRoll(float AbsoluteAngle, float Power);
	void SetAutopilotPitchRelative(float RelativeAngle, float Power);
	bool SearchFrontCloudDirection();
	void RequestSpecialAction(const struct FAISpecialActionRequestInfo& SpecialActionRequestInfo);
	void PlayImbalanceAnime(class UCurveVector* InRotationCurveData);
	void OverwriteFELocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation);
	void OverrideAIPlaneConfig(class UDataTable* AIPlaneConfig);
	void OnUpdateAIState();
	void OnPostAIState();
	bool IsStrictDrift();
	bool IsInKDSP2();
	bool IsInKDSP1();
	bool IsInCloud();
	bool IsFireMissileFinished();
	bool IsEnabledSurroundPursuitTarget();
	bool IsDrift();
	bool IsApproachingCloud();
	void InputYaw(float Power);
	void InputRoll(float Power);
	void InputPitch(float Power);
	float GetTurnSpeed();
	float GetMinSpeed();
	float GetMaxSpeed();
	float GetDecelerationMpss();
	struct FNimbusCockpitPartsAnim GetCockpitPartsAnimation();
	struct FNimbusBodyPartsAnim GetBodyPartsAnimation();
	float GetAccelerationMpss();
	void FrameUpdate(float DeltaSeconds);
	void EnableTakeoffAfterburner(bool bEnable);
	void EnableLandingGear(bool bEnable, float InDelayTime);
	void EnableAvoidObstacle(bool bEnable);
	void CheckAvoidObstacle();
	void AutopilotHorizontalYaw(float Power);
	void AutopilotAdjustSpeed(float spd, float Power);
	void AIFlightEngineTick(float DeltaTimeSeconds);
	void AIFlightEngineRepositionDebugUseOnly();
};


// Class Nimbus.AIPlaneBehaviorWork
// 0x03A0 (0x03C8 - 0x0028)
class UAIPlaneBehaviorWork : public UObject
{
public:
	class UBlackboardComponent*                        OwningBlackboard;                                         // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FAIPlaneBehaviorManeuverAileronRollWork     ManeuverAileronRollWork;                                  // 0x0030(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FAIPlaneBehaviorManeuverBarrelRollWork      ManeuverBarrelRollWork;                                   // 0x0038(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverCloudReactionWork   ManeuverCloudReactionWork;                                // 0x0060(0x0038) (Transient)
	struct FAIPlaneBehaviorManeuverCobraTurnWork       ManeuverCobraTurnWork;                                    // 0x0098(0x0005) (Transient)
	struct FAIPlaneBehaviorManeuverFlatSpinWork        ManeuverFlatSpinWork;                                     // 0x009D(0x0005) (Transient)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	struct FAIPlaneBehaviorManeuverFlyStraightWork     ManeuverFlyStraightWork;                                  // 0x00A8(0x0020) (Transient)
	struct FAIPlaneBehaviorManeuverKulbitWork          ManeuverKulbitWork;                                       // 0x00C8(0x0005) (Transient)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	struct FAIPlaneBehaviorManeuverLevelWork           ManeuverLevelWork;                                        // 0x00D0(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverPitchWork           ManeuverPitchWork;                                        // 0x00F8(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverPugachevsCobraWork  ManeuverPugachevsCobraWork;                               // 0x0120(0x000C) (Transient)
	unsigned char                                      UnknownData03[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FAIPlaneBehaviorManeuverRollWork            ManeuverRollWork;                                         // 0x0130(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverSlalomWork          ManeuverSlalomWork;                                       // 0x0158(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverStateUninterruptibleWork ManeuverStateUninterruptibleWork;                         // 0x0180(0x0003) (Transient)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
	struct FAIPlaneBehaviorManeuverTurnAdvancedWork    ManeuverTurnAdvancedWork;                                 // 0x0188(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverTurnNormalWork      ManeuverTurnNormalWork;                                   // 0x01B0(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverTurnQuickWork       ManeuverTurnQuickWork;                                    // 0x01D8(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverTurnToPointWork     ManeuverTurnToPointWork;                                  // 0x0200(0x0028) (Transient)
	struct FAIPlaneBehaviorManeuverYawWork             ManeuverYawWork;                                          // 0x0228(0x0028) (Transient)
	struct FAIPlaneBehaviorShieldWork                  ShieldWork;                                               // 0x0250(0x0018) (Transient)
	struct FAIPlaneBehaviorReturnToUnitCircleWork      ReturnToUnitCircleWork;                                   // 0x0268(0x0003) (Transient)
	unsigned char                                      UnknownData05[0x1];                                       // 0x026B(0x0001) MISSED OFFSET
	struct FAIPlaneBehaviorPursueTargetWork            PursueTargetWork;                                         // 0x026C(0x000C) (Transient)
	struct FAIPlaneBehaviorOutOfWorldReactionWork      OutOfWorldReactionWork;                                   // 0x0278(0x0018) (Transient)
	struct FAIPlaneBehaviorMoveToTargetWork            MoveToTargetWork;                                         // 0x0290(0x0010) (Transient)
	struct FAIPlaneBehaviorMoveAwayFromTargetWork      MoveAwayFromTargetWork;                                   // 0x02A0(0x0018) (Transient)
	struct FAIPlaneBehaviorLevelPlaneWork              LevelPlaneWork;                                           // 0x02B8(0x0002) (Transient)
	unsigned char                                      UnknownData06[0x2];                                       // 0x02BA(0x0002) MISSED OFFSET
	struct FAIPlaneBehaviorGoFormationWork             GoFormationWork;                                          // 0x02BC(0x0040) (Transient)
	struct FAIPlaneBehaviorFlyToClearAltitudeWork      FlyToClearAltitudeWork;                                   // 0x02FC(0x0008) (Transient)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0304(0x0004) MISSED OFFSET
	struct FAIPlaneBehaviorAvoidObstacleWork           AvoidObstacleWork;                                        // 0x0308(0x0030) (Transient)
	struct FAIPlaneBehaviorAutoDestructWork            AutoDestructWork;                                         // 0x0338(0x0018) (Transient)
	struct FAIPlaneBehaviorAreaPatrolWork              AreaPatrolWork;                                           // 0x0350(0x0014) (Transient)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	struct FAIPlaneBehaviorActivateFlaresWork          ActivateFlaresWork;                                       // 0x0368(0x0010) (Transient)
	TMap<struct FName, struct FBlackboardKeySelector>  BlackboardKeyMap;                                         // 0x0378(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIPlaneBehaviorWork");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeInfoDataAsset
// 0x00F8 (0x0128 - 0x0030)
class UAircraftTreeInfoDataAsset : public UDataAsset
{
public:
	struct FAircraftTreeZoomInfo                       ZoomIn;                                                   // 0x0030(0x0010) (Edit, IsPlainOldData)
	struct FAircraftTreeZoomInfo                       ZoomOut;                                                  // 0x0040(0x0010) (Edit, IsPlainOldData)
	struct FAircraftTreeZoomInfo                       ZoomObtain;                                               // 0x0050(0x0010) (Edit, IsPlainOldData)
	struct FAircraftTreeZoomInfo                       TreeFadeIn;                                               // 0x0060(0x0010) (Edit, IsPlainOldData)
	struct FAircraftTreeZoomInfo                       TreeFadeOut;                                              // 0x0070(0x0010) (Edit, IsPlainOldData)
	class UUICategoryColor*                            NodeColor;                                                // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUICategoryColor*                            NodeIconColor;                                            // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColorLock;                                            // 0x0090(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                LineColorUnLock;                                          // 0x00A0(0x0010) (Edit, IsPlainOldData)
	float                                              LineThicknessLock;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LineThicknessUnLock;                                      // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FindLRNodeLimitDistance;                                  // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FindLRNodeLimitAxisDistance;                              // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FindUDNodeLimitDistance;                                  // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FindUDNodeLimitAxisDistance;                              // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           AnimHeadMatInstance;                                      // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   AnimHeadSize;                                             // 0x00D0(0x0008) (Edit, IsPlainOldData)
	struct FLinearColor                                AnimHeadColor;                                            // 0x00D8(0x0010) (Edit, IsPlainOldData)
	float                                              AnimTimeFirstVisitFocusWait;                              // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimTimeMoveFocus;                                        // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimTimeDrawLine;                                         // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimTimeDrawBox;                                          // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimTimeFadeInNode;                                       // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimTimeWait;                                             // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CursorMoveSpeed;                                          // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CursorMoveTimeLimit;                                      // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<uint32_t>                                   UnlockRewardCheckEmblems;                                 // 0x0108(0x0010) (Edit, ZeroConstructor)
	TArray<uint32_t>                                   UnlockRewardCheckNicknames;                               // 0x0118(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeInfoDataAsset");
		return ptr;
	}

};


// Class Nimbus.AirCurrentVolume
// 0x0128 (0x04C8 - 0x03A0)
class AAirCurrentVolume : public AVolume
{
public:
	class UArrowComponent*                             DirectionComponent;                                       // 0x03A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Strength;                                                 // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceRange;                                          // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowTurbulenceInOppDir;                                 // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	float                                              OppDirProbability;                                        // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceStableDurationMin;                              // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceStableDurationMax;                              // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceMaxEffectDelay;                                 // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceFadeDelay;                                      // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceRotationRate;                                   // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceMaxRotationAngle;                               // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurbulenceRotationDelay;                                  // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x34];                                      // 0x03D4(0x0034) MISSED OFFSET
	TArray<class AGameObject*>                         OverlappingPlanes;                                        // 0x0408(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         ExitingPlanes;                                            // 0x0418(0x0010) (ZeroConstructor, Transient)
	TMap<class AGameObject*, struct FPlaneTurbulenceData> PlaneTurbulenceVars;                                      // 0x0428(0x0050) (ZeroConstructor, Transient)
	TMap<class AGameObject*, struct FPlaneTurbulenceData> PlaneExitTurbulenceTimers;                                // 0x0478(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AirCurrentVolume");
		return ptr;
	}


	void OnPreRestartPhaseEvent();
};


// Class Nimbus.MultiplayerZone
// 0x0028 (0x03C8 - 0x03A0)
class AMultiplayerZone : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET
	int                                                ID;                                                       // 0x03A8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	bool                                               bIsActivated;                                             // 0x03B0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x17];                                      // 0x03B1(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiplayerZone");
		return ptr;
	}


	void Activate(bool bActive, float Duration);
};


// Class Nimbus.AirSuperiorityZone
// 0x0018 (0x03E0 - 0x03C8)
class AAirSuperiorityZone : public AMultiplayerZone
{
public:
	TArray<struct FPlaneInZone>                        AllPlanesInZone;                                          // 0x03C8(0x0010) (ZeroConstructor)
	float                                              ScorePerSecond;                                           // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AirSuperiorityZone");
		return ptr;
	}

};


// Class Nimbus.AITurnToTargetComponent
// 0x0318 (0x0410 - 0x00F8)
class UAITurnToTargetComponent : public UAIComponentBase
{
public:
	bool                                               bRegulateTick;                                            // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              MinRegulateTickDistanceUU;                                // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRegulateTickDistanceUU;                                // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRegulateTickInterval;                                  // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRegulateTickInterval;                                  // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	struct FString                                     MeshToTurnName;                                           // 0x0110(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     PitchBoneName;                                            // 0x0120(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              PitchRate;                                                // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchAngleOffsetMin;                                      // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchAngleOffsetMax;                                      // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	struct FString                                     YawBoneName;                                              // 0x0140(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              YawRate;                                                  // 0x0150(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              YawAngleOffsetMin;                                        // 0x0154(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              YawAngleOffsetMax;                                        // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalAngleOffset;                                      // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AngleDifferenceThreshold;                                 // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttacksWithSweep;                                        // 0x0164(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0165(0x0003) MISSED OFFSET
	float                                              MinAttackInterval;                                        // 0x0168(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAttackInterval;                                        // 0x016C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartDirectionOffset;                                     // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndDirectionOffset;                                       // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StayAtStartDuration;                                      // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StayAtEndDuration;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TurnRateMultiplier;                                       // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSetOriginalRotationToParentRotation;                     // 0x0184(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0185(0x0003) MISSED OFFSET
	float                                              YawRate_TurningToOriginalRotation;                        // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0xFC];                                      // 0x018C(0x00FC) MISSED OFFSET
	class AGameObject*                                 TurnToTarget;                                             // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0290(0x0018) MISSED OFFSET
	class USceneComponent*                             ObjectToTurn;                                             // 0x02A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPoseableMeshComponent*                      PoseableMeshToTurn;                                       // 0x02B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SkeletalMeshToTurn;                                       // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkinnedMeshComponent*                       SkinnedMeshToTurn;                                        // 0x02C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData07[0x38];                                      // 0x02C8(0x0038) MISSED OFFSET
	class AGameObject*                                 SweepTarget;                                              // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x108];                                     // 0x0308(0x0108) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AITurnToTargetComponent");
		return ptr;
	}


	void TurnToOriginal();
	bool SetTurnToTarget(class AGameObject* TargetToTurnTo);
	bool SetTurnToLocation(const struct FVector& LocationToTurnTo);
	bool SetTurnToDirection(const struct FVector& DirectionToTurnTo);
	void PerformTargetSweep(class AGameObject* Target);
	void PerformCustomSweep(const struct FVector& StartDirection, const struct FVector& EndDirection, float StayAtStartDuration, float StayAtEndDuration, float TurnRateMultiplier, bool bSweepLongerDirection);
	bool IsSweeping();
	bool IsStartingSweep();
	bool HasCompletedTurning();
	struct FTransform GetYawBoneTransform();
	struct FVector GetTurnToDirection();
	struct FRotator GetTurnRotation();
	struct FVector GetTurnForwardVector();
	struct FTransform GetPitchBoneTransform();
};


// Class Nimbus.AIUAVComponent
// 0x00E8 (0x01E0 - 0x00F8)
class UAIUAVComponent : public UAIComponentBase
{
public:
	float                                              LaunchDuration;                                           // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaunchInitialSpeedMeters;                                 // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0100(0x0004) MISSED OFFSET
	float                                              LaunchAcceleration;                                       // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LaunchVFXComponentName;                                   // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	float                                              UndockOffsetZMin;                                         // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UndockOffsetZMax;                                         // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UndockIntervalSeconds;                                    // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UndockDuration;                                           // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UndockFlipDelay;                                          // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DockRadiusMeters;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0128(0x0004) MISSED OFFSET
	float                                              DockDuration;                                             // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DockFlipDelay;                                            // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVisibleWhileDocked;                                      // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	class AGameObject*                                 DockedParent;                                             // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIPlane*                                    OwningPlane;                                              // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             DockedMeshComponent;                                      // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FName                                       DockedSocketName;                                         // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMeshComponent*                              PlaneBodyMesh;                                            // 0x0158(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PlaneBodySkeletalMesh;                                    // 0x0160(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    LaunchVFXTrailParticles;                                  // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x60];                                      // 0x0170(0x0060) MISSED OFFSET
	TArray<class UActorComponent*>                     EnabledTickComponentBackupList;                           // 0x01D0(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AIUAVComponent");
		return ptr;
	}


	void STATIC_ResetUAVDockSlots();
	void OnVisibilityChanged(bool bVisibility);
	void Launch();
};


// Class Nimbus.AnimatedCameraComponent
// 0x0100 (0x0A50 - 0x0950)
class UAnimatedCameraComponent : public UCameraComponent
{
public:
	class APlayerPlane*                                Player;                                                   // 0x0950(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0958(0x0008) MISSED OFFSET
	float                                              AccelerationEaseDuration;                                 // 0x0960(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollEaseDuration;                                         // 0x0964(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchEaseDuration;                                        // 0x0968(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawEaseDuration;                                          // 0x096C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AccelerationEaseDurationExpert;                           // 0x0970(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollEaseDurationExpert;                                   // 0x0974(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollEaseDurationRatioExpert;                              // 0x0978(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchEaseDurationExpert;                                  // 0x097C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawEaseDurationExpert;                                    // 0x0980(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0984(0x0004) MISSED OFFSET
	struct FName                                       TrackReferenceBoneName;                                   // 0x0988(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsExpertMode;                                            // 0x0990(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6F];                                      // 0x0991(0x006F) MISSED OFFSET
	class UCameraFocusTargetComponent*                 FocusTarget;                                              // 0x0A00(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0A08(0x0018) MISSED OFFSET
	TArray<struct FCameraImageEffectData>              CameraImageEffectMoveList;                                // 0x0A20(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0A30(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AnimatedCameraComponent");
		return ptr;
	}

};


// Class Nimbus.ApproachDistObservationComponent
// 0x0030 (0x0120 - 0x00F0)
class UApproachDistObservationComponent : public UNimbusGameObjectComponent
{
public:
	TArray<class AGameObject*>                         ApproachGameObjects;                                      // 0x00F0(0x0010) (ZeroConstructor)
	class AActor*                                      ApproachTarget;                                           // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	class APlayerPlane*                                OwnerPlayer;                                              // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ApproachDistObservationComponent");
		return ptr;
	}


	void RemoveApproachGameObject(class AGameObject* AddGameObject);
	bool IsApproachGameObjectsAllDead();
	float GetRemainingDistanceMeter();
	void AddApproachGameObject(class AGameObject* AddGameObject);
};


// Class Nimbus.WeaponParameters
// 0x0090 (0x00B8 - 0x0028)
class UWeaponParameters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0028(0x0078) MISSED OFFSET
	class UWeaponParameters*                           ChildWeaponParameters;                                    // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponParameters");
		return ptr;
	}

};


// Class Nimbus.ExplosiveWeaponParameters
// 0x0020 (0x00D8 - 0x00B8)
class UExplosiveWeaponParameters : public UWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ExplosiveWeaponParameters");
		return ptr;
	}

};


// Class Nimbus.ArtilleryParameters
// 0x0008 (0x00E0 - 0x00D8)
class UArtilleryParameters : public UExplosiveWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ArtilleryParameters");
		return ptr;
	}

};


// Class Nimbus.NimbusObjectPoolItem
// 0x0028 (0x0390 - 0x0368)
class ANimbusObjectPoolItem : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0368(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusObjectPoolItem");
		return ptr;
	}

};


// Class Nimbus.WeaponBase
// 0x0290 (0x0620 - 0x0390)
class AWeaponBase : public ANimbusObjectPoolItem
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0390(0x0020) MISSED OFFSET
	EWeaponID                                          WeaponID;                                                 // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03B1(0x0007) MISSED OFFSET
	class AGameObject*                                 OwningGameObject;                                         // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AWeaponBase*                                 OwnerWeapon;                                              // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      AnimationMesh;                                            // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03E0(0x0008) MISSED OFFSET
	class UStaticMesh*                                 AnimationEndStaticMesh;                                   // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWeaponMovementComponent*                    WeaponMovement;                                           // 0x03F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x03F8(0x0020) MISSED OFFSET
	class AGameObject*                                 TargetToHome;                                             // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x0420(0x000C) MISSED OFFSET
	bool                                               bCollided;                                                // 0x042C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x042D(0x0003) MISSED OFFSET
	float                                              Damage;                                                   // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LoadTime;                                                 // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnAngleLimit;                                          // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpawnAngle;                                            // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxLoadedCount;                                           // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFireAllInOneShot;                                        // 0x0448(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAutoFireOnHold;                                          // 0x0449(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x044A(0x0002) MISSED OFFSET
	float                                              VolleyRestInterval;                                       // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReloadOnFire;                                            // 0x0450(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReloadAfterAllFired;                                     // 0x0451(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldTreatAsOneWeapon;                                  // 0x0452(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanUseSameSlot;                                          // 0x0453(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGeneratePlayerFiringEvents;                              // 0x0454(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSwitchWeaponOnLastDestroyed;                             // 0x0455(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsHoming;                                                // 0x0456(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresHomeTarget;                                      // 0x0457(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingForesightAmount;                                    // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCameraLockOn;                                         // 0x045C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETargetType                                        LockOnTargetType;                                         // 0x045D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x045E(0x0002) MISSED OFFSET
	int                                                PotentialTargets;                                         // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMultipleLockOn;                                          // 0x0464(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	int                                                MultipleLockOnMaxNum;                                     // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonAngle;                                              // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonRange;                                              // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TargetSelectionMidRange;                                  // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              LockonInitialSpeed;                                       // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonMaximumSpeed;                                       // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonAccelerationTime;                                   // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonDelayBetweenSeekers;                                // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonReductionInCloud;                                   // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonRangeReductionInCloud;                              // 0x048C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESelectionAssistType                               SelectionAssistType;                                      // 0x0490(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0491(0x0003) MISSED OFFSET
	float                                              SelectionAssistRange;                                     // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              SelectionAssistRadius;                                    // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              SelectionAssistAngle;                                     // 0x049C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SelectionAssistAngleForRemotePlayer;                      // 0x04A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SelectionAssistLockOnTime;                                // 0x04A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  LevelModifiersDataTable;                                  // 0x04A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFCSUseBaseLockOn;                                        // 0x04B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFCSUseObjectLockOn;                                      // 0x04B1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x04B2(0x0002) MISSED OFFSET
	float                                              FCSAngleLimit;                                            // 0x04B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FCSActivationTime;                                        // 0x04B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FCSVolleyTime;                                            // 0x04BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FCSVolleyFireInterval;                                    // 0x04C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FCSVolleyRestInterval;                                    // 0x04C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FCSForesightAmount;                                       // 0x04C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldResetTimer;                                        // 0x04CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGunReaction;                                             // 0x04CD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x04CE(0x0002) MISSED OFFSET
	float                                              FCSActivationDist;                                        // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FCSActivationMinDist;                                     // 0x04D4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FWeaponHangarSettings                       WeaponHangarSettings;                                     // 0x04D8(0x0028) (Edit, DisableEditOnInstance)
	float                                              TrailTime;                                                // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	class UParticleSystem*                             OnSpawnParticles;                                         // 0x0508(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachSpawnParticlesToOwner;                             // 0x0510(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0511(0x0007) MISSED OFFSET
	class UParticleSystem*                             OnCollisionParticles;                                     // 0x0518(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnSeaCollisionParticle;                                   // 0x0520(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnGroundCollisionParticle;                                // 0x0528(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnConcreteCollisionParticle;                              // 0x0530(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnGlassCollisionParticle;                                 // 0x0538(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnIceCollisionParticle;                                   // 0x0540(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  WeaponBackgroundTexture;                                  // 0x0548(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  WeaponFillTexture;                                        // 0x0550(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          OnOthersCollisionDecal;                                   // 0x0558(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          OnConcreteCollisionDecal;                                 // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OnCollisionDecalSize;                                     // 0x0568(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               ContinuousFireStartSoundEvent;                            // 0x0578(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               ContinuousFireStopSoundEvent;                             // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               OneShotSoundEvent;                                        // 0x0588(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               LoopStartSoundEvent;                                      // 0x0590(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               LoopStopSoundEvent;                                       // 0x0598(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESoundChannelType                                  SpecializedCollisionSound;                                // 0x05A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsOneShotSoundEventOwner;                                // 0x05A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsPlayCameraShakeImpactResponse;                         // 0x05A2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ENimbusCameraShakeConditions                       PlayCameraShakeImpactResponse_Conditions;                 // 0x05A3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ENimbusCameraShakeType                             PlayCameraShakeImpactResponse_Type;                       // 0x05A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBreaksOwnerStealthWhileActive;                           // 0x05A5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x7A];                                      // 0x05A6(0x007A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponBase");
		return ptr;
	}


	void OnWeaponDestroyed();
	void OnInitialized();
	void OnImpact(const struct FHitResult& HitResult, const struct FVector& OldVelocity);
	void OnCreateWeapon_BP();
	bool IsDestroyed();
	EWeaponID GetWeaponID();
	class AGameObject* GetTargetToHome();
	float GetSelectionAssistRange();
	float GetSelectionAssistRadius();
	float GetSelectionAssistLockOnTime();
	float GetSelectionAssistAngle();
	float GetLifeTime();
};


// Class Nimbus.ExplosiveWeapon
// 0x0108 (0x0728 - 0x0620)
class AExplosiveWeapon : public AWeaponBase
{
public:
	float                                              ImpactRadius;                                             // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ExplosionRadius;                                          // 0x0624(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AreaOfEffectDamage;                                       // 0x0628(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x062C(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypes;                                              // 0x0630(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class AActor*>                              ActorsToIgnore;                                           // 0x0640(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              DamageDelay;                                              // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageDelaySpread;                                       // 0x0654(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0655(0x0003) MISSED OFFSET
	float                                              DamageDelaySpreadSpeed;                                   // 0x0658(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialSpeed;                                             // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              IgnitionInitialSpeed;                                     // 0x0660(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              OverrideExternalVelocitySpeed;                            // 0x0664(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FreefallAcceleration;                                     // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FreefallRotation;                                         // 0x066C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnAirExplosionParticles;                                  // 0x0670(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnCollisionParticlesDestroyedTarget;                      // 0x0678(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSeaExplosionInfo                           SeaExplosionInfo;                                         // 0x0680(0x0008) (Edit, DisableEditOnInstance)
	float                                              LockonHeight;                                             // 0x0688(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x9C];                                      // 0x068C(0x009C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ExplosiveWeapon");
		return ptr;
	}


	void OnTargetMiss();
	void OnMovementReportMiss();
	void InformTargetBeingAttacked(bool bIsAttacked);
};


// Class Nimbus.Artillery
// 0x0008 (0x0730 - 0x0728)
class AArtillery : public AExplosiveWeapon
{
public:
	float                                              SpreadRadius;                                             // 0x0728(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TargetOffsetZ;                                            // 0x072C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Artillery");
		return ptr;
	}

};


// Class Nimbus.AssetViewerManager
// 0x0348 (0x06B0 - 0x0368)
class AAssetViewerManager : public AActor
{
public:
	struct FString                                     CameraPrefix;                                             // 0x0368(0x0010) (Edit, ZeroConstructor, EditConst)
	class UTextureCube*                                ReflectionCubeMap;                                        // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     ReflectionCubeMapParameterName;                           // 0x0380(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	struct FString                                     DirectionalLightPrefix;                                   // 0x0390(0x0010) (Edit, ZeroConstructor, EditConst)
	float                                              InputScrollInterval;                                      // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InputAxisThreshold;                                       // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraRotationChangeSpeed;                                // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActorRotationChangeSpeed;                                 // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PositionChangeSpeed;                                      // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZoomChangeSpeed;                                          // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FOVChangeSpeed;                                           // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenShotResolution;                                     // 0x03BC(0x0008) (Edit, IsPlainOldData)
	bool                                               bBackgroundIsAlpha;                                       // 0x03C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03C5(0x0003) MISSED OFFSET
	struct FAssetViewerRegistryNode                    Registry[0x8];                                            // 0x03C8(0x0040) (Edit, DisableEditOnInstance)
	EAVRegistryState                                   RegistryState;                                            // 0x05C8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET
	class UClass*                                      AssetViewerWidgetClass;                                   // 0x05D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAssetViewerWidget*                          AssetViewerWidget;                                        // 0x05D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArmComponent;                                       // 0x05E0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            CameraComponent;                                          // 0x05E8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class ALight*                                      DirectionalLight;                                         // 0x05F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      CurrentSelectedActor;                                     // 0x05F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      AssetObject;                                              // 0x0600(0x0008) (ZeroConstructor, IsPlainOldData)
	class APlayerPlane*                                PlayerPlaneAssetObject;                                   // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData)
	class AAIGameObject*                               AIAssetObject;                                            // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData)
	class AAIPlane*                                    AIPlaneAssetObject;                                       // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0620(0x0050) MISSED OFFSET
	bool                                               bShowingPilot;                                            // 0x0670(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowingWeapons;                                          // 0x0671(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowingLandingGear;                                      // 0x0672(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowingRefuelGear;                                       // 0x0673(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3C];                                      // 0x0674(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AssetViewerManager");
		return ptr;
	}

};


// Class Nimbus.AssetViewerWidget
// 0x0160 (0x0368 - 0x0208)
class UAssetViewerWidget : public UUserWidget
{
public:
	struct FSlateFontInfo                              FontStyle;                                                // 0x0208(0x0058) (Edit, DisableEditOnInstance)
	struct FSlateColor                                 MainFontColor;                                            // 0x0260(0x0028) (Edit, DisableEditOnInstance)
	struct FSlateColor                                 SelectedFontColor;                                        // 0x0288(0x0028) (Edit, DisableEditOnInstance)
	float                                              ScrollBarItemOffset;                                      // 0x02B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02B4(0x0004) MISSED OFFSET
	class UTextBlock*                                  RegistryText;                                             // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  RegistryScrollBox;                                        // 0x02C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                PlayerInfoCanvas;                                         // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              SWPNoHBox;                                                // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CurrentCameraText;                                        // 0x02D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraLocationXText;                                      // 0x02E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraLocationYText;                                      // 0x02E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraLocationZText;                                      // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraRotationPitchText;                                  // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraRotationYawText;                                    // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraRotationRollText;                                   // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraDistText;                                           // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CameraFOVText;                                            // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CurrentActorText;                                         // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorLocationXText;                                       // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorLocationYText;                                       // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorLocationZText;                                       // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorRotationPitchText;                                   // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorRotationYawText;                                     // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ActorRotationRollText;                                    // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AAssetViewerManager*                         AssetViewerManager;                                       // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0360(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AssetViewerWidget");
		return ptr;
	}

};


// Class Nimbus.AsyncTaskActivateUnit
// 0x0050 (0x0088 - 0x0038)
class UAsyncTaskActivateUnit : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnExit;                                                   // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UVariableComparator*                         ActivationCondition;                                      // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUnit*                                       UnitToActivate;                                           // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      ReferenceActor;                                           // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0068(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AsyncTaskActivateUnit");
		return ptr;
	}


	class UAsyncTaskActivateUnit* STATIC_ActivateUnit(class AUnit* Unit, class UVariableComparator* ConditionToActivate, float DelayInSeconds, EUnitActivationType ActivationType, const struct FVector& Position, const struct FRotator& Rotation, class AActor* TransformReferenceActor, bool bAddHeightOfGroundToZ, const struct FString& Comment, bool bEnabledDelay);
};


// Class Nimbus.AsyncTaskMissionRequestIGC
// 0x0050 (0x0088 - 0x0038)
class UAsyncTaskMissionRequestIGC : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnExit;                                                   // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0048(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AsyncTaskMissionRequestIGC");
		return ptr;
	}


	class UAsyncTaskMissionRequestIGC* STATIC_RequestIGC(class AMatineeActor* MatineeActor, EMultiplayerIGCType IGCType, class UDataTable* BeginSubtitleDataTable, class UAkAudioEvent* BeginVoiceEvent, EIGCTransitionType TransitionType, bool bBeginFade, bool bBeginUpdateShadowDistanceScale, float BeginShadowDistance, class UAkAudioEvent* EndVoiceEvent, bool bEndFade, const struct FName& MiniGameMapPhaseName, bool bStopBGMWhenSkip, class UAkAudioEvent* OverrideStopBGMEventWhenSkip);
};


// Class Nimbus.AsyncTaskProcessUnit
// 0x0010 (0x0048 - 0x0038)
class UAsyncTaskProcessUnit : public UBlueprintAsyncActionBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	class UVariableComparator*                         ExitCondition;                                            // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AsyncTaskProcessUnit");
		return ptr;
	}


	void STATIC_StopTask(class AUnit* Target, bool bIsInterrupted, bool bCallExit);
};


// Class Nimbus.AsyncTaskMoveUnit
// 0x0060 (0x00A8 - 0x0048)
class UAsyncTaskMoveUnit : public UAsyncTaskProcessUnit
{
public:
	struct FScriptMulticastDelegate                    OnExit;                                                   // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET
	class AActor*                                      Actor;                                                    // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0078(0x0010) MISSED OFFSET
	class AGameObject*                                 SpeedRefActor;                                            // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIPath*                                     AIPath;                                                   // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0098(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AsyncTaskMoveUnit");
		return ptr;
	}


	class UAsyncTaskMoveUnit* STATIC_MoveToLocation(class AUnit* Target, const struct FVector& Location, class UVariableComparator* InterruptCondition, float MinDistanceToLocationInMeters, float SpeedKmph, float TimeLimitInSeconds, bool bBoostable, const struct FString& Comment);
	class UAsyncTaskMoveUnit* STATIC_MoveToActor(class AUnit* Target, class AActor* Actor, class UVariableComparator* InterruptCondition, float MinDistanceToLocationInMeters, float SpeedKmph, float TimeLimitInSeconds, const struct FVector& OffsetFromActor, bool bBoostable, const struct FString& Comment);
	class UAsyncTaskMoveUnit* STATIC_MoveOnPath(class AUnit* Target, class AAIPath* AIPath, class UVariableComparator* InterruptCondition, float TimeLimitInSeconds, float SpeedKmph, float AccelerationMpss, float RotationSpeedDegree, float PointRadiusMeter, bool bTeleportUnitLocation, bool bUseApproachActorForwardVector, bool bBoostable, const struct FString& Comment);
};


// Class Nimbus.AsyncTaskStopUnit
// 0x0010 (0x0058 - 0x0048)
class UAsyncTaskStopUnit : public UAsyncTaskProcessUnit
{
public:
	struct FScriptMulticastDelegate                    OnExit;                                                   // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AsyncTaskStopUnit");
		return ptr;
	}


	class UAsyncTaskStopUnit* STATIC_StopUnit(class AUnit* Target, class UVariableComparator* InterruptCondition, float StopDurationInSeconds, const struct FString& Comment);
};


// Class Nimbus.AttachedInstantWeaponParameters
// 0x0008 (0x00C0 - 0x00B8)
class UAttachedInstantWeaponParameters : public UWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AttachedInstantWeaponParameters");
		return ptr;
	}

};


// Class Nimbus.AttachedWeapon
// 0x0018 (0x0638 - 0x0620)
class AAttachedWeapon : public AWeaponBase
{
public:
	bool                                               bIsBaseAttached;                                          // 0x0620(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0621(0x0007) MISSED OFFSET
	class USceneComponent*                             AttachedComponent;                                        // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachedSocketName;                                       // 0x0630(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AttachedWeapon");
		return ptr;
	}

};


// Class Nimbus.AttachedInstantWeapon
// 0x0140 (0x0778 - 0x0638)
class AAttachedInstantWeapon : public AAttachedWeapon
{
public:
	float                                              DamageDistance;                                           // 0x0638(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x063C(0x0004) MISSED OFFSET
	float                                              DamageRadiusCampaign;                                     // 0x0640(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DamageRadiusVersus;                                       // 0x0644(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DamageStartDelay;                                         // 0x0648(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageInterval;                                           // 0x064C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponWarmUpTime;                                         // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DamageRadiusCampaignCurves;                               // 0x0658(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageRadiusVersusCurves;                                 // 0x0660(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0668(0x0018) MISSED OFFSET
	float                                              RayDistance;                                              // 0x0680(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RayRadius;                                                // 0x0684(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCloudCheck;                                              // 0x0688(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0689(0x0003) MISSED OFFSET
	int                                                CheckLimitCount;                                          // 0x068C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GuaranteedDistance;                                       // 0x0690(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	struct FString                                     PassSoundEventName;                                       // 0x0698(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     PassSoundStopEventName;                                   // 0x06A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData05[0xB0];                                      // 0x06B8(0x00B0) MISSED OFFSET
	class AActor*                                      PassSoundActor;                                           // 0x0768(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0770(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AttachedInstantWeapon");
		return ptr;
	}


	void OnLifeTimeExpired();
	void OnCreateWeaponEnd();
};


// Class Nimbus.AttachedInterceptorWeapon
// 0x0090 (0x06C8 - 0x0638)
class AAttachedInterceptorWeapon : public AAttachedWeapon
{
public:
	float                                              InterceptDistanceSquared;                                 // 0x0638(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              InterceptAngle;                                           // 0x063C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterceptFireDuration;                                    // 0x0640(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0644(0x0004) MISSED OFFSET
	class UParticleSystem*                             WeaponInterceptorParticleSystem;                          // 0x0648(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EAttachedInterceptorWeaponSearchType               SearchType;                                               // 0x0650(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0651(0x0007) MISSED OFFSET
	class UAkAudioEvent*                               CIWSOneShotSoundEvent;                                    // 0x0658(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPrediction;                                              // 0x0660(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0661(0x0003) MISSED OFFSET
	float                                              BulletSpeedKmphForPrediction;                             // 0x0664(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MissileRefCountLimit;                                     // 0x0668(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnorePlayerMissileHomingToOneself;                      // 0x066C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreSeaSkimmingMissile;                                // 0x066D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x066E(0x0002) MISSED OFFSET
	float                                              IgnoreSeaSkimmingMissile_AltitudeInMeters;                // 0x0670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0674(0x0004) MISSED OFFSET
	TArray<class USoundDummyBullet*>                   SoundDummyBullets;                                        // 0x0678(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0688(0x0010) MISSED OFFSET
	class UParticleSystemComponent*                    Emitter;                                                  // 0x0698(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x20];                                      // 0x06A0(0x0020) MISSED OFFSET
	class AAIGameObject*                               OwningAIGameObject;                                       // 0x06C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AttachedInterceptorWeapon");
		return ptr;
	}

};


// Class Nimbus.AutomatedCollectMissionAsset
// 0x00C8 (0x00F0 - 0x0028)
class UAutomatedCollectMissionAsset : public UObject
{
public:
	unsigned char                                      UnknownData00[0xC8];                                      // 0x0028(0x00C8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AutomatedCollectMissionAsset");
		return ptr;
	}

};


// Class Nimbus.RecordDataObject
// 0x0010 (0x0038 - 0x0028)
class URecordDataObject : public UObject
{
public:
	TArray<struct FAutomationNimbusKeys>               RecordedInputData;                                        // 0x0028(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RecordDataObject");
		return ptr;
	}

};


// Class Nimbus.AutomationTestManager
// 0x0108 (0x0130 - 0x0028)
class UAutomationTestManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0xE0];                                      // 0x0028(0x00E0) MISSED OFFSET
	class URecordDataObject*                           RecordDataObj;                                            // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0110(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AutomationTestManager");
		return ptr;
	}

};


// Class Nimbus.BackgroundWidget
// 0x0088 (0x0290 - 0x0208)
class UBackgroundWidget : public UUserWidget
{
public:
	struct FString                                     Material;                                                 // 0x0208(0x0010) (Edit, ZeroConstructor)
	struct FString                                     ManaTexturePath;                                          // 0x0218(0x0010) (Edit, ZeroConstructor)
	bool                                               bLoopMovie;                                               // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	float                                              DelayDuration;                                            // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeDuration;                                             // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class AUIManagerActor*                             CurrUIManager;                                            // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	class UImage*                                      UmgMovieImage;                                            // 0x0248(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UManaTexture*                                ManaTexture;                                              // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSoftObjectPath                             MaterialObjectPath;                                       // 0x0258(0x0018) (Transient)
	struct FSoftObjectPath                             ManaTextureObjectPath;                                    // 0x0270(0x0018) (Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BackgroundWidget");
		return ptr;
	}

};


// Class Nimbus.BasePassSoundComponent
// 0x0058 (0x0148 - 0x00F0)
class UBasePassSoundComponent : public UNimbusGameObjectComponent
{
public:
	class UDataTable*                                  DistanceSettingsDataTable;                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	class AGameObject*                                 OwnerGameObject;                                          // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIGameObject*                               OwnerAIGameObject;                                        // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      Owner;                                                    // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0118(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BasePassSoundComponent");
		return ptr;
	}


	void OnReplayCameraChanged(unsigned char Type);
	void OnCameraViewChanged(ECameraType Type);
};


// Class Nimbus.CameraInputComponentBase
// 0x0010 (0x0300 - 0x02F0)
class UCameraInputComponentBase : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CameraInputComponentBase");
		return ptr;
	}

};


// Class Nimbus.CameraInputComponent
// 0x0070 (0x0370 - 0x0300)
class UCameraInputComponent : public UCameraInputComponentBase
{
public:
	float                                              HorizontalLimit;                                          // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToTarget;                                             // 0x0304(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableZoom;                                              // 0x0308(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0309(0x0003) MISSED OFFSET
	float                                              ZoomInFovAngle;                                           // 0x030C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0310(0x0004) MISSED OFFSET
	float                                              ZoomInDuration;                                           // 0x0314(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0318(0x0008) MISSED OFFSET
	class UTargetSelectionComponent*                   TargetSelector;                                           // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AGameObject*                                 SelectedTarget;                                           // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCameraFocusTargetComponent*                 FocusTarget;                                              // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0340(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CameraInputComponent");
		return ptr;
	}

};


// Class Nimbus.BasicLightRig
// 0x0098 (0x0400 - 0x0368)
class ABasicLightRig : public AActor
{
public:
	class USceneComponent*                             SceneRoot;                                                // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	bool                                               bUseOfflineCapture;                                       // 0x0370(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	class UTextureCube*                                Output_BelowClouds;                                       // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTextureCube*                                Output_InClouds;                                          // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTextureCube*                                Output_AboveClouds;                                       // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTextureCube*                                Output_NoCubemapBlending;                                 // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseUndergroundSunMask;                                   // 0x0398(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	float                                              UndergroundSunMaskMinHeight;                              // 0x039C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UndergroundSunMaskMaxHeight;                              // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	class UMaterialParameterCollection*                GlobalMPC;                                                // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialParameterCollection*                LightRigMPC;                                              // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureCube*                                MaterialTextureBelowClouds;                               // 0x03B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureCube*                                MaterialTextureInClouds;                                  // 0x03C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureCube*                                MaterialTextureAboveClouds;                               // 0x03C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureCube*                                MaterialTextureNoBlending;                                // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USceneCaptureComponentCube*                  OfflineCapture_BelowClouds;                               // 0x03D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneCaptureComponentCube*                  OfflineCapture_InClouds;                                  // 0x03E0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneCaptureComponentCube*                  OfflineCapture_AboveClouds;                               // 0x03E8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneCaptureComponentCube*                  OfflineCapture_NoCubemapBlending;                         // 0x03F0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BasicLightRig");
		return ptr;
	}


	void UpdateSunParameters_BP();
	void UpdateLoop_BP();
	void UpdateLocalCameraPosition_BP();
	void UpdateLightRigMPC_BP();
	void UpdateBlendHeight();
	void UpdateAircraftMaterial_BP();
	void SetMinBlendHeight(float Value);
	void SetMaxBlendHeight(float Value);
	void ResetAircraftMaterial_BP();
	void OnTransitionToMiniGameEvent_Native(bool bIsTransitingIn);
	void MaterialUpdateCP_BP();
	bool GetUseSkyLight();
	bool GetUseOfflineCapture();
	bool GetUseHDRI();
	bool GetUseCubemapBlending();
	class UTimelineComponent* GetTimeline_RoughnessRampUp();
	class UTimelineComponent* GetTimeline_RoughnessRampDown();
	class UTimelineComponent* GetTimeline_2();
	class UTimelineComponent* GetTimeline_1();
	class UDirectionalLightComponent* GetSunLight_CP();
	class UDirectionalLightComponent* GetSunLight();
	class UDirectionalLightComponent* GetSunDirLight();
	class UStaticMeshComponent* GetSkylight_PreviewBlendHeight();
	float GetSkyLight_Intensity();
	class USkyLightComponent* GetSkyLight_CubemapBlending();
	class USkyLightComponent* GetSkyLight();
	bool GetShow_EnvDome();
	class USceneCaptureComponentCube* GetSceneCaptureCube_InClouds();
	class USceneCaptureComponentCube* GetSceneCaptureCube_BelowClouds();
	class USceneCaptureComponentCube* GetSceneCaptureCube_AboveClouds();
	class USceneCaptureComponentCube* GetSceneCaptureComponentCube();
	class UPostProcessComponent* GetPostProcessComp00();
	struct FPostProcessSettings GetPostProcess00();
	float GetMinBlendHeight();
	float GetMaxBlendHeight();
	float GetLightTemperature();
	float GetLightScale();
	float GetLightIntensity();
	struct FRotator GetLightDirection();
	float GetLevelVFX_Intensity();
	struct FLinearColor GetLevelCloudSand_Color();
	class UTexture* GetHDRI_CubeMap();
	float GetHDRI_Brightness();
	bool GetGet_TrueSky_Sun_Rotation();
	bool GetFollow_TrusSky();
	class UStaticMeshComponent* GetEnvSphere();
	class UTimelineComponent* GetCockpit_SunLight_Increase();
	class UTimelineComponent* GetCockpit_SunLight_Decrease();
	bool GetApply_Reflection();
};


// Class Nimbus.Missile
// 0x0178 (0x08A0 - 0x0728)
class AMissile : public AExplosiveWeapon
{
public:
	class UStaticMeshComponent*                        HiddenMissileMesh;                                        // 0x0728(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FireParticles;                                            // 0x0730(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bUseFireLight;                                            // 0x0738(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0739(0x0007) MISSED OFFSET
	class UPointLightComponent*                        FireLight;                                                // 0x0740(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 FireLightIntensityCurves;                                 // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0750(0x0004) MISSED OFFSET
	float                                              TickDistanceUU;                                           // 0x0754(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTickIntervalSeconds;                                   // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullEffectDistanceUU;                                     // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RibbonMaxSpawnPerUnit;                                    // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RibbonMinSpawnPerUnit;                                    // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DenseMaxSpawnPerUnit;                                     // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DenseMinSpawnPerUnit;                                     // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseRibbonCollectionForTrail;                             // 0x0770(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0771(0x0003) MISSED OFFSET
	float                                              CollisionParticleImpactDistanceUU;                        // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CollisionParticleImpactElapsedTime;                       // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x077C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               MissileCruisingSoundPlayEvent;                            // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               MissileCruisingSoundStopEvent;                            // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EHomingType                                        HomingType;                                               // 0x0790(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0791(0x0003) MISSED OFFSET
	float                                              MaxHomingAngle;                                           // 0x0794(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRotationAngle;                                         // 0x0798(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxHomingAngleNotCaptured;                                // 0x079C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRotationAngleNotCaptured;                              // 0x07A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelerationDelayFromStart;                               // 0x07A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAngleForDelayedAcc;                                    // 0x07A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingDelayFromStart;                                     // 0x07AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReducedHomingDuration;                                    // 0x07B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReducedHomingRotationAngle;                               // 0x07B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingReductionInCloud;                                   // 0x07B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HomingCloudUesTargetStatus;                               // 0x07BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x07BD(0x0003) MISSED OFFSET
	float                                              HomingCloudThreshold;                                     // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAntiShip;                                              // 0x07C4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldUseSeaSkimming;                                    // 0x07C5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldConformToTerrain;                                  // 0x07C6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldDetonateOnMiss;                                    // 0x07C7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingLowerLimitAltitude;                                 // 0x07C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRotationAngleDuringTopAttack;                          // 0x07CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProximityFuseDuration;                                    // 0x07D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasEncounteredCloud;                                     // 0x07D4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x07D5(0x0003) MISSED OFFSET
	float                                              SpeedMaximum;                                             // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Acceleration;                                             // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              InitialDropSpeed;                                         // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ProximityFuseRadiusSquared;                               // 0x07E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              VeryNearWarningRadiusSquared;                             // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              NearWarningRadiusSquared;                                 // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AltitudeAboveTarget;                                      // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DistanceFromTargetSquared;                                // 0x07F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	EWeaponSpecialBehaviorType                         SpecialBehaviorType;                                      // 0x07F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EMissileHitType                                    HitType;                                                  // 0x07F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x07FA(0x0006) MISSED OFFSET
	class UAkAudioEvent*                               IgnitionSoundEvent;                                       // 0x0800(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DummyNumber;                                              // 0x0808(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinTargetSwitchTime;                                      // 0x080C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTargetSwitchTime;                                      // 0x0810(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceFromBody;                                         // 0x0814(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MinDistanceToFollowMainSquared;                           // 0x0818(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x081C(0x0004) MISSED OFFSET
	class UWeaponPassSoundComponent*                   PassSound;                                                // 0x0820(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	bool                                               bIsStealthMissile;                                        // 0x0828(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0829(0x0003) MISSED OFFSET
	float                                              WarningAlertUU;                                           // 0x082C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              NaerWarningAlertUU;                                       // 0x0830(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ShowMissileIndicatorUU;                                   // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ShowMissileIndicatorBlinkUU;                              // 0x0838(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MinimapStartDisplayDistUU;                                // 0x083C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsPlayingCruisingSound;                                  // 0x0840(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasIgnited;                                              // 0x0841(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x26];                                      // 0x0842(0x0026) MISSED OFFSET
	class ANimbusRibbonCollectionActor*                TrailRibbonCollectionActor;                               // 0x0868(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x30];                                      // 0x0870(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Missile");
		return ptr;
	}


	void OnTargetWithinProximity();
	void OnMissForceKill();
	int GetTrueSkyQueryID();
};


// Class Nimbus.BeaconTrackingMissile
// 0x0040 (0x08E0 - 0x08A0)
class ABeaconTrackingMissile : public AMissile
{
public:
	class UClass*                                      SpawnWeaponClass;                                         // 0x08A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HitRange;                                                 // 0x08A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoLockExplosionTime;                                      // 0x08AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsBeaconSetting;                                         // 0x08B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x08B1(0x0003) MISSED OFFSET
	float                                              FallDelaySeconds;                                         // 0x08B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeliosRadioForeWarnTime;                                  // 0x08B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeliosRadioFadeTime;                                      // 0x08BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeliosRadioMaxWaitTime;                                   // 0x08C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class AGameObject>                  FirstTarget;                                              // 0x08C4(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x08CC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BeaconTrackingMissile");
		return ptr;
	}

};


// Class Nimbus.BombParameters
// 0x0008 (0x00E0 - 0x00D8)
class UBombParameters : public UExplosiveWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BombParameters");
		return ptr;
	}

};


// Class Nimbus.BasePersonCameraInputComponent
// 0x0090 (0x0400 - 0x0370)
class UBasePersonCameraInputComponent : public UCameraInputComponent
{
public:
	struct FVector                                     EnemyFocusCameraLocation;                                 // 0x0370(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     EnemyFocusOriginLocation;                                 // 0x037C(0x000C) (Edit, IsPlainOldData)
	bool                                               bUsedHighGTurnCurved;                                     // 0x0388(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0389(0x0007) MISSED OFFSET
	class UCurveFloat*                                 HighGTurnCurvedInterpolationRatio;                        // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 HighGTurnCurvedQuatRatio;                                 // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 HighGTurnCurvedHeightRatio;                               // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ConstraintVector;                                         // 0x03A8(0x000C) (Edit, IsPlainOldData)
	float                                              RatioInTime;                                              // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RatioOutTime;                                             // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x44];                                      // 0x03BC(0x0044) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BasePersonCameraInputComponent");
		return ptr;
	}

};


// Class Nimbus.Bomb
// 0x0028 (0x0750 - 0x0728)
class ABomb : public AExplosiveWeapon
{
public:
	float                                              HomingDelayFromStart;                                     // 0x0728(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxHomingAngle;                                           // 0x072C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRotationAngle;                                         // 0x0730(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GlideLiftPercentage;                                      // 0x0734(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasRollAnimation;                                        // 0x0738(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0739(0x0003) MISSED OFFSET
	float                                              RollAnimationTargetRoll;                                  // 0x073C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAnimationDelay;                                       // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAnimationRate;                                        // 0x0744(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeightToExplodeMeter;                                     // 0x0748(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x074C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Bomb");
		return ptr;
	}

};


// Class Nimbus.WeaponMovementParameters
// 0x0048 (0x0070 - 0x0028)
class UWeaponMovementParameters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0028(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponMovementParameters");
		return ptr;
	}

};


// Class Nimbus.BombMovementParameters
// 0x0018 (0x0088 - 0x0070)
class UBombMovementParameters : public UWeaponMovementParameters
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0070(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BombMovementParameters");
		return ptr;
	}

};


// Class Nimbus.WeaponHomingParameters
// 0x0028 (0x0050 - 0x0028)
class UWeaponHomingParameters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponHomingParameters");
		return ptr;
	}

};


// Class Nimbus.BombHomingParameters
// 0x0000 (0x0050 - 0x0050)
class UBombHomingParameters : public UWeaponHomingParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BombHomingParameters");
		return ptr;
	}

};


// Class Nimbus.WeaponMovementComponent
// 0x0128 (0x02C8 - 0x01A0)
class UWeaponMovementComponent : public UProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate                    OnHomingMiss;                                             // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMovementImpact;                                         // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x68];                                      // 0x01C0(0x0068) MISSED OFFSET
	class AGameObject*                                 HomingTarget;                                             // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0230(0x0070) MISSED OFFSET
	class AActor*                                      OwningActor;                                              // 0x02A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 OwningGameObject;                                         // 0x02A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02B0(0x0008) MISSED OFFSET
	class USceneComponent*                             FakeUpdatedComponent;                                     // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponMovementComponent");
		return ptr;
	}

};


// Class Nimbus.BombMovementComponent
// 0x0020 (0x02E8 - 0x02C8)
class UBombMovementComponent : public UWeaponMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x02C8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BombMovementComponent");
		return ptr;
	}

};


// Class Nimbus.Bomb_TGTP
// 0x0050 (0x07A0 - 0x0750)
class ABomb_TGTP : public ABomb
{
public:
	struct FRotator                                    PointAdjustment;                                          // 0x0750(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponImpactRadius;                                       // 0x075C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponExplosionRadius;                                    // 0x0760(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Damage_TGTP;                                              // 0x0764(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetrRadius;                                            // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPipperFixed;                                             // 0x076C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x076D(0x0003) MISSED OFFSET
	float                                              PipperFixedRadius;                                        // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPipperHeightOuterCircumference;                          // 0x0774(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	float                                              PipperHeightIgnoredDifference;                            // 0x0778(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETGTP_ParticleSpawnType                            ParticleSpawnType;                                        // 0x077C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x077D(0x0003) MISSED OFFSET
	float                                              ParticleSpawnHeightIgnoredDifference;                     // 0x0780(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OuterCircumferenceCheckCnt;                               // 0x0784(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0788(0x0004) MISSED OFFSET
	ETGTP_AttackResult                                 AttackResult;                                             // 0x078C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x078D(0x0003) MISSED OFFSET
	class USceneComponent*                             FallingPointSceneComponent;                               // 0x0790(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AGameObject*                                 MyTarget;                                                 // 0x0798(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Bomb_TGTP");
		return ptr;
	}


	void ReacquireLocationRotation();
	struct FVector GetTGTP_DropLocation();
	ETGTP_AttackResult GetAttackResult();
};


// Class Nimbus.VariableComparator
// 0x0000 (0x0028 - 0x0028)
class UVariableComparator : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VariableComparator");
		return ptr;
	}

};


// Class Nimbus.BoolComparator
// 0x0018 (0x0040 - 0x0028)
class UBoolComparator : public UVariableComparator
{
public:
	class UBoolProperty*                               Property;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BoolComparator");
		return ptr;
	}

};


// Class Nimbus.UIBaseWidget
// 0x00E8 (0x02F0 - 0x0208)
class UUIBaseWidget : public UUserWidget
{
public:
	bool                                               bEnableGlow;                                              // 0x0208(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWidgetShape                                       WidgetMeshShape;                                          // 0x0209(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUsedForVROverlay;                                        // 0x020A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x25];                                      // 0x020B(0x0025) MISSED OFFSET
	TArray<struct FTextHidingGroup>                    TextHidingGroups;                                         // 0x0230(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	float                                              DelayTimeBeforeTextAnimation;                             // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x24];                                      // 0x024C(0x0024) MISSED OFFSET
	TArray<struct FImageHidingGroup>                   ImageHidingGroups;                                        // 0x0270(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0280(0x0008) MISSED OFFSET
	class AUIManagerActor*                             UIManagerActor;                                           // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0290(0x0008) MISSED OFFSET
	class UWidgetComponent*                            UIWidgetComponent;                                        // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x50];                                      // 0x02A0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIBaseWidget");
		return ptr;
	}


	class AUIManagerActor* GetUIManagerActor();
};


// Class Nimbus.MenuBaseWidget
// 0x01E0 (0x04D0 - 0x02F0)
class UMenuBaseWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02F0(0x0010) MISSED OFFSET
	class UUIScrollBarWidget*                          UmgUIScrollBar;                                           // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0308(0x0008) MISSED OFFSET
	class ALobbyGameMode*                              LobbyGameMode;                                            // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUserWidget*                                 UmgBaseWidget;                                            // 0x0318(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE0];                                      // 0x0320(0x00E0) MISSED OFFSET
	class UTextBlock*                                  UmgTitleText;                                             // 0x0400(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgDescriptionText;                                       // 0x0408(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgButtonText;                                            // 0x0410(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgTabText;                                               // 0x0418(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgTabIcon;                                               // 0x0420(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0428(0x0010) MISSED OFFSET
	TArray<struct FMenuBaseWidgetItem>                 ItemList;                                                 // 0x0438(0x0010) (ZeroConstructor, Transient)
	TArray<struct FMenuBaseWidgetTabItem>              TabList;                                                  // 0x0448(0x0010) (ZeroConstructor, Transient)
	TArray<struct FMenuBaseWidgetUmgItem>              UmgList;                                                  // 0x0458(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x68];                                      // 0x0468(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuBaseWidget");
		return ptr;
	}


	void SimpleDialogInputResult(const struct FDialogData& DialogData);
	void SetIsEnableControl(bool bEnable);
	void OnUnfocusedBP();
	void OnFocusedBP();
	bool IsEnableControl();
};


// Class Nimbus.BTComposite_LaxSequence
// 0x0000 (0x00D0 - 0x00D0)
class UBTComposite_LaxSequence : public UBTCompositeNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTComposite_LaxSequence");
		return ptr;
	}

};


// Class Nimbus.BTComposite_RandomSelect
// 0x0000 (0x00D0 - 0x00D0)
class UBTComposite_RandomSelect : public UBTCompositeNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTComposite_RandomSelect");
		return ptr;
	}

};


// Class Nimbus.BootWidget
// 0x0110 (0x05E0 - 0x04D0)
class UBootWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x110];                                     // 0x04D0(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BootWidget");
		return ptr;
	}

};


// Class Nimbus.BTDecorator_ManeuverWeight
// 0x0030 (0x0098 - 0x0068)
class UBTDecorator_ManeuverWeight : public UBTDecorator
{
public:
	float                                              RookieWeight;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalWeight;                                             // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeteranWeight;                                            // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AceWeight;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RivalWeight;                                              // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalDyingWeight;                                    // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalHighAltitudeWeight;                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalLowAltitudeWeight;                              // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalInCloudsWeight;                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalInCloudsDyingWeight;                            // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalNearCloudsWeight;                               // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalNearCloudsDyingWeight;                          // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTDecorator_ManeuverWeight");
		return ptr;
	}

};


// Class Nimbus.BTTask_ActivateFlares
// 0x0008 (0x00A0 - 0x0098)
class UBTTask_ActivateFlares : public UBTTask_BlackboardBase
{
public:
	bool                                               bReactToPlayerOnly;                                       // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_ActivateFlares");
		return ptr;
	}

};


// Class Nimbus.BTTask_AreaPatrol
// 0x0008 (0x0078 - 0x0070)
class UBTTask_AreaPatrol : public UBTTaskNode
{
public:
	float                                              NearDistance;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_AreaPatrol");
		return ptr;
	}

};


// Class Nimbus.BTTask_AutoDestruct
// 0x0038 (0x00A8 - 0x0070)
class UBTTask_AutoDestruct : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetObjectKey;                                          // 0x0070(0x0028) (Edit)
	float                                              ProjectAheadTime;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadiusThreshold;                                          // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AoAThreshold;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_AutoDestruct");
		return ptr;
	}

};


// Class Nimbus.BTTask_AvoidObstacle
// 0x0000 (0x0070 - 0x0070)
class UBTTask_AvoidObstacle : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_AvoidObstacle");
		return ptr;
	}

};


// Class Nimbus.BTTask_GoFormation
// 0x0008 (0x0078 - 0x0070)
class UBTTask_GoFormation : public UBTTaskNode
{
public:
	float                                              MaxSpeedUpdateWithoutControl;                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_GoFormation");
		return ptr;
	}

};


// Class Nimbus.BTTask_LevelPlane
// 0x0000 (0x0070 - 0x0070)
class UBTTask_LevelPlane : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_LevelPlane");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_AileronRoll
// 0x0010 (0x0080 - 0x0070)
class UBTTask_Maneuver_AileronRoll : public UBTTaskNode
{
public:
	float                                              RollRate;                                                 // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollTimes;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollAbilityModifierForUAV;                                // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_AileronRoll");
		return ptr;
	}

};


// Class Nimbus.BTTask_FlyToClearAltitude
// 0x0008 (0x0078 - 0x0070)
class UBTTask_FlyToClearAltitude : public UBTTaskNode
{
public:
	float                                              SafeHighAltitude;                                         // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SafeLowAltitude;                                          // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_FlyToClearAltitude");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_FlyStraight
// 0x0018 (0x00B0 - 0x0098)
class UBTTask_Maneuver_FlyStraight : public UBTTask_BlackboardBase
{
public:
	float                                              ManeuverTime;                                             // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EManeuverSpeedType                                 ManeuverSpeedType;                                        // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	float                                              ManeuverSpeedConstant;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ManeuverSpeedPercent;                                     // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ManeuverSpeedRelative;                                    // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomSpeedValueSignFlip;                                // 0x00AC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_FlyStraight");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_BarrelRoll
// 0x0010 (0x00C0 - 0x00B0)
class UBTTask_Maneuver_BarrelRoll : public UBTTask_Maneuver_FlyStraight
{
public:
	int                                                Direction;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchRate;                                                // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_BarrelRoll");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_CloudReaction
// 0x0018 (0x00C8 - 0x00B0)
class UBTTask_Maneuver_CloudReaction : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              SearchCloudInterval;                                      // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldApproachCloud;                                     // 0x00B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMinimumTurning;                                          // 0x00B5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00B6(0x0002) MISSED OFFSET
	float                                              MinimumTurningAngleInDegree;                              // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMaximumTurning;                                          // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	float                                              MaximumTurningAngleInDegree;                              // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_CloudReaction");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_StateUninterruptibleBase
// 0x0000 (0x0070 - 0x0070)
class UBTTask_Maneuver_StateUninterruptibleBase : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_StateUninterruptibleBase");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_CobraTurn
// 0x0008 (0x0078 - 0x0070)
class UBTTask_Maneuver_CobraTurn : public UBTTask_Maneuver_StateUninterruptibleBase
{
public:
	bool                                               bSkipStableFlight;                                        // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_CobraTurn");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_FlatSpin
// 0x0008 (0x0078 - 0x0070)
class UBTTask_Maneuver_FlatSpin : public UBTTask_Maneuver_StateUninterruptibleBase
{
public:
	float                                              SpinRate;                                                 // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpinTimes;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_FlatSpin");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Level
// 0x0008 (0x00B8 - 0x00B0)
class UBTTask_Maneuver_Level : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              PitchRate;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Level");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Pitch
// 0x0008 (0x00B8 - 0x00B0)
class UBTTask_Maneuver_Pitch : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              PitchRate;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchAngle;                                               // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Pitch");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_PugachevsCobra
// 0x0008 (0x0078 - 0x0070)
class UBTTask_Maneuver_PugachevsCobra : public UBTTask_Maneuver_StateUninterruptibleBase
{
public:
	bool                                               bSkipPreStableFlight;                                     // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipPostStableFlight;                                    // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_PugachevsCobra");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Roll
// 0x0008 (0x00B8 - 0x00B0)
class UBTTask_Maneuver_Roll : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              RollRate;                                                 // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollAngle;                                                // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Roll");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Slalom
// 0x0010 (0x00C0 - 0x00B0)
class UBTTask_Maneuver_Slalom : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              YawRate;                                                  // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollAngle;                                                // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Slalom");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_TurnAdvanced
// 0x0008 (0x00B8 - 0x00B0)
class UBTTask_Maneuver_TurnAdvanced : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              PitchRate;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_TurnAdvanced");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_TurnNormal
// 0x0010 (0x00C0 - 0x00B0)
class UBTTask_Maneuver_TurnNormal : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              PitchRate;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchAngle;                                               // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollAngle;                                                // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_TurnNormal");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Kulbit
// 0x0008 (0x0078 - 0x0070)
class UBTTask_Maneuver_Kulbit : public UBTTask_Maneuver_StateUninterruptibleBase
{
public:
	bool                                               bSkipPreStableFlight;                                     // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipPostStableFlight;                                    // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Kulbit");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_TurnQuick
// 0x0018 (0x00C8 - 0x00B0)
class UBTTask_Maneuver_TurnQuick : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              PitchRate;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchAngle;                                               // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRate;                                                 // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollAngle;                                                // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchStartRollAngleTolerance;                             // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_TurnQuick");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_TurnToPoint
// 0x0010 (0x00C0 - 0x00B0)
class UBTTask_Maneuver_TurnToPoint : public UBTTask_Maneuver_FlyStraight
{
public:
	struct FVector                                     TargetDirection;                                          // 0x00B0(0x000C) (Edit, IsPlainOldData)
	float                                              TargetDistance;                                           // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_TurnToPoint");
		return ptr;
	}

};


// Class Nimbus.BTTask_Maneuver_Yaw
// 0x0008 (0x00B8 - 0x00B0)
class UBTTask_Maneuver_Yaw : public UBTTask_Maneuver_FlyStraight
{
public:
	float                                              YawRate;                                                  // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawAngle;                                                 // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Maneuver_Yaw");
		return ptr;
	}

};


// Class Nimbus.BTTask_MoveToTarget
// 0x0038 (0x00A8 - 0x0070)
class UBTTask_MoveToTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MoveToTargetKey;                                          // 0x0070(0x0028) (Edit)
	float                                              ProjectAheadTime;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FarDistance;                                              // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NearDistance;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_MoveToTarget");
		return ptr;
	}

};


// Class Nimbus.BTTask_OutOfWorldReaction
// 0x0000 (0x0070 - 0x0070)
class UBTTask_OutOfWorldReaction : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_OutOfWorldReaction");
		return ptr;
	}

};


// Class Nimbus.BTTask_PursueTarget
// 0x0060 (0x00D0 - 0x0070)
class UBTTask_PursueTarget : public UBTTaskNode
{
public:
	float                                              ManeuverTime;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetObjectKey;                                          // 0x0078(0x0028) (Edit)
	float                                              ProjectAheadTime;                                         // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLeadPoint;                                               // 0x00A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	float                                              AlignmentDistanceInMeters;                                // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlignmentAngle;                                           // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanLoseOfSight;                                          // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	float                                              InRangeFOV;                                               // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CheckSightInterval;                                       // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpecDurationTime;                                      // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAvoidHeadOn;                                             // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              HeadOnAvoidanceStartAngle;                                // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeadOnAvoidanceStartDistance;                             // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableKDSSelection;                                     // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAbortIfKDSIsEnabled;                                     // 0x00CD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_PursueTarget");
		return ptr;
	}

};


// Class Nimbus.BTTask_ReleaseKDSPhase
// 0x0000 (0x0070 - 0x0070)
class UBTTask_ReleaseKDSPhase : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_ReleaseKDSPhase");
		return ptr;
	}

};


// Class Nimbus.BTTask_ReturnToUnitCircle
// 0x0008 (0x0078 - 0x0070)
class UBTTask_ReturnToUnitCircle : public UBTTaskNode
{
public:
	float                                              ReturnSpeedRatio;                                         // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_ReturnToUnitCircle");
		return ptr;
	}

};


// Class Nimbus.BTTask_MoveAwayFromTarget
// 0x0038 (0x00A8 - 0x0070)
class UBTTask_MoveAwayFromTarget : public UBTTaskNode
{
public:
	float                                              ManeuverTime;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      MoveToTargetKey;                                          // 0x0078(0x0028) (Edit)
	float                                              TargetDistance;                                           // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_MoveAwayFromTarget");
		return ptr;
	}

};


// Class Nimbus.BTTask_RunBlackboardBT
// 0x0028 (0x00A0 - 0x0078)
class UBTTask_RunBlackboardBT : public UBTTask_RunBehavior
{
public:
	struct FBlackboardKeySelector                      BlackboardKey;                                            // 0x0078(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_RunBlackboardBT");
		return ptr;
	}

};


// Class Nimbus.BTTask_SetStateEscapeFromPursuer
// 0x0028 (0x0098 - 0x0070)
class UBTTask_SetStateEscapeFromPursuer : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      PursuerActorKey;                                          // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_SetStateEscapeFromPursuer");
		return ptr;
	}

};


// Class Nimbus.BTTask_SetStateUninterruptible
// 0x0008 (0x0078 - 0x0070)
class UBTTask_SetStateUninterruptible : public UBTTaskNode
{
public:
	bool                                               bIsUninterruptible;                                       // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_SetStateUninterruptible");
		return ptr;
	}

};


// Class Nimbus.BTTask_Shield
// 0x0028 (0x0098 - 0x0070)
class UBTTask_Shield : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetObjectKey;                                          // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_Shield");
		return ptr;
	}

};


// Class Nimbus.BuildingDamagedState
// 0x01E0 (0x02D0 - 0x00F0)
class UBuildingDamagedState : public UNimbusGameObjectComponent
{
public:
	struct FString                                     StaticMeshComponentName;                                  // 0x00F0(0x0010) (Edit, ZeroConstructor)
	bool                                               bHasDestructiblePart;                                     // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	struct FString                                     DestructiblePartName;                                     // 0x0108(0x0010) (Edit, ZeroConstructor)
	bool                                               bShowDamagedStaticMesh;                                   // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0119(0x0007) MISSED OFFSET
	class UStaticMesh*                                 DamagedMesh;                                              // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyExplosionPhysics;                                   // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	class USkeletalMesh*                               PhysicsMesh;                                              // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             PartsDestroyedVFX;                                        // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayDeathAnimation;                                      // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	class USkeletalMesh*                               AnimationMesh;                                            // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeathAnimationDelay;                                      // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	TArray<class UAnimSequence*>                       DeathAnimations;                                          // 0x0158(0x0010) (Edit, ZeroConstructor)
	EBuildingType                                      BuildingType;                                             // 0x0168(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplySeaSprayForPhysicsMesh;                             // 0x0169(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x016A(0x0002) MISSED OFFSET
	struct FSeaExplosionInfo                           SeaExplosionInfoForPhysicsMesh;                           // 0x016C(0x0008) (Edit)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	TArray<struct FBuildingDamagedVFXInfo>             ExtraVfxInfo;                                             // 0x0178(0x0010) (Edit, ZeroConstructor)
	class AAIGroundVehicle*                            OwnerGameObject;                                          // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData)
	class AAIGameObject*                               DestructibleObject;                                       // 0x0190(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        OwnerMeshComponent;                                       // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMesh*                                 UndamagedMesh;                                            // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      PhysicsMeshComponent;                                     // 0x01A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      AnimationMeshComponent;                                   // 0x01B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              VfxAttachedComponent;                                     // 0x01B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData07[0x50];                                      // 0x01C0(0x0050) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            PartsDestroyedPSCs;                                       // 0x0210(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData08[0xB0];                                      // 0x0220(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BuildingDamagedState");
		return ptr;
	}


	void OnVisibilityChanged(bool bVisibility);
	void OnRestored();
	void OnComponentHitSurface(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class Nimbus.Bullet
// 0x01F8 (0x0818 - 0x0620)
class ABullet : public AWeaponBase
{
public:
	float                                              EffectiveTime;                                            // 0x0620(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBulletRandomRollRotation;                                // 0x0624(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0625(0x0003) MISSED OFFSET
	int                                                RandomInitialPosRangeFrontMin;                            // 0x0628(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RandomInitialPosRangeFront;                               // 0x062C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandomInitialPosRangeBlur;                                // 0x0630(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	class UCurveFloat*                                 RayCastRadiusMetersCurve;                                 // 0x0638(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 RayCastRadiusMPMetersCurve;                               // 0x0640(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedInitial;                                             // 0x0648(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GravitationalAcceleration;                                // 0x064C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0650(0x0004) MISSED OFFSET
	float                                              RayCastRadius;                                            // 0x0654(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RayCastRadiusMP;                                          // 0x0658(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x065C(0x0004) MISSED OFFSET
	EBulletHitType                                     HitType;                                                  // 0x0660(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0661(0x0003) MISSED OFFSET
	float                                              RayCastRadiusToNotGameObject_UU;                          // 0x0664(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             MuzzleFlashParticle;                                      // 0x0668(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MuzzleFlashPositionOffset;                                // 0x0670(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    MuzzleFlashRotationOffset;                                // 0x067C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnLocalPlayerPlaneCollisionParticle;                      // 0x0688(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnOtherPlaneCollisionParticle;                            // 0x0690(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             OnOtherPlaneCollisionParticleForDebris;                   // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x168];                                     // 0x06A0(0x0168) MISSED OFFSET
	TArray<class AActor*>                              BalletIgnoreActors;                                       // 0x0808(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Bullet");
		return ptr;
	}

};


// Class Nimbus.BulletEmitter
// 0x0060 (0x0698 - 0x0638)
class ABulletEmitter : public AAttachedWeapon
{
public:
	class UClass*                                      ReferencingBulletWeapon;                                  // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             EmitterTemplate;                                          // 0x0640(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    Emitter;                                                  // 0x0648(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AAIGameObject*                               OwningAIGameObject;                                       // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class USoundDummyBullet*>                   SoundDummyBullets;                                        // 0x0658(0x0010) (ZeroConstructor, Transient)
	float                                              DamageStartDelaySeconds;                                  // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageIntervalSeconds;                                    // 0x066C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageAreaLengthMeters;                                   // 0x0670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageAreaRadiusMeters;                                   // 0x0674(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEmitterObjectRayCheck;                                   // 0x0678(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0679(0x0003) MISSED OFFSET
	float                                              EmitterCheckInterval;                                     // 0x067C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0680(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BulletEmitter");
		return ptr;
	}

};


// Class Nimbus.Plsl_Bullet
// 0x0020 (0x0838 - 0x0818)
class APlsl_Bullet : public ABullet
{
public:
	bool                                               bCloudCheck;                                              // 0x0818(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0819(0x0007) MISSED OFFSET
	class UParticleSystem*                             CloudHitParticle;                                         // 0x0820(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurvivalGuaranteeTime;                                    // 0x0828(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x082C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Plsl_Bullet");
		return ptr;
	}

};


// Class Nimbus.BulletParameters
// 0x0010 (0x00C8 - 0x00B8)
class UBulletParameters : public UWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BulletParameters");
		return ptr;
	}

};


// Class Nimbus.BulletUAV
// 0x0008 (0x0840 - 0x0838)
class ABulletUAV : public APlsl_Bullet
{
public:
	float                                              MultiDamage;                                              // 0x0838(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x083C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BulletUAV");
		return ptr;
	}

};


// Class Nimbus.MissileUAV
// 0x0000 (0x08A0 - 0x08A0)
class AMissileUAV : public AMissile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissileUAV");
		return ptr;
	}

};


// Class Nimbus.CameraFocusTargetComponent
// 0x0040 (0x0130 - 0x00F0)
class UCameraFocusTargetComponent : public UActorComponent
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTargetSelectionComponent*                   TargetSelector;                                           // 0x00F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AGameObject*                                 FocusTarget;                                              // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0108(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CameraFocusTargetComponent");
		return ptr;
	}

};


// Class Nimbus.CameraModifier_Transition
// 0x0038 (0x0080 - 0x0048)
class UCameraModifier_Transition : public UCameraModifier
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0048(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CameraModifier_Transition");
		return ptr;
	}

};


// Class Nimbus.CameraViewComponent
// 0x0070 (0x0360 - 0x02F0)
class UCameraViewComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnCameraViewChanged;                                      // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UCurveFloat*                                 AutoExposureBiasCurveForLightning;                        // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0308(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CameraViewComponent");
		return ptr;
	}


	void SwitchToThirdPersonView();
	void SwitchToMiniGameView(EMiniGameCameraType MiniGameCameraType);
	void SwitchToFirstPersonView();
	void SwitchToCockpitView();
	void OnIGCStart();
	void OnIGCEnd();
	void InitializeCameras(class UCameraComponent* FirstPersonCam, class UCameraComponent* CockpitCam, class UCameraComponent* ThirdPersonCam, class UCameraComponent* MiniGameCam, class UCameraInputComponent* FirstPersonCamInput, class UCameraInputComponent* CockpitCamInput, class UCameraInputComponent* ThirdPersonCamInput);
	ECameraType GetCurrentCameraViewType();
};


// Class Nimbus.CommonHangarBaseMenuWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCommonHangarBaseMenuWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarBaseMenuWidget");
		return ptr;
	}

};


// Class Nimbus.CommonAircraftTreeWidget
// 0x0390 (0x0860 - 0x04D0)
class UCommonAircraftTreeWidget : public UCommonHangarBaseMenuWidget
{
public:
	class UClass*                                      NodeWeaponWidgetClass;                                    // 0x04D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      NodeUnlockWidgetClass;                                    // 0x04D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  NodeDataTable;                                            // 0x04E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  LinkDataTable;                                            // 0x04E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUIImageDataAsset*                           ImageDataAsset;                                           // 0x04F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAircraftTreeInfoDataAsset*                  InfoData;                                                 // 0x04F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CellSize;                                                 // 0x0500(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              WeaponGroupOffset;                                        // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponGroupSpacing;                                       // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WeaponSlotSize;                                           // 0x0510(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FString                                     DefaultSelectNodePlaneID;                                 // 0x0518(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET
	class UClass*                                      MenuBaseWidgetClass;                                      // 0x0530(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UAircraftTreeNodeBase*>               NodeNavi;                                                 // 0x0538(0x0010) (ZeroConstructor, Transient)
	TArray<class UAircraftTreeNode*>                   Nodes;                                                    // 0x0548(0x0010) (ZeroConstructor, Transient)
	TArray<class UAircraftTreeLink*>                   Links;                                                    // 0x0558(0x0010) (ZeroConstructor, Transient)
	TArray<class UAircraftTreeLinkSegment*>            LinkSegments;                                             // 0x0568(0x0010) (ZeroConstructor, Transient)
	TMap<int, class UAircraftTreeGroup*>               Groups;                                                   // 0x0578(0x0050) (ZeroConstructor, Transient)
	class UAircraftTreeNodeBase*                       FocusedNode;                                              // 0x05C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x05D0(0x0080) MISSED OFFSET
	class UAircraftTreeSelector*                       selector;                                                 // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x70];                                      // 0x0658(0x0070) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x06C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarStatus*                               HangarStatusEx[0x3];                                      // 0x06D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x06E8(0x0008) MISSED OFFSET
	class UHangarMRPInfo*                              HangarMRPInfo;                                            // 0x06F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAircraftTreeAnimationPlayer*                AnimationPlayer;                                          // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0700(0x0008) MISSED OFFSET
	class UUserWidget*                                 TreeMenuBaseWidget;                                       // 0x0708(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 AircraftTreeCommon;                                       // 0x0710(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 AircraftWeaponInformation;                                // 0x0718(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 MRPInformation;                                           // 0x0720(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 DescriptionText;                                          // 0x0728(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DescriptionTextBlock;                                     // 0x0730(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TreeButtonTextBlock;                                      // 0x0738(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UnderlayImage;                                            // 0x0740(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0748(0x0008) MISSED OFFSET
	TArray<class UUserWidget*>                         FreeUnlockNodes;                                          // 0x0750(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0760(0x0008) MISSED OFFSET
	class UTextBlock*                                  UmgPurchaseCost;                                          // 0x0768(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x0770(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData07[0x40];                                      // 0x0778(0x0040) MISSED OFFSET
	class UAircraftTreeNodeBase*                       ObtainItemNode[0x2];                                      // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 AnimHeadBrush;                                            // 0x07C8(0x0078) (Transient)
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0840(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0848(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonAircraftTreeWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignAircraftTreeWidget
// 0x0000 (0x0860 - 0x0860)
class UCampaignAircraftTreeWidget : public UCommonAircraftTreeWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignAircraftTreeWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignAircraftViewerWidget
// 0x0150 (0x0620 - 0x04D0)
class UCampaignAircraftViewerWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x118];                                     // 0x04D0(0x0118) MISSED OFFSET
	class ANimbusHangarMeshManager*                    HangarManager;                                            // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x05F0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignAircraftViewerWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignBattleProgressionWidget
// 0x04B0 (0x0980 - 0x04D0)
class UCampaignBattleProgressionWidget : public UMenuBaseWidget
{
public:
	TArray<float>                                      PlayerCamLookDist;                                        // 0x04D0(0x0010) (Edit, ZeroConstructor)
	struct FSlateFontInfo                              FontInfo;                                                 // 0x04E0(0x0058) (Edit)
	float                                              GroupingDist;                                             // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UnitNameOffset;                                           // 0x053C(0x0008) (Edit, IsPlainOldData)
	struct FVector                                     TargetRingScaleAircraft;                                  // 0x0544(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     TargetRingScaleGround;                                    // 0x0550(0x000C) (Edit, IsPlainOldData)
	int                                                NameLineThickness;                                        // 0x055C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IntroAnimationPitch;                                      // 0x0560(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMinLimit;                                            // 0x0564(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMaxLimit;                                            // 0x0568(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IntroAnimationDistance;                                   // 0x056C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IntroAnimationDuration;                                   // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FocusedNameOpacity;                                       // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Focused3dIconOpacity;                                     // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffFocusedNameOpacity;                                    // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffFocused3dIconOpacity;                                  // 0x0580(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IconScale;                                                // 0x0584(0x000C) (Edit, IsPlainOldData)
	class UStaticMesh*                                 PlaneIcon;                                                // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 GroundIcon;                                               // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 NavalIcon;                                                // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 LineBase;                                                 // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BillboardTarget;                                          // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LineTemplate;                                             // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           PlayerIconMatInstance;                                    // 0x05C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           AllyIconMatInstance;                                      // 0x05C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           EnemyIconMatInstance;                                     // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LineMeshOpacity;                                          // 0x05D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05DC(0x0004) MISSED OFFSET
	class UMaterialInstance*                           PlayerIconWireframeMatInstance;                           // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           AllyIconWireframeMatInstance;                             // 0x05E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           EnemyIconWireframeMatInstance;                            // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           PlayerIconLineMatInstance;                                // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           AllyIconLineMatInstance;                                  // 0x0600(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           EnemyIconLineMatInstance;                                 // 0x0608(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   TargetRingMaterial;                                       // 0x0610(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MapColorTint;                                             // 0x0618(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                PlayerUnitNameColor;                                      // 0x0628(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AllyUnitNameColor;                                        // 0x0638(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyUnitNameColor;                                       // 0x0648(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                PlayerUnitNameGlowColor;                                  // 0x0658(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AllyUnitNameGlowColor;                                    // 0x0668(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyUnitNameGlowColor;                                   // 0x0678(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                PlayerUnitAreaMapColor;                                   // 0x0688(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AllyUnitAreaMapColor;                                     // 0x0698(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyUnitAreaMapColor;                                    // 0x06A8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                PlayerUnitAreaMapGlowColor;                               // 0x06B8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AllyUnitAreaMapGlowColor;                                 // 0x06C8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyUnitAreaMapGlowColor;                                // 0x06D8(0x0010) (Edit, IsPlainOldData)
	class UDataTable*                                  CloudHeightDataTable;                                     // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06F0(0x0008) MISSED OFFSET
	struct FBriefUnitDataExtend                        PlayerUnitExtend;                                         // 0x06F8(0x0068) (Transient)
	TArray<struct FBriefUnitDataExtend>                AllyUnitsExtend;                                          // 0x0760(0x0010) (ZeroConstructor, Transient)
	TArray<struct FBriefUnitDataExtend>                EnemyUnitsExtend;                                         // 0x0770(0x0010) (ZeroConstructor, Transient)
	struct FBriefUnitGroup                             PlayerGroup;                                              // 0x0780(0x00E0) (Transient)
	TArray<struct FBriefUnitGroup>                     AllyGroups;                                               // 0x0860(0x0010) (ZeroConstructor, Transient)
	TArray<struct FBriefUnitGroup>                     EnemyGroups;                                              // 0x0870(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xD8];                                      // 0x0880(0x00D8) MISSED OFFSET
	TArray<class UImage*>                              AreaMapUnitIcons;                                         // 0x0958(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              AreaMapUnitIconPool;                                      // 0x0968(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0978(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignBattleProgressionWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignBriefingWidget
// 0x0090 (0x0560 - 0x04D0)
class UCampaignBriefingWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x04D0(0x0048) MISSED OFFSET
	class UStaticMesh*                                 BriefingMesh;                                             // 0x0518(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   BriefingCloudMaterial;                                    // 0x0520(0x0008) (ZeroConstructor, IsPlainOldData)
	class AStaticMeshActor*                            BriefingMeshActor;                                        // 0x0528(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0530(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignBriefingWidget");
		return ptr;
	}


	void OnMapMeshLoaded();
	void OnCloudMaterialLoaded();
	void OnBriefingLevelLoaded();
};


// Class Nimbus.CampaignDebriefingDecoderSettings
// 0x0018 (0x0040 - 0x0028)
class UCampaignDebriefingDecoderSettings : public UObject
{
public:
	float                                              SlowSpeed;                                                // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalSpeed;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HighSpeed;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InvReplayDistScale;                                       // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InvReplayHeightScale;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingDecoderSettings");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingRibbonSettings
// 0x0028 (0x0050 - 0x0028)
class UCampaignDebriefingRibbonSettings : public UObject
{
public:
	class UMaterialInstance*                           RibbonMatInstance;                                        // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RibbonWidth;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeadWidth;                                                // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeadLength;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NotchLength;                                              // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BigHeadWidth;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BigHeadLength;                                            // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BigNotchLength;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxLength;                                                // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingRibbonSettings");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingKillMarkSettings
// 0x0010 (0x0038 - 0x0028)
class UCampaignDebriefingKillMarkSettings : public UObject
{
public:
	class UMaterialInstance*                           MatInstance;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MarkSize;                                                 // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MarkLineWidth;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingKillMarkSettings");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingTerrainSettings
// 0x0030 (0x0058 - 0x0028)
class UCampaignDebriefingTerrainSettings : public UObject
{
public:
	class UClass*                                      DotClass;                                                 // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          MapMaterialRef;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DotColor;                                                 // 0x0038(0x0010) (Edit, IsPlainOldData)
	float                                              GridWidth;                                                // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MapWidth;                                                 // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MapHeight;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingTerrainSettings");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingUnitSettings
// 0x0100 (0x0128 - 0x0028)
class UCampaignDebriefingUnitSettings : public UObject
{
public:
	class UStaticMesh*                                 NavalIcon;                                                // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 GroundIcon;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 AttachmentIcon;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 AlicornIcon;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           ModelMatInstance;                                         // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           ModelLineMatInstance;                                     // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                PlayerColor;                                              // 0x0058(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AllyColor;                                                // 0x0068(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0078(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyTgtColor;                                            // 0x0088(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                UnknownColor;                                             // 0x0098(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                AlicornColor;                                             // 0x00A8(0x0010) (Edit, IsPlainOldData)
	float                                              NavalIconScale;                                           // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundIconScale;                                          // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttachmentIconScale;                                      // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlicornIconScale;                                         // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UnitNameOffset;                                           // 0x00C8(0x0008) (Edit, IsPlainOldData)
	class UFont*                                       NameTextFont;                                             // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           TextMat;                                                  // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           TextGlowMat;                                              // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnitNameScale;                                            // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AppearFadeTime;                                           // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeAppearFadeTime;                                         // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              KillMarkTime;                                             // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     KillMarkOffsetMesh;                                       // 0x00F8(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     KillMarkOffsetRibbon;                                     // 0x0104(0x000C) (Edit, IsPlainOldData)
	float                                              AlicornAppearDepth;                                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlicornDeAppearDepth;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlicornDeAppearWaitTime;                                  // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AlicornIconOffset;                                        // 0x011C(0x000C) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingUnitSettings");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingDataAsset
// 0x00E8 (0x0118 - 0x0030)
class UCampaignDebriefingDataAsset : public UDataAsset
{
public:
	class UCampaignDebriefingDecoderSettings*          Decoder;                                                  // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingRibbonSettings*           Ribbon;                                                   // 0x0038(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingKillMarkSettings*         KillMark;                                                 // 0x0040(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingTerrainSettings*          Terrain;                                                  // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingUnitSettings*             Unit;                                                     // 0x0050(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FCampaignDebriefingCameraInfo               Camera;                                                   // 0x0058(0x0058) (Edit)
	struct FCampaignDebriefingMovieInfo                Movie;                                                    // 0x00B0(0x0040) (Edit)
	struct FCampaignDebriefingOpeningAnimInfo          Opening;                                                  // 0x00F0(0x0024) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingDataAsset");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingDecoder
// 0x0038 (0x03A0 - 0x0368)
class ACampaignDebriefingDecoder : public AActor
{
public:
	class UCampaignDebriefingDecoderSettings*          Settings;                                                 // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0370(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingDecoder");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingKillMark
// 0x00E8 (0x0110 - 0x0028)
class UCampaignDebriefingKillMark : public UObject
{
public:
	bool                                               IsFreeFlag;                                               // 0x0028(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FTransform                                  ActorTransform;                                           // 0x0030(0x0030) (Transient, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x0060(0x000C) (Transient, IsPlainOldData)
	float                                              MarkSize;                                                 // 0x006C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LineWidth;                                                // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0074(0x0010) (Transient, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0084(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ForceAlpha;                                               // 0x0088(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	class UMaterialInstance*                           Material;                                                 // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SectionIdx;                                               // 0x0098(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	TArray<struct FVector>                             Vertices;                                                 // 0x00A0(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        Indices;                                                  // 0x00B0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVector>                             Normals;                                                  // 0x00C0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVector2D>                           UV0;                                                      // 0x00D0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FLinearColor>                        VertexColors;                                             // 0x00E0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FProcMeshTangent>                    Tangents;                                                 // 0x00F0(0x0010) (ZeroConstructor, Transient)
	bool                                               IsDirty;                                                  // 0x0100(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x0101(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingKillMark");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingKillMarkManager
// 0x0020 (0x0388 - 0x0368)
class ACampaignDebriefingKillMarkManager : public AActor
{
public:
	class UProceduralMeshComponent*                    Mesh;                                                     // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingKillMarkSettings*         Settings;                                                 // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UCampaignDebriefingKillMark*>         KillMarks;                                                // 0x0378(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingKillMarkManager");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingRibbon
// 0x00F8 (0x0120 - 0x0028)
class UCampaignDebriefingRibbon : public UObject
{
public:
	bool                                               IsFreeFlag;                                               // 0x0028(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                MaxLength;                                                // 0x002C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RibbonWidth;                                              // 0x0030(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HeadWidth;                                                // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HeadLength;                                               // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              NotchLength;                                              // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0040(0x0010) (Transient, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0050(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ForceAlpha;                                               // 0x0054(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsBigRibbon;                                              // 0x0058(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	class UMaterialInstance*                           Material;                                                 // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SectionIdx;                                               // 0x0068(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<struct FVector>                             Vertices;                                                 // 0x0070(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        Indices;                                                  // 0x0080(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVector>                             Normals;                                                  // 0x0090(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVector2D>                           UV0;                                                      // 0x00A0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FLinearColor>                        VertexColors;                                             // 0x00B0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FProcMeshTangent>                    Tangents;                                                 // 0x00C0(0x0010) (ZeroConstructor, Transient)
	bool                                               IsDirty;                                                  // 0x00D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x00D1(0x000F) MISSED OFFSET
	struct FTransform                                  PrevActorTransform;                                       // 0x00E0(0x0030) (Transient, IsPlainOldData)
	int                                                CurrLength;                                               // 0x0110(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0114(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingRibbon");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingUnitActor
// 0x0078 (0x03E0 - 0x0368)
class ACampaignDebriefingUnitActor : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0368(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingUnitSettings*             Settings;                                                 // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACampaignDebriefingDecoder*                  Decoder;                                                  // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACampaignDebriefingRibbonManager*            RibbonManager;                                            // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACampaignDebriefingKillMarkManager*          KillMarkManager;                                          // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextRenderComponent*                        UnitNameText;                                             // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        UnitNameGlowText;                                         // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x03A0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingUnitActor");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingRibbonManager
// 0x0020 (0x0388 - 0x0368)
class ACampaignDebriefingRibbonManager : public AActor
{
public:
	class UProceduralMeshComponent*                    Mesh;                                                     // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCampaignDebriefingRibbonSettings*           Settings;                                                 // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UCampaignDebriefingRibbon*>           Ribbons;                                                  // 0x0378(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingRibbonManager");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingWidget
// 0x0120 (0x05F0 - 0x04D0)
class UCampaignDebriefingWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET
	class UCampaignDebriefingDataAsset*                DebriefingParameters;                                     // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04E0(0x0008) MISSED OFFSET
	class ULevelStreaming*                             DebriefingLevel;                                          // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACameraActor*                                CameraActor;                                              // 0x04F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDebriefingCameraComponent*                  DebriefingCamera;                                         // 0x04F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APlayerController*                           PlayerController;                                         // 0x0500(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0508(0x0018) MISSED OFFSET
	class UTexture2D*                                  MapTexture;                                               // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0528(0x0030) MISSED OFFSET
	class UMovieSubtitleWidget*                        UmgSubtitle;                                              // 0x0558(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TMap<struct FName, class UTextBlock*>              UmgTextBlocks;                                            // 0x0560(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UTextBlock*                                  UmgDebriefButtonText;                                     // 0x05B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPanelWidget*                                ResultPanel;                                              // 0x05B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x30];                                      // 0x05C0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingWidget");
		return ptr;
	}


	void OnMapTextureLoaded();
	void OnLevelLoaded();
};


// Class Nimbus.CampaignMvWidget
// 0x0060 (0x0530 - 0x04D0)
class UCampaignMvWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x04D0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMvWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignEdWidget
// 0x0010 (0x0540 - 0x0530)
class UCampaignEdWidget : public UCampaignMvWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0530(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignEdWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignExtraMissionDifficultyWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCampaignExtraMissionDifficultyWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignExtraMissionDifficultyWidget");
		return ptr;
	}

};


// Class Nimbus.ExtraMissionSelectInfoDataAsset
// 0x0120 (0x0150 - 0x0030)
class UExtraMissionSelectInfoDataAsset : public UDataAsset
{
public:
	TArray<float>                                      LineBendPosTable;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FIntPoint>                           LeftLineBendPosIndex;                                     // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FIntPoint>                           RightLineBendPosIndex;                                    // 0x0050(0x0010) (Edit, ZeroConstructor)
	struct FUIMenuColor                                MapItemColorSelect;                                       // 0x0060(0x0020) (Edit)
	struct FUIMenuColor                                MapItemColorUnSelect;                                     // 0x0080(0x0020) (Edit)
	struct FUIMenuColor                                LineColor;                                                // 0x00A0(0x0020) (Edit)
	struct FVector2D                                   LineStartPosRight;                                        // 0x00C0(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineStartPosLeftOffset;                                   // 0x00C8(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetL;                                     // 0x00D0(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetR;                                     // 0x00D8(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetR_FreeFlight;                          // 0x00E0(0x0008) (Edit, IsPlainOldData)
	TArray<int>                                        LineTargetRefferenceNumber;                               // 0x00E8(0x0010) (Edit, ZeroConstructor)
	TMap<int, int>                                     LineTargetRefferenceMssionId;                             // 0x00F8(0x0050) (Edit, ZeroConstructor)
	float                                              LineWidth;                                                // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LineEasingDurationTime;                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ExtraMissionSelectInfoDataAsset");
		return ptr;
	}

};


// Class Nimbus.CampaignDebriefingTerrainManager
// 0x0038 (0x03A0 - 0x0368)
class ACampaignDebriefingTerrainManager : public AActor
{
public:
	class UCampaignDebriefingTerrainSettings*          Settings;                                                 // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCampaignDebriefingDecoderSettings*          DecoderSetting;                                           // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDebriefingCameraComponent*                  DebriefingCamera;                                         // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0380(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignDebriefingTerrainManager");
		return ptr;
	}

};


// Class Nimbus.CampaignExtraMissionWidget
// 0x07A0 (0x0C70 - 0x04D0)
class UCampaignExtraMissionWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x238];                                     // 0x04D0(0x0238) MISSED OFFSET
	TMap<struct FName, class UTextBlock*>              UmgTextBlocks;                                            // 0x0708(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UCanvasPanel*                                UmgMapPanel;                                              // 0x0758(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FExtraMissionSelectInfo                     MissionInfo[0x3];                                         // 0x0760(0x0038) (Transient)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0808(0x0050) MISSED OFFSET
	class UImage*                                      UmgMapCursor;                                             // 0x0858(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x98];                                      // 0x0860(0x0098) MISSED OFFSET
	class UCanvasPanel*                                UmgLineCanvas;                                            // 0x08F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgLineL[0x3];                                            // 0x0900(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgLineR[0x3];                                            // 0x0918(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2C8];                                     // 0x0930(0x02C8) MISSED OFFSET
	class UImage*                                      UmgThumbnailImage;                                        // 0x0BF8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgThumbnailImageTranstion;                               // 0x0C00(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x48];                                      // 0x0C08(0x0048) MISSED OFFSET
	class UTexture2D*                                  ThumbnailTexture[0x3];                                    // 0x0C50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0C68(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignExtraMissionWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignFreeMissionDifficultyWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCampaignFreeMissionDifficultyWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignFreeMissionDifficultyWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignFreeMissionNextWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCampaignFreeMissionNextWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignFreeMissionNextWidget");
		return ptr;
	}

};


// Class Nimbus.FreeMissionSelectInfoDataAsset
// 0x00D0 (0x0100 - 0x0030)
class UFreeMissionSelectInfoDataAsset : public UDataAsset
{
public:
	TArray<float>                                      LineBendPosTable;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FIntPoint>                           LeftLineBendPosIndex;                                     // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FIntPoint>                           RightLineBendPosIndex;                                    // 0x0050(0x0010) (Edit, ZeroConstructor)
	struct FUIMenuColor                                MapItemColorSelect;                                       // 0x0060(0x0020) (Edit)
	struct FUIMenuColor                                MapItemColorUnSelect;                                     // 0x0080(0x0020) (Edit)
	struct FUIMenuColor                                LineColor;                                                // 0x00A0(0x0020) (Edit)
	struct FVector2D                                   LineStartPosRight;                                        // 0x00C0(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineStartPosLeftOffset;                                   // 0x00C8(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetL;                                     // 0x00D0(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetR;                                     // 0x00D8(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   LineTargetPosOffsetR_FreeFlight;                          // 0x00E0(0x0008) (Edit, IsPlainOldData)
	TArray<int>                                        LineTargetRefferenceNumber;                               // 0x00E8(0x0010) (Edit, ZeroConstructor)
	float                                              LineWidth;                                                // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LineEasingDurationTime;                                   // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FreeMissionSelectInfoDataAsset");
		return ptr;
	}

};


// Class Nimbus.CampaignFreeMissionWidget
// 0x0C80 (0x1150 - 0x04D0)
class UCampaignFreeMissionWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET
	class UUserWidget*                                 UmgPlayGoWidget;                                          // 0x04D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x220];                                     // 0x04E0(0x0220) MISSED OFFSET
	TMap<struct FName, class UTextBlock*>              UmgTextBlocks;                                            // 0x0700(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UCanvasPanel*                                UmgMapPanel;                                              // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FFreeMissionSelectInfo                      MissionInfo[0x14];                                        // 0x0758(0x0030) (Transient)
	class UImage*                                      UmgMapCursor;                                             // 0x0B18(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x98];                                      // 0x0B20(0x0098) MISSED OFFSET
	class UCanvasPanel*                                UmgLineCanvas;                                            // 0x0BB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgLineL[0x3];                                            // 0x0BC0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgLineR[0x3];                                            // 0x0BD8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2C8];                                     // 0x0BF0(0x02C8) MISSED OFFSET
	class UImage*                                      UmgThumbnailImage;                                        // 0x0EB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgThumbnailImageTranstion;                               // 0x0EC0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1E0];                                     // 0x0EC8(0x01E0) MISSED OFFSET
	class UTexture2D*                                  ThumbnailTexture[0x14];                                   // 0x10A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x1148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignFreeMissionWidget");
		return ptr;
	}

};


// Class Nimbus.BTTask_SetStateMoveAwayFromTarget
// 0x0028 (0x0098 - 0x0070)
class UBTTask_SetStateMoveAwayFromTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetActorKey;                                           // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.BTTask_SetStateMoveAwayFromTarget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarAircraftWidget
// 0x00B0 (0x0580 - 0x04D0)
class UCommonHangarAircraftWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x04D0(0x0098) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x0568(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0570(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarAircraftWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarAircraftWidget
// 0x0010 (0x0590 - 0x0580)
class UCampaignHangarAircraftWidget : public UCommonHangarAircraftWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0580(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarAircraftWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarEmblemWidget
// 0x0080 (0x0550 - 0x04D0)
class UCommonHangarEmblemWidget : public UCommonHangarBaseMenuWidget
{
public:
	struct FVector2D                                   GridItemOffset;                                           // 0x04D0(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x78];                                      // 0x04D8(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarEmblemWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarEmblemWidget
// 0x0000 (0x0550 - 0x0550)
class UCampaignHangarEmblemWidget : public UCommonHangarEmblemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarEmblemWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarEmblemSwitchWidget
// 0x0010 (0x04E0 - 0x04D0)
class UCommonHangarEmblemSwitchWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarEmblemSwitchWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarEmblemSwitchWidget
// 0x0000 (0x04E0 - 0x04E0)
class UCampaignHangarEmblemSwitchWidget : public UCommonHangarEmblemSwitchWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarEmblemSwitchWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarPartsWidget
// 0x0040 (0x0510 - 0x04D0)
class UCommonHangarPartsWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04D0(0x0028) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x04F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0500(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarPartsWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarPartsWidget
// 0x0000 (0x0510 - 0x0510)
class UCampaignHangarPartsWidget : public UCommonHangarPartsWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarPartsWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarReviewWidget
// 0x0020 (0x04F0 - 0x04D0)
class UCommonHangarReviewWidget : public UCommonHangarBaseMenuWidget
{
public:
	class UHangarStatus*                               HangarStatus;                                             // 0x04D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x04D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarReviewWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarReviewWidget
// 0x0010 (0x0500 - 0x04F0)
class UCampaignHangarReviewWidget : public UCommonHangarReviewWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarReviewWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarSkinWidget
// 0x0030 (0x0500 - 0x04D0)
class UCommonHangarSkinWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x04D0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarSkinWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarSkinWidget
// 0x0000 (0x0500 - 0x0500)
class UCampaignHangarSkinWidget : public UCommonHangarSkinWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarSkinWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarWeaponViewerWidget
// 0x00D0 (0x05A0 - 0x04D0)
class UCampaignHangarWeaponViewerWidget : public UMenuBaseWidget
{
public:
	float                                              PlayerCamLookDistOffsetDefault;                           // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerCamFovOffsetMin;                                    // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerCamFovOffsetMax;                                    // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerCamPitchMin;                                        // 0x04DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerCamPitchMax;                                        // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   InitialCameraSphericalCoordinate;                         // 0x04E4(0x0008) (Edit, IsPlainOldData)
	struct FVector                                     AxisDistanceScale;                                        // 0x04EC(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     TargetPositionOffset;                                     // 0x04F8(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     CameraInitialPanningDistance;                             // 0x0504(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0510(0x0040) MISSED OFFSET
	class ANimbusHangarMeshManager*                    HangarManager;                                            // 0x0550(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0558(0x0038) MISSED OFFSET
	TArray<struct FWeaponViewerHiddenDeta>             HiddenActorsData;                                         // 0x0590(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarWeaponViewerWidget");
		return ptr;
	}

};


// Class Nimbus.CommonHangarWeaponWidget
// 0x0050 (0x0520 - 0x04D0)
class UCommonHangarWeaponWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x04D0(0x0038) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x0508(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0510(0x0008) MISSED OFFSET
	class UWeaponConceptWidget*                        WeaponConcept;                                            // 0x0518(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarWeaponWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarSortieWidget
// 0x0020 (0x04F0 - 0x04D0)
class UCampaignHangarSortieWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarSortieWidget");
		return ptr;
	}

};


// Class Nimbus.MissionBaseWidget
// 0x0010 (0x04E0 - 0x04D0)
class UMissionBaseWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionBaseWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHudPauseWidget
// 0x0350 (0x0830 - 0x04E0)
class UCampaignHudPauseWidget : public UMissionBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x340];                                     // 0x04E0(0x0340) MISSED OFFSET
	class ANimbusHUD*                                  HUD;                                                      // 0x0820(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0828(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHudPauseWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMenuActionSelectWidget
// 0x0010 (0x04E0 - 0x04D0)
class UCampaignMenuActionSelectWidget : public UMenuBaseWidget
{
public:
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMenuActionSelectWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMenuDifficultyWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCampaignMenuDifficultyWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMenuDifficultyWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMenuMainWidget
// 0x0010 (0x04E0 - 0x04D0)
class UCampaignMenuMainWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMenuMainWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMenuNextWidget
// 0x0010 (0x04E0 - 0x04D0)
class UCampaignMenuNextWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMenuNextWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMissionLoadWidget
// 0x0110 (0x05E0 - 0x04D0)
class UCampaignMissionLoadWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x110];                                     // 0x04D0(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMissionLoadWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignHangarWeaponWidget
// 0x0010 (0x0530 - 0x0520)
class UCampaignHangarWeaponWidget : public UCommonHangarWeaponWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0520(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignHangarWeaponWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMissionTitleWidget
// 0x0050 (0x0520 - 0x04D0)
class UCampaignMissionTitleWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x04D0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMissionTitleWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMvExtraBeginWidget
// 0x0000 (0x0530 - 0x0530)
class UCampaignMvExtraBeginWidget : public UCampaignMvWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMvExtraBeginWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMvExtraEndWidget
// 0x0000 (0x0530 - 0x0530)
class UCampaignMvExtraEndWidget : public UCampaignMvWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMvExtraEndWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignMvNewsWidget
// 0x0000 (0x0530 - 0x0530)
class UCampaignMvNewsWidget : public UCampaignMvWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignMvNewsWidget");
		return ptr;
	}

};


// Class Nimbus.CampaignRetryWidget
// 0x00C0 (0x05A0 - 0x04E0)
class UCampaignRetryWidget : public UMissionBaseWidget
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x04E0(0x00B8) MISSED OFFSET
	class ANimbusHUD*                                  HUD;                                                      // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CampaignRetryWidget");
		return ptr;
	}

};


// Class Nimbus.ChildSpawnerComponent
// 0x00A0 (0x0190 - 0x00F0)
class UChildSpawnerComponent : public UActorComponent
{
public:
	class AExplosiveWeapon*                            ExplosiveWeaponOwner;                                     // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 OwningGameObject;                                         // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0100(0x0018) MISSED OFFSET
	class UWeaponParameters*                           WeaponParameters;                                         // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AWeaponBase*>                         SpawnedChildren;                                          // 0x0120(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0130(0x0058) MISSED OFFSET
	class UPlayerWeaponActivator*                      WeaponActivator;                                          // 0x0188(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ChildSpawnerComponent");
		return ptr;
	}

};


// Class Nimbus.ChildSpawnerParameters
// 0x0028 (0x0050 - 0x0028)
class UChildSpawnerParameters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ChildSpawnerParameters");
		return ptr;
	}

};


// Class Nimbus.CloudCameraShake
// 0x0000 (0x0160 - 0x0160)
class UCloudCameraShake : public UCameraShake
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CloudCameraShake");
		return ptr;
	}

};


// Class Nimbus.CloudVolume
// 0x0008 (0x03A8 - 0x03A0)
class ACloudVolume : public AVolume
{
public:
	float                                              intensity;                                                // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CloudVolume");
		return ptr;
	}

};


// Class Nimbus.CockpitCameraInputComponent
// 0x0040 (0x03B0 - 0x0370)
class UCockpitCameraInputComponent : public UCameraInputComponent
{
public:
	bool                                               bUseFirstPersonCameraInput;                               // 0x0370(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	class UFirstPersonCameraInputComponent*            FirstPersonCameraInput;                                   // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0380(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CockpitCameraInputComponent");
		return ptr;
	}

};


// Class Nimbus.CombatZone
// 0x0040 (0x03E0 - 0x03A0)
class ACombatZone : public AVolume
{
public:
	float                                              AIFlightBufferDist;                                       // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x03A4(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CombatZone");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeSelector
// 0x0068 (0x0090 - 0x0028)
class UAircraftTreeSelector : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET
	class UPanelWidget*                                Widget;                                                   // 0x0080(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      ItemNode;                                                 // 0x0088(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeSelector");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeNodeWidget
// 0x0088 (0x00B0 - 0x0028)
class UAircraftTreeNodeWidget : public UObject
{
public:
	class UUserWidget*                                 ParentWidget;                                             // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUICategoryColor*                            CategoryColorDataIcon;                                    // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUICategoryColor*                            CategoryColorDataNode;                                    // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUICategoryColor*                            CategoryColorIcon;                                        // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET
	class UClass*                                      WidgetClass;                                              // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUserWidget*                                 Widget;                                                   // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanelSlot*                            Slot;                                                     // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   Scale;                                                    // 0x0070(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      CategoryIcon;                                             // 0x0078(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      background;                                               // 0x0080(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      BackgroundLocked;                                         // 0x0088(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  NameText;                                                 // 0x0090(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CostText;                                                 // 0x0098(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeNodeWidget");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeNodeBase
// 0x0018 (0x00C8 - 0x00B0)
class UAircraftTreeNodeBase : public UAircraftTreeNodeWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeNodeBase");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeNode
// 0x0038 (0x0100 - 0x00C8)
class UAircraftTreeNode : public UAircraftTreeNodeBase
{
public:
	class UImage*                                      ItemIcon;                                                 // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      ItemIconLocked;                                           // 0x00D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      StateIcon;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeNode");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeWeaponNode
// 0x0030 (0x00F8 - 0x00C8)
class UAircraftTreeWeaponNode : public UAircraftTreeNodeBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET
	class UAircraftTreeGroup*                          Group;                                                    // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x00E0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeWeaponNode");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeWeaponNodeGroup
// 0x0028 (0x0050 - 0x0028)
class UAircraftTreeWeaponNodeGroup : public UObject
{
public:
	class UAircraftTreeNode*                           AircraftNode;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	class UAircraftTreeWeaponNode*                     Nodes[0x3];                                               // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeWeaponNodeGroup");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeGroup
// 0x0068 (0x0090 - 0x0028)
class UAircraftTreeGroup : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET
	TArray<class UAircraftTreeNode*>                   Nodes;                                                    // 0x0050(0x0010) (ZeroConstructor, Transient)
	TArray<class UAircraftTreeLink*>                   Links;                                                    // 0x0060(0x0010) (ZeroConstructor, Transient)
	class UAircraftTreeWeaponNodeGroup*                WeaponNodes;                                              // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0078(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeGroup");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeLink
// 0x0020 (0x0048 - 0x0028)
class UAircraftTreeLink : public UObject
{
public:
	class UAircraftTreeGroup*                          GroupSrc;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAircraftTreeGroup*                          GroupDst;                                                 // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeLink");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeLinkSegment
// 0x0048 (0x0070 - 0x0028)
class UAircraftTreeLinkSegment : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	TArray<class UAircraftTreeLink*>                   Links;                                                    // 0x0048(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeLinkSegment");
		return ptr;
	}

};


// Class Nimbus.PurchaseAnimationNodeBase
// 0x0010 (0x0038 - 0x0028)
class UPurchaseAnimationNodeBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UCommonAircraftTreeWidget*                   Menu;                                                     // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PurchaseAnimationNodeBase");
		return ptr;
	}

};


// Class Nimbus.PurchaseAnimationItemNode
// 0x0008 (0x0040 - 0x0038)
class UPurchaseAnimationItemNode : public UPurchaseAnimationNodeBase
{
public:
	class UAircraftTreeNode*                           Node;                                                     // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PurchaseAnimationItemNode");
		return ptr;
	}

};


// Class Nimbus.PurchaseAnimationWeaponNode
// 0x0008 (0x0040 - 0x0038)
class UPurchaseAnimationWeaponNode : public UPurchaseAnimationNodeBase
{
public:
	class UAircraftTreeWeaponNode*                     Node;                                                     // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PurchaseAnimationWeaponNode");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationBase
// 0x0018 (0x0040 - 0x0028)
class UAircraftTreeAnimationBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UCommonAircraftTreeWidget*                   Menu;                                                     // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationBase");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationPurchase
// 0x0010 (0x0050 - 0x0040)
class UAircraftTreeAnimationPurchase : public UAircraftTreeAnimationBase
{
public:
	class UAircraftTreeNodeBase*                       Node;                                                     // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPurchaseAnimationNodeBase*                  AnimNode;                                                 // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationPurchase");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationSave
// 0x0000 (0x0040 - 0x0040)
class UAircraftTreeAnimationSave : public UAircraftTreeAnimationBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationSave");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationUnlock
// 0x0020 (0x0060 - 0x0040)
class UAircraftTreeAnimationUnlock : public UAircraftTreeAnimationBase
{
public:
	class UAircraftTreeLink*                           Link;                                                     // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0048(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationUnlock");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationFadeNode
// 0x0010 (0x0050 - 0x0040)
class UAircraftTreeAnimationFadeNode : public UAircraftTreeAnimationBase
{
public:
	class UAircraftTreeGroup*                          Group;                                                    // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationFadeNode");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationCheckUnlockRewards
// 0x0008 (0x0048 - 0x0040)
class UAircraftTreeAnimationCheckUnlockRewards : public UAircraftTreeAnimationBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationCheckUnlockRewards");
		return ptr;
	}

};


// Class Nimbus.AircraftTreeAnimationPlayer
// 0x0020 (0x0048 - 0x0028)
class UAircraftTreeAnimationPlayer : public UObject
{
public:
	TArray<class UAircraftTreeAnimationBase*>          Animations;                                               // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationPlayer");
		return ptr;
	}

};


// Class Nimbus.CommonHangarNameWidget
// 0x00D0 (0x05A0 - 0x04D0)
class UCommonHangarNameWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0xC0];                                      // 0x04D0(0x00C0) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonHangarNameWidget");
		return ptr;
	}

};


// Class Nimbus.CommonMenuHangarWidget
// 0x0000 (0x04D0 - 0x04D0)
class UCommonMenuHangarWidget : public UCommonHangarBaseMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CommonMenuHangarWidget");
		return ptr;
	}

};


// Class Nimbus.NimbusUserWidget
// 0x0028 (0x0230 - 0x0208)
class UNimbusUserWidget : public UUserWidget
{
public:
	bool                                               bDisableOnPause;                                          // 0x0208(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class APlayerPlane*                                PlayerPlane;                                              // 0x0210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraViewComponent*                        CameraViewComponent;                                      // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ANimbusHUD*                                  HUD;                                                      // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ShowGroup;                                                // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x022C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusUserWidget");
		return ptr;
	}


	void OnVRFadeOut(float Duration);
	void OnSpecialWeaponChanged();
	void OnResetWeaponName();
	void OnHUDShowGroup(int Group);
	void OnHUDEnabled();
	void OnHUDDisabled();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
	void OnCameraViewChanged(ECameraType CameraType);
};


// Class Nimbus.CompassWidget
// 0x00D0 (0x0300 - 0x0230)
class UCompassWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0230(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CompassWidget");
		return ptr;
	}


	void CurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.CompositeComparator
// 0x0018 (0x0040 - 0x0028)
class UCompositeComparator : public UVariableComparator
{
public:
	TArray<class UVariableComparator*>                 ChildComparators;                                         // 0x0028(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CompositeComparator");
		return ptr;
	}

};


// Class Nimbus.ConditionActionDataAsset
// 0x0018 (0x0048 - 0x0030)
class UConditionActionDataAsset : public UDataAsset
{
public:
	uint32_t                                           MinId;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxId;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FCAConfigurationEntry>               ConfigurationEntryList;                                   // 0x0038(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ConditionActionDataAsset");
		return ptr;
	}

};


// Class Nimbus.ConditionActionManager
// 0x0178 (0x01A0 - 0x0028)
class UConditionActionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0028(0x0080) MISSED OFFSET
	class UNimbusGameInstance*                         GameInstance;                                             // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x68];                                      // 0x00B0(0x0068) MISSED OFFSET
	TMap<struct FName, class UConditionActionDataAsset*> CADataAssetMap;                                           // 0x0118(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x38];                                      // 0x0168(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ConditionActionManager");
		return ptr;
	}

};


// Class Nimbus.CopyrightWidget
// 0x0070 (0x0540 - 0x04D0)
class UCopyrightWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04D0(0x0020) MISSED OFFSET
	class UImage*                                      UmgFadeImage;                                             // 0x04F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgWarningCopyCesaImage;                                  // 0x04F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgBNEImage;                                              // 0x0500(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgBNSImage;                                              // 0x0508(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgUEImage;                                               // 0x0510(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgCRIWareImage;                                          // 0x0518(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgCopyrightText;                                         // 0x0520(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgCopyrightImage;                                        // 0x0528(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgWarningText;                                           // 0x0530(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgGenericLoadingIcon;                                    // 0x0538(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CopyrightWidget");
		return ptr;
	}

};


// Class Nimbus.CustomRichTextBlock
// 0x0000 (0x03A8 - 0x03A8)
class UCustomRichTextBlock : public URichTextBlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CustomRichTextBlock");
		return ptr;
	}

};


// Class Nimbus.DamageAreaWeapon
// 0x0038 (0x0658 - 0x0620)
class ADamageAreaWeapon : public AWeaponBase
{
public:
	float                                              DamageAreaDamageStartTime;                                // 0x0620(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageAreaRadiusMeters;                                   // 0x0624(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FirstImpactDamage;                                        // 0x0628(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AreaDamage;                                               // 0x062C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AreaDamageInterval;                                       // 0x0630(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DebugExplosionArea;                                       // 0x0634(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0635(0x0003) MISSED OFFSET
	TArray<class AGameObject*>                         ActiveGameObjects;                                        // 0x0638(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0648(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DamageAreaWeapon");
		return ptr;
	}

};


// Class Nimbus.ConstraintBreakApart
// 0x0080 (0x00A8 - 0x0028)
class UConstraintBreakApart : public UObject
{
public:
	TArray<class UConstraintBreakApart*>               ChildrenConstraint;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	class UConstraintBreakApart*                       ParentConstraint;                                         // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bUseRandomBreak : 1;                                      // 0x0040(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FName                                       ConstraintName;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSpawnTrailVfx : 1;                                       // 0x0050(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSpawnDestroyedVfx : 1;                                   // 0x0050(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHideOnDestroy : 1;                                       // 0x0050(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	float                                              TimeToLive;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DecayTimeMin;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DecayTimeMax;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreakProbability;                                         // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngularVelocityMinMultiplier;                             // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngularVelocityMaxMultiplier;                             // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0070(0x0030) MISSED OFFSET
	class USkeletalMeshComponent*                      OwnerMeshComponent;                                       // 0x00A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ConstraintBreakApart");
		return ptr;
	}

};


// Class Nimbus.DamagedMainBodySpinParam
// 0x0060 (0x0088 - 0x0028)
class UDamagedMainBodySpinParam : public UObject
{
public:
	float                                              Delay;                                                    // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollMin;                                                  // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRandom;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollDamping;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bFacingDown;                                              // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              PitchTime;                                                // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchBase;                                                // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchDamping;                                             // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchRandom;                                              // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawTime;                                                  // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawRandom;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawDamping;                                               // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityTime;                                              // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarabaraTime;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirResistance;                                            // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterResistance;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DivideWingRollSpeed1;                                     // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DivideWingRollTime1;                                      // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DivideWingRollSpeed2;                                     // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DivideWingRollTime2;                                      // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLive;                                               // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLiveForMultiPlayer;                                 // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DamagedMainBodySpinParam");
		return ptr;
	}

};


// Class Nimbus.DamagedStateComponent
// 0x0328 (0x0418 - 0x00F0)
class UDamagedStateComponent : public UNimbusGameObjectComponent
{
public:
	struct FString                                     MeshComponentName;                                        // 0x00F0(0x0010) (Edit, ZeroConstructor)
	bool                                               bAreDamagedStatesCompounded;                              // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	TArray<struct FDamagedStateInstance>               DamagedStateInstances;                                    // 0x0108(0x0010) (Edit, ZeroConstructor)
	struct FName                                       MeshMaterialDamageParameterName;                          // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamagedMainBodySpinParam*                   MainBodySpinParam;                                        // 0x0120(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDamagedBreakApartSequence*                  DamageBreakApartSequence;                                 // 0x0128(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               MainBodyTrailSocketNames;                                 // 0x0130(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     DestroyedBodyMeshComponentName;                           // 0x0140(0x0010) (Edit, ZeroConstructor)
	struct FString                                     DestroyedPartsMeshComponentName;                          // 0x0150(0x0010) (Edit, ZeroConstructor)
	struct FString                                     DestroyedStaticMeshComponentName;                         // 0x0160(0x0010) (Edit, ZeroConstructor)
	ESoundChannelType                                  ExplosionSoundOverride;                                   // 0x0170(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
	class UAkAudioEvent*                               FallingSoundPlayEvent;                                    // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               FallingSoundStopEvent;                                    // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSeaExplosionInfo                           SeaExplosionInfo;                                         // 0x0188(0x0008) (Edit)
	bool                                               bShowExtraDestroyedVFX;                                   // 0x0190(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
	TArray<struct FDamagedVFXInfo>                     ExtraVfxInfo;                                             // 0x0198(0x0010) (Edit, ZeroConstructor)
	bool                                               bIsDetachExtraVfxInfoWithFinalExplosion;                  // 0x01A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowGroundDecal;                                         // 0x01A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x01AA(0x0006) MISSED OFFSET
	struct FGroundDecalInfo                            GroundDecalInfo;                                          // 0x01B0(0x0020) (Edit)
	struct FHealthWarningLight                         HealthWarningLight;                                       // 0x01D0(0x0050) (Edit)
	bool                                               bIsShownInFirstPersonView;                                // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsShownInCockpitView;                                    // 0x0221(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsShownInThirdPersonView;                                // 0x0222(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0223(0x0001) MISSED OFFSET
	float                                              TimeToDeactivateAfterDeathForMultiPlayer;                 // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VRDeathFadeOutDuration;                                   // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ENimbusCameraShakeType                             FinalExplosionShakeType;                                  // 0x022C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableDamagedBodyMeshCollision;                          // 0x022D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x022E(0x0002) MISSED OFFSET
	class AGameObject*                                 OwnerGameObject;                                          // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMeshComponent*                              OwnerMesh;                                                // 0x0238(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              OwnerDamagedMesh;                                         // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APlayerPlane*                                OwnerPlayerPlane;                                         // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIPlane*                                    OwnerAIPlane;                                             // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIHeli*                                     OwnerAIHeli;                                              // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMeshComponent*                      DamagedBodyMeshComponent;                                 // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      DamagedPartsMeshComponent;                                // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        DamagedStaticMeshComponent;                               // 0x0270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x170];                                     // 0x0278(0x0170) MISSED OFFSET
	TArray<int>                                        PendingDeathVFXList;                                      // 0x03E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x20];                                      // 0x03F8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DamagedStateComponent");
		return ptr;
	}


	void OnVisibilityChanged(bool bVisibility);
	void OnRestored();
	void OnOwnerChildObjectRecoveryTriggered(class AGameObject* ChildGameObject);
	void OnComponentHitSurface(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnCameraViewChanged(ECameraType CameraViewType);
	void ForceCauseFinalExplosion();
	void DamageStateLifeSpanExpired(int StateIndex);
};


// Class Nimbus.AircraftTreeAnimationMoveFocus
// 0x0018 (0x0058 - 0x0040)
class UAircraftTreeAnimationMoveFocus : public UAircraftTreeAnimationBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.AircraftTreeAnimationMoveFocus");
		return ptr;
	}

};


// Class Nimbus.NimbusGameMode
// 0x0030 (0x0468 - 0x0438)
class ANimbusGameMode : public AGameMode
{
public:
	class UClass*                                      SubtitleWidgetClass;                                      // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SubtitleWidgetVRClass;                                    // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USubtitleWidget*                             SubtitleWidget;                                           // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0450(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameMode");
		return ptr;
	}

};


// Class Nimbus.MultiPlayerGameMode
// 0x0718 (0x0B80 - 0x0468)
class AMultiPlayerGameMode : public ANimbusGameMode
{
public:
	uint64_t                                           FinishingCountDownDuration;                               // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	class APlayerPlane*                                LocalPlayerPlane;                                         // 0x0478(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0480(0x0008) MISSED OFFSET
	float                                              HotJoinGodPlayerInSeconds;                                // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinimumBattleTimeToHotJoinInSeconds;                      // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InGameWidgetClass;                                        // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      IgcHudTDClass;                                            // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      IgcHudMvpClass;                                           // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      IgcHudKillerClass;                                        // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TargetContainClass;                                       // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMultiPlayerInGameWidget*                    InGameHudWidget;                                          // 0x04B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMultiIGCHudTDWidget*                        IgcHudTDWidget;                                           // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMultiIGCHudMVPWidget*                       IgcHudMvpWidget;                                          // 0x04C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMultiIGCHudKillerWidget*                    IgcHudKillerWidget;                                       // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5F8];                                     // 0x04D8(0x05F8) MISSED OFFSET
	class UDataTable*                                  MaximumMedalDataTable;                                    // 0x0AD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA8];                                      // 0x0AD8(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiPlayerGameMode");
		return ptr;
	}


	void ToggleManuallyRequestGameResults();
	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.TeamDeathMatchGameMode
// 0x0D00 (0x1880 - 0x0B80)
class ATeamDeathMatchGameMode : public AMultiPlayerGameMode
{
public:
	unsigned char                                      UnknownData00[0x118];                                     // 0x0B80(0x0118) MISSED OFFSET
	float                                              EndingStateDurationInSeconds;                             // 0x0C98(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WinLoseStateDurationInSeconds;                            // 0x0C9C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResultDetailStateDurationInSeconds;                       // 0x0CA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RewardStateDurationInSeconds;                             // 0x0CA4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RewardMedalStateDurationInSeconds;                        // 0x0CA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RewardItemStateDurationInSeconds;                         // 0x0CAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RewardFeatureStateDurationInSeconds;                      // 0x0CB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RetrySaveAutoKickDurationInSeconds;                       // 0x0CB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RespawnGodModeDurationInSeconds;                          // 0x0CB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimumRespawnDistanceInMeter;                            // 0x0CBC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AbortDisplayDurationInSeconds;                            // 0x0CC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17C];                                     // 0x0CC4(0x017C) MISSED OFFSET
	class UDataTable*                                  BaseMatchResultDataTable;                                 // 0x0E40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  EvalulationModifierDataTable;                             // 0x0E48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PlacingModifierDataTable;                                 // 0x0E50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PlacingModifierStarDataTable;                             // 0x0E58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AircraftCostModifierDataTable;                            // 0x0E60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  ScoreBasePointDataTable;                                  // 0x0E68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  RankingPlayerNumberModifierDataTable;                     // 0x0E70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  CrashPenaltyModifierDataTable;                            // 0x0E78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MRPPlayerNumberModifierDataTable;                         // 0x0E80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        AircraftCostBands;                                        // 0x0E88(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0E98(0x0008) MISSED OFFSET
	float                                              CombatZoneRatioTowardsMiniMap;                            // 0x0EA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0EA4(0x0004) MISSED OFFSET
	class UMultiplayerScoreCalculator*                 ScoreCalculator;                                          // 0x0EA8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0xA0];                                      // 0x0EB0(0x00A0) MISSED OFFSET
	int                                                MMRDFactor;                                               // 0x0F50(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MMRKFactor;                                               // 0x0F54(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NoEffectMMRDistanceLimit;                                 // 0x0F58(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x774];                                     // 0x0F5C(0x0774) MISSED OFFSET
	class UClass*                                      StatsTestWidgetClass;                                     // 0x16D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x16D8(0x0008) MISSED OFFSET
	class UClass*                                      SteamPlayerNameIDMapClass;                                // 0x16E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x160];                                     // 0x16E8(0x0160) MISSED OFFSET
	class UClass*                                      ClientNameWidgetClass;                                    // 0x1848(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTextBlock*                                  ClientNameTextBlock;                                      // 0x1850(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ClientNameWidget;                                         // 0x1858(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x1860(0x0008) MISSED OFFSET
	class APlayerPlane*                                LocalPlayerPlaneKiller;                                   // 0x1868(0x0008) (ZeroConstructor, IsPlainOldData)
	class AElectronicSupportMeasures*                  EsmBaseClass;                                             // 0x1870(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x1878(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TeamDeathMatchGameMode");
		return ptr;
	}


	void PlayIGC(EMultiplayerIGCType IGCType, int IGCIndex);
	void OnIGCCompleted(EMultiplayerIGCType IGCType, int IGCIndex);
	int GetBaseMatchResultReward();
};


// Class Nimbus.DeathMatchGameMode
// 0x0000 (0x1880 - 0x1880)
class ADeathMatchGameMode : public ATeamDeathMatchGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DeathMatchGameMode");
		return ptr;
	}

};


// Class Nimbus.MultiPlayerInGameWidget
// 0x0290 (0x04C0 - 0x0230)
class UMultiPlayerInGameWidget : public UNimbusUserWidget
{
public:
	class UWidgetAnimation*                            NormalTimeLeftAnimation;                                  // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            FinishingTimeLeftAnimation;                               // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                MessageColorSelf;                                         // 0x0240(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MessageColorTeam;                                         // 0x0250(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MessageColorEnemy;                                        // 0x0260(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MessageColorSystem;                                       // 0x0270(0x0010) (Edit, IsPlainOldData)
	float                                              MessageMoveUpSpeed;                                       // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MessageAutoScrollingInterval;                             // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class ATeamDeathMatchGameMode*                     MultiPlayerGameMode;                                      // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0290(0x0018) MISSED OFFSET
	class UCanvasPanel*                                StartPanel;                                               // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RemainingTime;                                            // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RemainingTimeTextBlock;                                   // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x140];                                     // 0x02C0(0x0140) MISSED OFFSET
	class UTextBlock*                                  PlaneInfoCallsign;                                        // 0x0400(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ScoreUpdateText;                                          // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0410(0x0018) MISSED OFFSET
	class UScrollBox*                                  MessageBox;                                               // 0x0428(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x90];                                      // 0x0430(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiPlayerInGameWidget");
		return ptr;
	}


	void OnHUDEnabled();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.DebriefingCameraComponent
// 0x00E0 (0x0A30 - 0x0950)
class UDebriefingCameraComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData00[0xE0];                                      // 0x0950(0x00E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebriefingCameraComponent");
		return ptr;
	}

};


// Class Nimbus.DeathMatchInGameUIElements
// 0x0070 (0x0530 - 0x04C0)
class UDeathMatchInGameUIElements : public UMultiPlayerInGameWidget
{
public:
	struct FLinearColor                                RankDefaultColor;                                         // 0x04C0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                RankHighlightColor;                                       // 0x04D0(0x0010) (Edit, IsPlainOldData)
	class UTextBlock*                                  FirstPlayerName;                                          // 0x04E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  FirstPlayerID;                                            // 0x04E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  FirstPlayerScore;                                         // 0x04F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  LocalPlayerRanking;                                       // 0x04F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  LocalPlayerName;                                          // 0x0500(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  LocalPlayerID;                                            // 0x0508(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  LocalPlayerScore;                                         // 0x0510(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  FirstPositionText;                                        // 0x0518(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0520(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DeathMatchInGameUIElements");
		return ptr;
	}

};


// Class Nimbus.NimbusDebugController
// 0x00C0 (0x07C8 - 0x0708)
class ANimbusDebugController : public ADebugCameraController
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0708(0x0060) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShowDebugMenu;                                          // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHideDebugMenu;                                          // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPause;                                                  // 0x0788(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExit;                                                   // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChange;                                            // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAttachToTarget;                                         // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusDebugController");
		return ptr;
	}


	void STATIC_StopDebugMode();
	class ANimbusDebugController* STATIC_StartDebugMode(class APlayerController* PlayerController);
	void SetYawAcceleration(float Value);
	void SetState(EDebugModeState Value);
	void SetSpeedScale(float Value);
	void SetLookSensitivity(float Value);
	void SetIsUsingFPSControls(bool Value);
	void SetIsSpeedBoostEnabled(bool Value);
	void OnStateChange__DelegateSignature(EDebugModeState NewState);
	void OnShowDebugMenu__DelegateSignature();
	void OnPause__DelegateSignature();
	void OnHideDebugMenu__DelegateSignature();
	void OnExit__DelegateSignature();
	void OnAttachToTarget__DelegateSignature();
	float GetYawAcceleration();
	EDebugModeState GetState();
	float GetSpeedScale();
	float GetLookSensitivity();
	bool GetIsUsingFPSControls();
	bool GetIsSpeedBoostEnabled();
	class ANimbusDebugController* STATIC_GetDebugController();
};


// Class Nimbus.DebugMenuWidget
// 0x0090 (0x00B8 - 0x0028)
class UDebugMenuWidget : public UObject
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0028(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuWidget");
		return ptr;
	}

};


// Class Nimbus.DebugMenuAnalysisOption
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuAnalysisOption : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuAnalysisOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuAutomationTest
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuAutomationTest : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuAutomationTest");
		return ptr;
	}

};


// Class Nimbus.DebugMenuCollectLoadedTexture
// 0x0008 (0x00C0 - 0x00B8)
class UDebugMenuCollectLoadedTexture : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuCollectLoadedTexture");
		return ptr;
	}

};


// Class Nimbus.DebugMenuGameOption
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuGameOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuGameOption");
		return ptr;
	}

};


// Class Nimbus.DebugLog
// 0x0028 (0x0050 - 0x0028)
class UDebugLog : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugLog");
		return ptr;
	}

};


// Class Nimbus.DebugMenuMissionHitch
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuMissionHitch : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuMissionHitch");
		return ptr;
	}

};


// Class Nimbus.DebugMenuEmblemList
// 0x0020 (0x00D8 - 0x00B8)
class UDebugMenuEmblemList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuEmblemList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuMissionOption
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuMissionOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuMissionOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuMissionVariables
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuMissionVariables : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuMissionVariables");
		return ptr;
	}

};


// Class Nimbus.DebugMenuMultiplayerOption
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuMultiplayerOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuMultiplayerOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuObjectList
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuObjectList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuObjectList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuGraphicsOption
// 0x0008 (0x00C0 - 0x00B8)
class UDebugMenuGraphicsOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuGraphicsOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuObjectMap
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuObjectMap : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuObjectMap");
		return ptr;
	}

};


// Class Nimbus.DebugMenuObjectOption
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuObjectOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuObjectOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuParticleSystemList
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuParticleSystemList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuParticleSystemList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuPlayerAircraftSettings
// 0x0008 (0x00C0 - 0x00B8)
class UDebugMenuPlayerAircraftSettings : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuPlayerAircraftSettings");
		return ptr;
	}

};


// Class Nimbus.DebugMenuRadioGroupList
// 0x0020 (0x00D8 - 0x00B8)
class UDebugMenuRadioGroupList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuRadioGroupList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuRadioOption
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuRadioOption : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuRadioOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuPreviewRadioDataTableList
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuPreviewRadioDataTableList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	TArray<class UDataTable*>                          FilteredRadioDataTable;                                   // 0x00C0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuPreviewRadioDataTableList");
		return ptr;
	}


	void STATIC_SetRadioDataTable(TArray<class UDataTable*> InRadioDataTable);
};


// Class Nimbus.DamagedBreakApartSequence
// 0x00A0 (0x00C8 - 0x0028)
class UDamagedBreakApartSequence : public UObject
{
public:
	float                                              TimeToStayIntact;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToStayIntactGround;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLive;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseStrength;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseStrengthGround;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ExplosionPointOffset;                                     // 0x003C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              ExplosionPointRandomRange;                                // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsParking;                                               // 0x004C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsOnGround;                                              // 0x004D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bOwnerExploded;                                           // 0x004E(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsVRPlane;                                               // 0x004F(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EGameObjectCategory                                GameObjectCategory;                                       // 0x0050(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UConstraintBreakApart*                       ConstraintRoot;                                           // 0x0058(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FDataTableRowHandle                         VFXImpactTrailTable;                                      // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FDataTableRowHandle                         VFXOnGroundImpactTable;                                   // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       VRRowName;                                                // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       VRSocketName;                                             // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0090(0x0010) MISSED OFFSET
	TArray<struct FSpawnedVfxTrailInfo>                DamagedPartsTrailVFXList;                                 // 0x00A0(0x0010) (ZeroConstructor, Transient)
	TArray<class UParticleSystemComponent*>            CrashVFXList;                                             // 0x00B0(0x0010) (ExportObject, ZeroConstructor, Transient)
	class USkeletalMeshComponent*                      OwnerMeshComponent;                                       // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DamagedBreakApartSequence");
		return ptr;
	}

};


// Class Nimbus.DebugMenuRadioTableList
// 0x0020 (0x00D8 - 0x00B8)
class UDebugMenuRadioTableList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuRadioTableList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuReplayList
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuReplayList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuReplayList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuRadioSpeakerList
// 0x0010 (0x00C8 - 0x00B8)
class UDebugMenuRadioSpeakerList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuRadioSpeakerList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuSaveDataOption
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuSaveDataOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuSaveDataOption");
		return ptr;
	}

};


// Class Nimbus.CockpitCameraComponent
// 0x0010 (0x0A60 - 0x0A50)
class UCockpitCameraComponent : public UAnimatedCameraComponent
{
public:
	float                                              FOVForNonVRHeadTracking;                                  // 0x0A50(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0A54(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.CockpitCameraComponent");
		return ptr;
	}

};


// Class Nimbus.DebugMenuSkinList
// 0x0030 (0x00E8 - 0x00B8)
class UDebugMenuSkinList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x00B8(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuSkinList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuSoundOption
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuSoundOption : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuSoundOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestIshizawa
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestIshizawa : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestIshizawa");
		return ptr;
	}

};


// Class Nimbus.DebugMenuReplayOption
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuReplayOption : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuReplayOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestJunn
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestJunn : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestJunn");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestKaku
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestKaku : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestKaku");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestPlatform
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestPlatform : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestPlatform");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestSakaki
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestSakaki : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestSakaki");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTextureList
// 0x0038 (0x00F0 - 0x00B8)
class UDebugMenuTextureList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x00B8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTextureList");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTop
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTop : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTop");
		return ptr;
	}

};


// Class Nimbus.DebugMenuUIOption
// 0x0018 (0x00D0 - 0x00B8)
class UDebugMenuUIOption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuUIOption");
		return ptr;
	}

};


// Class Nimbus.DebugMenuTestTop
// 0x0000 (0x00B8 - 0x00B8)
class UDebugMenuTestTop : public UDebugMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTestTop");
		return ptr;
	}

};


// Class Nimbus.DebugMenuUpgradePartsList
// 0x0020 (0x00D8 - 0x00B8)
class UDebugMenuUpgradePartsList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuUpgradePartsList");
		return ptr;
	}

};


// Class Nimbus.DebugMissionHitchChecker
// 0x00A8 (0x00D0 - 0x0028)
class UDebugMissionHitchChecker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	float                                              HitchCautionThresholdTimeMS;                              // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HitchWarningThresholdTimeMS;                              // 0x0044(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	double                                             HitchMeasureTime;                                         // 0x0048(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HitchThresholdTimeMSMultiplierForPIE;                     // 0x0050(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UNimbusGameInstance*                         NimbusGameInstance;                                       // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x70];                                      // 0x0060(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMissionHitchChecker");
		return ptr;
	}

};


// Class Nimbus.NimbusDebugPawn
// 0x0000 (0x03F0 - 0x03F0)
class ANimbusDebugPawn : public ASpectatorPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusDebugPawn");
		return ptr;
	}

};


// Class Nimbus.DestroyableTGT
// 0x0020 (0x0DD0 - 0x0DB0)
class ADestroyableTGT : public AAIGroundVehicle
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0DB0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                ID;                                                       // 0x0DB8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0DBC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DestroyableTGT");
		return ptr;
	}


	void ActivateTGT(bool bActive);
};


// Class Nimbus.DialogManager
// 0x0040 (0x0068 - 0x0028)
class UDialogManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DialogManager");
		return ptr;
	}


	struct FDialogHandle OpenDialogID(EDialogIDs DialogID, const struct FString& DialogArguments);
	struct FDialogHandle OpenDialog(const struct FDialogInfo& DialogInfo);
	void OnItemAccepted(const struct FDialogInfo& DialogInfo);
	void OnDialogOpened(const struct FDialogInfo& DialogInfo);
	void OnDialogClosed(const struct FDialogInfo& DialogInfo);
	bool IsDialogStackEmpty();
	bool IsDialogOpen(bool bIncludeIcons);
	bool IsDialogInStack(const struct FDialogHandle& DialogHandle);
	bool IsDialogIDInStack(EDialogIDs DialogID);
	EDialogResults GetDialogResultByHandle(const struct FDialogHandle& DialogHandle);
	EDialogResults GetDialogResult();
	class UDialogWidget* GetCurrentOpenDialogWidget();
	EDialogIDs GetCurrentDialogID();
	struct FDialogHandle GetCurrentDialogHandle();
	bool DoesDialogWidgetExist(EDialogType DialogType);
	bool CloseDialogByID(EDialogIDs DialogID);
	bool CloseAllDialogs(uint32_t LimitPriorityHigh);
};


// Class Nimbus.DebugMenuVROption
// 0x0008 (0x00C0 - 0x00B8)
class UDebugMenuVROption : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuVROption");
		return ptr;
	}

};


// Class Nimbus.DynamicDrawCanvas
// 0x0280 (0x03A0 - 0x0120)
class UDynamicDrawCanvas : public UCanvasPanel
{
public:
	unsigned char                                      UnknownData00[0x280];                                     // 0x0120(0x0280) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DynamicDrawCanvas");
		return ptr;
	}

};


// Class Nimbus.DynamicDrawWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class UDynamicDrawWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DynamicDrawWidgetInterface");
		return ptr;
	}

};


// Class Nimbus.DialogWidget
// 0x0040 (0x0330 - 0x02F0)
class UDialogWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x02F0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DialogWidget");
		return ptr;
	}

};


// Class Nimbus.NormalDialogWidget
// 0x0050 (0x0380 - 0x0330)
class UNormalDialogWidget : public UDialogWidget
{
public:
	class UImage*                                      UmgBackgroundImage;                                       // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgDescriptionText;                                       // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UTextBlock*>                          UmgItemTextOrg;                                           // 0x0340(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UTextBlock*>                          UmgItemText;                                              // 0x0350(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0360(0x0018) MISSED OFFSET
	class UUserWidget*                                 UmgNetworkIcon;                                           // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NormalDialogWidget");
		return ptr;
	}

};


// Class Nimbus.ScrollableDialogWidgetBase
// 0x0030 (0x03B0 - 0x0380)
class UScrollableDialogWidgetBase : public UNormalDialogWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	class UCanvasPanel*                                UmgScrollBar;                                             // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUIScrollBarWidget*                          UmgUIScrollBar;                                           // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0398(0x000C) MISSED OFFSET
	float                                              ScrollDist;                                               // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ScrollableDialogWidgetBase");
		return ptr;
	}

};


// Class Nimbus.DynamicScrollableDialogWidget
// 0x0030 (0x03E0 - 0x03B0)
class UDynamicScrollableDialogWidget : public UScrollableDialogWidgetBase
{
public:
	class UTextBlock*                                  Title;                                                    // 0x03B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TemplateTextblock;                                        // 0x03B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UTextBlock*>                          AddedTextblock;                                           // 0x03C0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DynamicScrollableDialogWidget");
		return ptr;
	}

};


// Class Nimbus.ElectronicSupportMeasures
// 0x01B0 (0x07D0 - 0x0620)
class AElectronicSupportMeasures : public AWeaponBase
{
public:
	bool                                               bOverlapEquilibrium;                                      // 0x0620(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0621(0x0003) MISSED OFFSET
	int                                                EffectPriority;                                           // 0x0624(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EffectRangeMeter;                                         // 0x0628(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EffectHitCylinder;                                        // 0x062C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x062D(0x0003) MISSED OFFSET
	TArray<EWeaponID>                                  EffectiveMainWeaponsID;                                   // 0x0630(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<EWeaponID>                                  EffectiveSpecialWeaponsID;                                // 0x0640(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              IconScaleInTime;                                          // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MySupport_JammingIconColor;                               // 0x0654(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MySupportIconColor;                                       // 0x0664(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MyJammingSupportFade;                                     // 0x0674(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SupportIconColor;                                         // 0x0678(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                JammingIconColor;                                         // 0x0688(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 IconAlphaCurveCampaign;                                   // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 IconAlphaCurveMulti;                                      // 0x06A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconEndFadeTime;                                          // 0x06A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSupportEnable;                                           // 0x06AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x06AD(0x0003) MISSED OFFSET
	float                                              SupportTimeCampaign;                                      // 0x06B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SupportTimeMulti;                                         // 0x06B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FNimbusEsm_SupportParameter                 SupportParameter_MainMissile;                             // 0x06B8(0x0030) (Edit, DisableEditOnInstance)
	struct FNimbusEsm_SupportParameter                 SupportParameter_SpecialMissile;                          // 0x06E8(0x0030) (Edit, DisableEditOnInstance)
	bool                                               bJammingEnable;                                           // 0x0718(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0719(0x0003) MISSED OFFSET
	float                                              JammingTimeCampaign;                                      // 0x071C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingTimeMulti;                                         // 0x0720(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingHomingAngle;                                       // 0x0724(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingRotationAngle;                                     // 0x0728(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingLockonAngle;                                       // 0x072C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingLockonInitialSpeed;                                // 0x0730(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingLockonMaximumSpeed;                                // 0x0734(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingFCSActiveTime;                                     // 0x0738(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JammingFCSActiveDistance;                                 // 0x073C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockonSeekerJamming;                                     // 0x0740(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0741(0x0007) MISSED OFFSET
	struct FSeekerJammingParameters                    SeekerJammingParameters;                                  // 0x0748(0x0048) (Edit, DisableEditOnInstance)
	EElectronicFlareTarget                             ElectronicFlareTarget;                                    // 0x0790(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0791(0x0003) MISSED OFFSET
	float                                              PostProcessTime;                                          // 0x0794(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 PostProcessRadiusCurve;                                   // 0x0798(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 BlurAmountCurve;                                          // 0x07A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          PostProcessMaterial;                                      // 0x07A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x07B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    PostProcessMID;                                           // 0x07B8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x10];                                      // 0x07C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ElectronicSupportMeasures");
		return ptr;
	}

};


// Class Nimbus.EMLParameters
// 0x0000 (0x00C8 - 0x00C8)
class UEMLParameters : public UBulletParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EMLParameters");
		return ptr;
	}

};


// Class Nimbus.EmblemDataAsset
// 0x0020 (0x0050 - 0x0030)
class UEmblemDataAsset : public UDataAsset
{
public:
	class UTexture2D*                                  Decal;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconSS;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconS;                                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconM;                                                    // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EmblemDataAsset");
		return ptr;
	}

};


// Class Nimbus.EMLBullet
// 0x0028 (0x0840 - 0x0818)
class AEMLBullet : public ABullet
{
public:
	float                                              NeverHitToPlayer_FrontLengthMeter;                        // 0x0818(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationShootingLengthLimitTime;                         // 0x081C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0820(0x0018) MISSED OFFSET
	float                                              RayRadius;                                                // 0x0838(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x083C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EMLBullet");
		return ptr;
	}

};


// Class Nimbus.EMLBullet_Mihai
// 0x0008 (0x0848 - 0x0840)
class AEMLBullet_Mihai : public AEMLBullet
{
public:
	bool                                               bPlayerOnly_TwoHitWillDie;                                // 0x0840(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0841(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EMLBullet_Mihai");
		return ptr;
	}

};


// Class Nimbus.EnemyMissileIndicatorComponent
// 0x0088 (0x0178 - 0x00F0)
class UEnemyMissileIndicatorComponent : public UActorComponent
{
public:
	class UStaticMesh*                                 MeshTemplate;                                             // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          MeshMaterial;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IndicatorScale;                                           // 0x0100(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     FirstPersonViewOffset;                                    // 0x010C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     ThirdPersonViewOffset;                                    // 0x0118(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     CockpitViewOffset;                                        // 0x0124(0x000C) (Edit, IsPlainOldData)
	float                                              IndicatorPitch;                                           // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndicatorOrbitRadiusMaxX;                                 // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndicatorOrbitRadiusMaxY;                                 // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndicatorOrbitRadiusMinX;                                 // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndicatorOrbitRadiusMinY;                                 // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IntervalToNextVisiblityToggleSeconds;                     // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToStartBlinkingMeters;                            // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	TArray<struct FEnemyMissileIndicator>              EnemyMissileIndicators;                                   // 0x0150(0x0010) (ZeroConstructor)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0160(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0168(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EnemyMissileIndicatorComponent");
		return ptr;
	}


	void OnOwnerSuspendedBySleep();
	void OnOwnerResumedBySleep();
	void OnHUDEnabled();
	void OnHUDDisabled();
};


// Class Nimbus.EMLBullet_Submarine
// 0x0000 (0x0848 - 0x0848)
class AEMLBullet_Submarine : public AEMLBullet_Mihai
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EMLBullet_Submarine");
		return ptr;
	}

};


// Class Nimbus.EULAHelper
// 0x0070 (0x0098 - 0x0028)
class UEULAHelper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0028(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.EULAHelper");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.Explosion
// 0x0028 (0x0648 - 0x0620)
class AExplosion : public AWeaponBase
{
public:
	float                                              DamageIntervalSeconds;                                    // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageDurationSeconds;                                    // 0x0624(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlayShockwaveCameraShake;                                // 0x0628(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ENimbusCameraShakeType                             PlayShockwaveCameraShakeType;                             // 0x0629(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x062A(0x0006) MISSED OFFSET
	class UCurveFloat*                                 ShockwaveCameraShakeScaleCurve;                           // 0x0630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageRadiusUUSquared;                                    // 0x0638(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bDamageToAir;                                             // 0x063C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageToGround;                                          // 0x063D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHitJudgmentCylinder;                                     // 0x063E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESoundChannelType                                  ExplosionSoundChannelType;                                // 0x063F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0640(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Explosion");
		return ptr;
	}

};


// Class Nimbus.FirstPersonCameraComponent
// 0x0000 (0x0A50 - 0x0A50)
class UFirstPersonCameraComponent : public UAnimatedCameraComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FirstPersonCameraComponent");
		return ptr;
	}

};


// Class Nimbus.FadeWidget
// 0x0070 (0x0278 - 0x0208)
class UFadeWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0208(0x0010) MISSED OFFSET
	class UImage*                                      background;                                               // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0220(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FadeWidget");
		return ptr;
	}

};


// Class Nimbus.FirstPersonCameraInputComponent
// 0x0010 (0x0410 - 0x0400)
class UFirstPersonCameraInputComponent : public UBasePersonCameraInputComponent
{
public:
	float                                              DelayBeforeStartingZoom;                                  // 0x0400(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0404(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FirstPersonCameraInputComponent");
		return ptr;
	}

};


// Class Nimbus.Flare
// 0x0068 (0x03F8 - 0x0390)
class AFlare : public ANimbusObjectPoolItem
{
public:
	class UFlareMovementComponent*                     FlareMovement;                                            // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SphereCollider;                                           // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FlareParticles;                                           // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    SmokeParticles;                                           // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bUseFireLight;                                            // 0x03B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03B1(0x0007) MISSED OFFSET
	class UPointLightComponent*                        FireLight;                                                // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 FireLightIntensityCurves;                                 // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03C8(0x0004) MISSED OFFSET
	float                                              InitialSpeed;                                             // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GravitationalAcceleration;                                // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VFXLifeTime;                                              // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               FireSoundEvent;                                           // 0x03E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCollided;                                                // 0x03E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x03E9(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Flare");
		return ptr;
	}


	void OnImpact(const struct FHitResult& HitResult);
};


// Class Nimbus.DebugMenuTimeEventList
// 0x0028 (0x00E0 - 0x00B8)
class UDebugMenuTimeEventList : public UDebugMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00B8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.DebugMenuTimeEventList");
		return ptr;
	}

};


// Class Nimbus.FlareMovementComponent
// 0x0020 (0x01C0 - 0x01A0)
class UFlareMovementComponent : public UProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate                    OnMovementImpact;                                         // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET
	class AActor*                                      OwningActor;                                              // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FlareMovementComponent");
		return ptr;
	}

};


// Class Nimbus.FlareMovementParameters
// 0x0010 (0x0038 - 0x0028)
class UFlareMovementParameters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FlareMovementParameters");
		return ptr;
	}

};


// Class Nimbus.FlyBySoundComponent
// 0x0050 (0x0198 - 0x0148)
class UFlyBySoundComponent : public UBasePassSoundComponent
{
public:
	class UDataTable*                                  RelativeSpeedSettingsDataTable;                           // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0150(0x0038) MISSED OFFSET
	struct FString                                     LastPlayedEventName;                                      // 0x0188(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FlyBySoundComponent");
		return ptr;
	}


	void OnRestored();
};


// Class Nimbus.FullscreenMovieWidget
// 0x0080 (0x0288 - 0x0208)
class UFullscreenMovieWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	class AUIManagerActor*                             UIManagerActor;                                           // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UImage*                                      UmgBackground;                                            // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgMovieImage;                                            // 0x0220(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0228(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x0230(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0238(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.FullscreenMovieWidget");
		return ptr;
	}

};


// Class Nimbus.GenericLoadWidget
// 0x0050 (0x0520 - 0x04D0)
class UGenericLoadWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x04D0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GenericLoadWidget");
		return ptr;
	}

};


// Class Nimbus.GamerTagWidget
// 0x00A0 (0x0390 - 0x02F0)
class UGamerTagWidget : public UUIBaseWidget
{
public:
	class UTextBlock*                                  UmgGamerTagIDText;                                        // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgGamerIconImage;                                        // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x0300(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GamerTagWidget");
		return ptr;
	}

};


// Class Nimbus.GenericMenu
// 0x0090 (0x03F8 - 0x0368)
class AGenericMenu : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	int                                                MaxMenuLayers;                                            // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxVisibleLayers;                                         // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActiveLayerDistance;                                      // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LayerDistanceInterval;                                    // 0x037C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LocationTransitionDuration;                               // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActiveLayerAlpha;                                         // 0x0384(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LayerAlphaStep;                                           // 0x0388(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlphaTransitionDuration;                                  // 0x038C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ActiveLayerId;                                            // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<class AWidget3D*>                           MenuLayers;                                               // 0x0398(0x0010) (Edit, EditFixedSize, ZeroConstructor, EditConst)
	bool                                               bUseDOF;                                                  // 0x03A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseSeparateTranslucency;                                 // 0x03A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x03AA(0x0006) MISSED OFFSET
	class UCameraComponent*                            Camera;                                                   // 0x03B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class AActor*>                              CameraLocations;                                          // 0x03B8(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	float                                              CameraTransitionDuration;                                 // 0x03C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2C];                                      // 0x03CC(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GenericMenu");
		return ptr;
	}


	bool SetActiveLayerId(int LayerId, bool ForceSet);
	void PrevLayer();
	void NextLayer();
};


// Class Nimbus.GroundVehicleTrailVFXComponent
// 0x0010 (0x0950 - 0x0940)
class UGroundVehicleTrailVFXComponent : public UParticleSystemComponent
{
public:
	class UParticleSystem*                             Template_Sand;                                            // 0x0940(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0948(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GroundVehicleTrailVFXComponent");
		return ptr;
	}


	void OnRestored();
	void OnOwnerVisibilityChanged(bool bVisibility);
};


// Class Nimbus.GuideWidget
// 0x00E0 (0x03D0 - 0x02F0)
class UGuideWidget : public UUIBaseWidget
{
public:
	class UDataTable*                                  GuideDataTable;                                           // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScreenImageFadeDuration;                                  // 0x02F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x02FC(0x000C) MISSED OFFSET
	class UTexture2D*                                  ScreenImageTexture;                                       // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x60];                                      // 0x0310(0x0060) MISSED OFFSET
	TArray<struct FGuidePageBlock>                     PageBlockList;                                            // 0x0370(0x0010) (ZeroConstructor, Transient)
	class UCanvasPanel*                                UmgGuideWindow;                                           // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgScreenImageWidow;                                      // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgScreenImage;                                           // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgTitleText;                                             // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCustomRichTextBlock*                        UmgHeaderText;                                            // 0x03A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCustomRichTextBlock*                        UmgDescriptionText;                                       // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgButtonText;                                            // 0x03B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              UmgPageBlockBox;                                          // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgPageCursorImage;                                       // 0x03C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GuideWidget");
		return ptr;
	}

};


// Class Nimbus.HangarInfoBase
// 0x0020 (0x0048 - 0x0028)
class UHangarInfoBase : public UObject
{
public:
	class UHangarInfoBase*                             Parent;                                                   // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUserWidget*                                 BaseWidget;                                               // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      Underlay;                                                 // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarInfoBase");
		return ptr;
	}

};


// Class Nimbus.HangarMRPInfo
// 0x0108 (0x0150 - 0x0048)
class UHangarMRPInfo : public UHangarInfoBase
{
public:
	class UTextBlock*                                  MRPCurrent;                                               // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MRPCurrentName;                                           // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MRPAfter;                                                 // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                MRPAfterItem;                                             // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MRPAfterName;                                             // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                MRPAfterItem2;                                            // 0x0070(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MRPAfter2;                                                // 0x0078(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SelectedItemCost;                                         // 0x0080(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SelectedItemName;                                         // 0x0088(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0090(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarMRPInfo");
		return ptr;
	}

};


// Class Nimbus.HangarSpecBarInfo
// 0x0010 (0x0038 - 0x0028)
class UHangarSpecBarInfo : public UObject
{
public:
	class UImage*                                      Image;                                                    // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarSpecBarInfo");
		return ptr;
	}

};


// Class Nimbus.HangarSpecBar
// 0x0148 (0x0190 - 0x0048)
class UHangarSpecBar : public UHangarInfoBase
{
public:
	class UTextBlock*                                  SpecName;                                                 // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      HidingImage;                                              // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHangarSpecBarInfo*                          BaseBar;                                                  // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarSpecBarInfo*                          AddOnBar;                                                 // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarSpecBarInfo*                          SelectAddOnBar;                                           // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x120];                                     // 0x0070(0x0120) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarSpecBar");
		return ptr;
	}

};


// Class Nimbus.GuideMessageWidget
// 0x0020 (0x0250 - 0x0230)
class UGuideMessageWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0230(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GuideMessageWidget");
		return ptr;
	}


	void OnHUDEnabled();
	void OnHUDDisabled();
	void OnCameraViewChanged(ECameraType CameraType);
	void HideGuideMessage();
	void DisplayGuideMessage(EGuideMessageType GuideMessageType);
};


// Class Nimbus.GraphicsSettingsWindowsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGraphicsSettingsWindowsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.GraphicsSettingsWindowsBlueprintLibrary");
		return ptr;
	}


	void STATIC_SetWindowsVSyncOn(bool InVSyncOn);
	void STATIC_SetWindowsTextureQuality(EGraphicsSettingsWindowsTextureQuality InTextureQuality);
	void STATIC_SetWindowsSSROn(bool InSSROn);
	void STATIC_SetWindowsShadowQuality(EGraphicsSettingsWindowsShadowQuality InShadowQuality);
	void STATIC_SetWindowsPreset(EGraphicsSettingsWindowsPreset InPreset);
	void STATIC_SetWindowsPostProcessQuality(EGraphicsSettingsWindowsPostProcessQuality InPostProcessQuality);
	void STATIC_SetWindowsMotionBlurOn(bool InMotionBlurOn);
	void STATIC_SetWindowsFrameLimit(EGraphicsSettingsWindowsFrameLimit InFrameLimit);
	void STATIC_SetWindowsEffectQuality(EGraphicsSettingsWindowsEffectQuality InEffectQuality);
	void STATIC_SetWindowsEffectAmount(EGraphicsSettingsWindowsEffectAmount InEffectAmount);
	void STATIC_SetWindowsDrawScale(EGraphicsSettingsWindowsDrawScale InDrawScale);
	void STATIC_SetWindowsBloomOn(bool InBloomOn);
	void STATIC_SetWindowsAntiAliasing(EGraphicsSettingsWindowsAntiAliasing InAntiAliasing);
	void STATIC_SaveWindowsSetting();
	void STATIC_RevertWindowsScreenSetting();
	void STATIC_ResetWindowsSetting();
	void STATIC_RequestWindowsScreenSetting(const struct FGraphicsSettingsWindowsScreenSetting& InScreenSetting);
	void STATIC_ReflectWindowsSetting();
	void STATIC_IsWindowsVSyncOn(bool* OutVSyncOn);
	void STATIC_IsWindowsSSROn(bool* OutSSROn);
	void STATIC_IsWindowsMotionBlurOn(bool* OutMotionBlurOn);
	void STATIC_IsWindowsBloomOn(bool* OutBloomOn);
	void STATIC_GetWindowsWindowResolutionArray(bool bIsNeedAspect, TArray<struct FGraphicsSettingsWindowsResolution>* OutResolutionArray);
	void STATIC_GetWindowsTextureQuality(EGraphicsSettingsWindowsTextureQuality* OutTextureQuality);
	void STATIC_GetWindowsShadowQuality(EGraphicsSettingsWindowsShadowQuality* OutShadowQuality);
	void STATIC_GetWindowsScreenSettingDefault(bool bIsNeedAspect, struct FGraphicsSettingsWindowsScreenSetting* OutScreenSetting);
	void STATIC_GetWindowsScreenSetting(bool bIsNeedAspect, struct FGraphicsSettingsWindowsScreenSetting* OutScreenSetting);
	void STATIC_GetWindowsPreset(EGraphicsSettingsWindowsPreset* OutPreset);
	void STATIC_GetWindowsPostProcessQuality(EGraphicsSettingsWindowsPostProcessQuality* OutPostProcessQuality);
	void STATIC_GetWindowsFullScreenResolutionArray(bool bIsNeedAspect, TArray<struct FGraphicsSettingsWindowsResolution>* OutResolutionArray);
	void STATIC_GetWindowsFrameLimit(EGraphicsSettingsWindowsFrameLimit* OutFrameLimit);
	void STATIC_GetWindowsEffectQuality(EGraphicsSettingsWindowsEffectQuality* OutEffectQuality);
	void STATIC_GetWindowsEffectAmount(EGraphicsSettingsWindowsEffectAmount* OutEffectAmount);
	void STATIC_GetWindowsDrawScale(EGraphicsSettingsWindowsDrawScale* OutDrawScale);
	void STATIC_GetWindowsBorderlessResolution(bool bIsNeedAspect, struct FGraphicsSettingsWindowsResolution* OutResolution);
	void STATIC_GetWindowsAntiAliasing(EGraphicsSettingsWindowsAntiAliasing* OutAntiAliasing);
	void STATIC_ConfirmWindowsScreenSetting();
};


// Class Nimbus.HangarSpecGroup
// 0x0048 (0x0090 - 0x0048)
class UHangarSpecGroup : public UHangarInfoBase
{
public:
	class UTextBlock*                                  SpecGroupName;                                            // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHangarSpecBar*                              SpecItems[0x6];                                           // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarSpecGroup");
		return ptr;
	}

};


// Class Nimbus.HangarName
// 0x0018 (0x0060 - 0x0048)
class UHangarName : public UHangarInfoBase
{
public:
	class UTextBlock*                                  Name;                                                     // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      Icon;                                                     // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarName");
		return ptr;
	}

};


// Class Nimbus.HangarNameCost
// 0x0030 (0x0078 - 0x0048)
class UHangarNameCost : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UTextBlock*                                  Name;                                                     // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  Cost;                                                     // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TotalName;                                                // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TotalCost;                                                // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarNameCost");
		return ptr;
	}

};


// Class Nimbus.HangarNameTotalCost
// 0x0020 (0x0068 - 0x0048)
class UHangarNameTotalCost : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UTextBlock*                                  Name;                                                     // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  Cost;                                                     // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0060(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarNameTotalCost");
		return ptr;
	}

};


// Class Nimbus.HangarAllWeaponsAmmo
// 0x0018 (0x0060 - 0x0048)
class UHangarAllWeaponsAmmo : public UHangarInfoBase
{
public:
	class UUserWidget*                                 AircraftWidget;                                           // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarAllWeaponsAmmo");
		return ptr;
	}

};


// Class Nimbus.HangarWeaponProperties
// 0x0018 (0x0060 - 0x0048)
class UHangarWeaponProperties : public UHangarInfoBase
{
public:
	class UTextBlock*                                  WeaponConceptLabel;                                       // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponConceptWidget*                        WeaponConcept;                                            // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarWeaponProperties");
		return ptr;
	}

};


// Class Nimbus.HangarWeaponType
// 0x0018 (0x0060 - 0x0048)
class UHangarWeaponType : public UHangarInfoBase
{
public:
	class UTextBlock*                                  WeaponTypeLabel;                                          // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  WeaponTypeText;                                           // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarWeaponType");
		return ptr;
	}

};


// Class Nimbus.HangarBoardWeaponsAmmo
// 0x0018 (0x0060 - 0x0048)
class UHangarBoardWeaponsAmmo : public UHangarInfoBase
{
public:
	class UUserWidget*                                 AircraftWidget;                                           // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarBoardWeaponsAmmo");
		return ptr;
	}

};


// Class Nimbus.HangarPartsInfoGauge
// 0x0040 (0x0088 - 0x0048)
class UHangarPartsInfoGauge : public UHangarInfoBase
{
public:
	class UUserWidget*                                 AircraftWidget;                                           // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UImage*>                              PartsGaugeBody;                                           // 0x0050(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              PartsGaugeArms;                                           // 0x0060(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              PartsGaugeMisc;                                           // 0x0070(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0080(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarPartsInfoGauge");
		return ptr;
	}

};


// Class Nimbus.HangarSkinNo
// 0x0030 (0x0078 - 0x0048)
class UHangarSkinNo : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UTextBlock*                                  SkinLabel;                                                // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SkinNo;                                                   // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  Name;                                                     // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      Icon;                                                     // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarSkinNo");
		return ptr;
	}

};


// Class Nimbus.HangarPartsInfoSlot
// 0x0010 (0x0058 - 0x0048)
class UHangarPartsInfoSlot : public UHangarInfoBase
{
public:
	class UUserWidget*                                 AircraftWidget;                                           // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarPartsInfoSlot");
		return ptr;
	}

};


// Class Nimbus.HangarMultiNickname
// 0x0020 (0x0068 - 0x0048)
class UHangarMultiNickname : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UTextBlock*                                  NicknameLabel;                                            // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  NicknameText;                                             // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0060(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarMultiNickname");
		return ptr;
	}

};


// Class Nimbus.HangarMultiSetNo
// 0x0020 (0x0068 - 0x0048)
class UHangarMultiSetNo : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UTextBlock*                                  SetLabel;                                                 // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SetNo;                                                    // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0060(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarMultiSetNo");
		return ptr;
	}

};


// Class Nimbus.HangarMultiEmblem
// 0x0018 (0x0060 - 0x0048)
class UHangarMultiEmblem : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UImage*                                      Image;                                                    // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarMultiEmblem");
		return ptr;
	}

};


// Class Nimbus.HangarStatus
// 0x00C8 (0x0110 - 0x0048)
class UHangarStatus : public UHangarInfoBase
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0048(0x0040) MISSED OFFSET
	class UHangarSpecGroup*                            SpecGroupLeft;                                            // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarSpecGroup*                            SpecGroupRight;                                           // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarName*                                 ShortNameLeft;                                            // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarName*                                 ShortNameRight;                                           // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarName*                                 FullName;                                                 // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarNameCost*                             NameCost;                                                 // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarNameTotalCost*                        NameTotalCost;                                            // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarAllWeaponsAmmo*                       AllWeaponsAmmo;                                           // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarBoardWeaponsAmmo*                     BoardWeaponsAmmo;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarWeaponProperties*                     WeaponProperties;                                         // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarWeaponType*                           WeaponType;                                               // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarPartsInfoGauge*                       PartsInfoGauge;                                           // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarPartsInfoSlot*                        PartsInfoSlot;                                            // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarSkinNo*                               SkinNo;                                                   // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarMultiSetNo*                           MultiSetNo;                                               // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarMultiNickname*                        MultiNickname;                                            // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UHangarMultiEmblem*                          MultiEmblem;                                              // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HangarStatus");
		return ptr;
	}

};


// Class Nimbus.HeatBombExplosion
// 0x0000 (0x0648 - 0x0648)
class AHeatBombExplosion : public AExplosion
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HeatBombExplosion");
		return ptr;
	}


	void OnImpactResponse();
};


// Class Nimbus.HUDMessageWidget
// 0x0C38 (0x0E68 - 0x0230)
class UHUDMessageWidget : public UNimbusUserWidget
{
public:
	struct FVector2D                                   HUDMessagePanelGap;                                       // 0x0230(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   HUDMessagePanelGapVR;                                     // 0x0238(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              HUDWarningMessageBlinkTime;                               // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HUDWeaponMessageBlinkTime;                                // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HUDMessageColorDesaturationMaxComponent;                  // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x74];                                      // 0x024C(0x0074) MISSED OFFSET
	class UTexture2D*                                  ComWindowImage;                                           // 0x02C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xBA0];                                     // 0x02C8(0x0BA0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HUDMessageWidget");
		return ptr;
	}


	void TurnOffGlowForPortrait(float InLuminanceRate);
	void ShowPortraitEvent();
	void RadioMessageReceived(const struct FRadioText& RadioText);
	void OnHUDEnabled();
	void OnHUDDisabled();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
	void OnCameraViewChanged(ECameraType CameraType);
};


// Class Nimbus.IconStatBaseWidget
// 0x01E8 (0x0418 - 0x0230)
class UIconStatBaseWidget : public UNimbusUserWidget
{
public:
	struct FLinearColor                                PlaneLightDamageColor;                                    // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                PlaneHeavyDamageColor;                                    // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TArray<int>                                        WeaponDisplaySequence;                                    // 0x0250(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x1B8];                                     // 0x0260(0x01B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.IconStatBaseWidget");
		return ptr;
	}


	void SetForcedPlaneIconDefaultColor(const struct FLinearColor& Color);
	void OnWeaponActivatorInitialize();
	void OnSpecialWeaponChanged();
	void OnHUDEnabled();
};


// Class Nimbus.IconWidget
// 0x0020 (0x0310 - 0x02F0)
class UIconWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x02F0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.IconWidget");
		return ptr;
	}

};


// Class Nimbus.IGCPlaneController
// 0x0468 (0x07D0 - 0x0368)
class AIGCPlaneController : public AActor
{
public:
	bool                                               bSpawnPlayerPlane;                                        // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepCockpitMesh;                                         // 0x0369(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x036A(0x0006) MISSED OFFSET
	class UClass*                                      SpawnPlayerPlaneClass;                                    // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpawnAIPlaneClass;                                        // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CameraReferencePlayerPlaneClass;                          // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefaultCameraAlignSocketName;                             // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseReplayDataForAnimation;                               // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSpeedControl;                                      // 0x0391(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAIPlaneAutoSpeedControl;                           // 0x0392(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAIPlaneAutoVFXControl;                             // 0x0393(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundHeightTickDuration;                                 // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoSpinTireOnGround;                                    // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	int                                                SpecialWeaponNumber;                                      // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         VFXSocketTableOverride;                                   // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              Elvl;                                                     // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	float                                              Elvr;                                                     // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	float                                              Rudl;                                                     // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	float                                              Rudr;                                                     // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	float                                              Alrl;                                                     // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	float                                              Alrr;                                                     // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	float                                              Tefn;                                                     // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	float                                              Vctl;                                                     // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	float                                              Vctr;                                                     // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	float                                              Vcth;                                                     // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	float                                              Cndl;                                                     // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	float                                              Cndr;                                                     // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x040C(0x0004) MISSED OFFSET
	float                                              Spll;                                                     // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	float                                              Splr;                                                     // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	float                                              Nzln;                                                     // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	float                                              Abkn;                                                     // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	float                                              Rmpn;                                                     // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	float                                              Lefn;                                                     // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	float                                              Vwgn;                                                     // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	float                                              Lipn;                                                     // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x044C(0x0004) MISSED OFFSET
	float                                              Rotn;                                                     // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0454(0x0004) MISSED OFFSET
	float                                              Cmbr;                                                     // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	float                                              Gunc;                                                     // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	float                                              Misc;                                                     // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	float                                              Spwc;                                                     // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	float                                              Swc1;                                                     // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	float                                              Swc2;                                                     // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0484(0x0004) MISSED OFFSET
	float                                              Swc3;                                                     // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	float                                              Swca;                                                     // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	float                                              Swcb;                                                     // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	float                                              Swcc;                                                     // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x04A4(0x0004) MISSED OFFSET
	float                                              Fdwg;                                                     // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	float                                              Tire;                                                     // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData34[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	float                                              Ldga;                                                     // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData35[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	float                                              Fsus;                                                     // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData36[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	float                                              Lsus;                                                     // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData37[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	float                                              Rsus;                                                     // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData38[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	float                                              Lchb;                                                     // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData39[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	float                                              Hook;                                                     // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData40[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	float                                              Ldab;                                                     // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData41[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	float                                              Replay_PitchPower;                                        // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData42[0x4];                                       // 0x04F4(0x0004) MISSED OFFSET
	float                                              Replay_YawPower;                                          // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	float                                              Replay_RollPower;                                         // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData44[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	float                                              Replay_AfterBurner;                                       // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData45[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	float                                              Replay_AirBrake;                                          // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData46[0x4];                                       // 0x0514(0x0004) MISSED OFFSET
	float                                              Replay_Accele;                                            // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData47[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	float                                              Replay_Speed;                                             // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData48[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	float                                              Replay_Gear;                                              // 0x0528(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData49[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	float                                              Replay_Aoa;                                               // 0x0530(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData50[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	float                                              Replay_Sus;                                               // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData51[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	float                                              Replay_Tire;                                              // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData52[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	float                                              Replay_Thrust;                                            // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData53[0x4];                                       // 0x054C(0x0004) MISSED OFFSET
	float                                              SusFrontMask;                                             // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData54[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	float                                              SusBackMask;                                              // 0x0558(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData55[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	float                                              WingTipVaporIntensity;                                    // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData56[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	float                                              ShoulderVaporIntensity;                                   // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData57[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	float                                              WingSurfaceVaporIntensity;                                // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData58[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	float                                              WingOverVaporIntensity;                                   // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData59[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	float                                              WingOverVaporHighGTurnIntensity;                          // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData60[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	float                                              AfterburnerIntensity;                                     // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData61[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	bool                                               bIsForcedMinimumLOD;                                      // 0x0590(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData62[0x1];                                       // 0x0591(0x0001) MISSED OFFSET
	bool                                               bIsOnGround;                                              // 0x0592(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData63[0x1];                                       // 0x0593(0x0001) MISSED OFFSET
	float                                              ForcedPitchOnGround;                                      // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData64[0x4];                                       // 0x0598(0x0004) MISSED OFFSET
	bool                                               bEnablePlayerCamera;                                      // 0x059C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData65[0x1];                                       // 0x059D(0x0001) MISSED OFFSET
	bool                                               bShowCockpitMesh;                                         // 0x059E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData66[0x1];                                       // 0x059F(0x0001) MISSED OFFSET
	bool                                               bEnableCameraViewChange;                                  // 0x05A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData67[0x1];                                       // 0x05A1(0x0001) MISSED OFFSET
	bool                                               bAlignPlayerPlaneToCamera;                                // 0x05A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData68[0x1];                                       // 0x05A3(0x0001) MISSED OFFSET
	bool                                               bAlignCameraToPlayerPlane;                                // 0x05A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData69[0x1];                                       // 0x05A5(0x0001) MISSED OFFSET
	bool                                               bKeepOnGroundWhenAlignPlayerPlaneToCamera;                // 0x05A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData70[0x219];                                     // 0x05A7(0x0219) MISSED OFFSET
	class AActor*                                      AnchoredFollower;                                         // 0x07C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData71[0x8];                                       // 0x07C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.IGCPlaneController");
		return ptr;
	}


	void OnIGCStart(bool bStopPlaneSounds);
	void OnIGCEnd();
	void OnIgcCameraChanged(class ACameraActor* NewCameraActor);
	class APlayerPlane* GetControlledPlayerPlane();
	class AAIPlane* GetControlledAIPlane();
};


// Class Nimbus.ImpactCameraParameter
// 0x0118 (0x0140 - 0x0028)
class UImpactCameraParameter : public UObject
{
public:
	float                                              HitCheckSphereRadius;                                     // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceCameraObject;                                  // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitCheckStartHeightDistance;                              // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitAddHeightDistance;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirCheckHeight;                                           // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundCheckHeight;                                        // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirHeightCheckInterval;                                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UCameraAnim*                                 EmergencyCameraAnim;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EmergencyCameraLength;                                    // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EmergencyCameraPreferredAngle;                            // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EmergencyCameraSafeDistance;                              // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                EmergencyAvoidableMax;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCameraMultiEmbedCheck;                                   // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<struct FName>                               MissileTrackingCameraNameList;                            // 0x0068(0x0010) (Edit, ZeroConstructor)
	bool                                               bMissileTrackingCameraStartRotatoIsPlayer;                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMissileCameraLocationFlipHorizontal;                     // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x007A(0x0006) MISSED OFFSET
	TArray<struct FName>                               RocketLauncherTrackingCameraNameList;                     // 0x0080(0x0010) (Edit, ZeroConstructor)
	bool                                               bRocketLauncherCameraLocationFlipHorizontal;              // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	TArray<struct FName>                               ScatterTrackingCameraNameList;                            // 0x0098(0x0010) (Edit, ZeroConstructor)
	bool                                               bSODCameraLocationFlipHorizontal;                         // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	TArray<struct FName>                               BombTrackingCameraNameList;                               // 0x00B0(0x0010) (Edit, ZeroConstructor)
	bool                                               bBombCameraLocationFlipHorizontal;                        // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	TArray<struct FName>                               UAVCameraNameList;                                        // 0x00C8(0x0010) (Edit, ZeroConstructor)
	bool                                               bUAVCameraLocationFlipHorizontal;                         // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	TArray<struct FName>                               MPBMCameraNameList;                                       // 0x00E0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               FAEBCameraNameList;                                       // 0x00F0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               KillCameraNameList;                                       // 0x0100(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               PlayerGroundDeadCameraNameList;                           // 0x0110(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               PlayerAirDeadCameraNameList;                              // 0x0120(0x0010) (Edit, ZeroConstructor)
	TArray<struct FImpactCameraData>                   CameraDataList;                                           // 0x0130(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ImpactCameraParameter");
		return ptr;
	}

};


// Class Nimbus.ImpactCameraComponent
// 0x0140 (0x0A90 - 0x0950)
class UImpactCameraComponent : public UCameraComponent
{
public:
	class UClass*                                      CameraParameterClass;                                     // 0x0950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0958(0x00D0) MISSED OFFSET
	class UImpactCameraParameter*                      CameraParameter;                                          // 0x0A28(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCameraAnimInst*                             AnimInst;                                                 // 0x0A30(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      DummyCameraActor;                                         // 0x0A38(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0A40(0x0048) MISSED OFFSET
	class UCameraViewComponent*                        CameraViewComponent_Owner;                                // 0x0A88(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ImpactCameraComponent");
		return ptr;
	}

};


// Class Nimbus.InstantRadioActivationWiidget
// 0x0040 (0x0248 - 0x0208)
class UInstantRadioActivationWiidget : public UUserWidget
{
public:
	class UWidgetAnimation*                            SelectionAnimation;                                       // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0210(0x0028) MISSED OFFSET
	float                                              SendToTeamPlayerDuration;                                 // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ControlRepeatThresholdSeconds;                            // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0240(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.InstantRadioActivationWiidget");
		return ptr;
	}

};


// Class Nimbus.InstantRadioReceiveWidget
// 0x0088 (0x0290 - 0x0208)
class UInstantRadioReceiveWidget : public UUserWidget
{
public:
	struct FLinearColor                                TeamColor;                                                // 0x0208(0x0010) (Edit, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0218(0x0010) (Edit, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0228(0x0010) MISSED OFFSET
	class UUserWidget*                                 RadioEmblemListWidget;                                    // 0x0238(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0240(0x001C) MISSED OFFSET
	float                                              MessageMoveUpSpeed;                                       // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MessageAutoScrollingInterval;                             // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MessageSlotHeight;                                        // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EmblemScrollBoxClass;                                     // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0270(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.InstantRadioReceiveWidget");
		return ptr;
	}


	void OnHUDEnabled();
	void OnHUDDisabled();
};


// Class Nimbus.HUD3DUIManager
// 0x0038 (0x0060 - 0x0028)
class UHUD3DUIManager : public UObject
{
public:
	TArray<class ATexture3DUIActor*>                   TextureActors;                                            // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0038(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.HUD3DUIManager");
		return ptr;
	}

};


// Class Nimbus.KeyAssignDialogWidget
// 0x0010 (0x0390 - 0x0380)
class UKeyAssignDialogWidget : public UNormalDialogWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0380(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.KeyAssignDialogWidget");
		return ptr;
	}

};


// Class Nimbus.LaserInterceptor
// 0x0048 (0x0680 - 0x0638)
class ALaserInterceptor : public AAttachedWeapon
{
public:
	float                                              RayDistance;                                              // 0x0638(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RayRadius;                                                // 0x063C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InterceptAngle;                                           // 0x0640(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchInterval;                                           // 0x0644(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterceptTime;                                            // 0x0648(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInertia;                                                 // 0x064C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x064D(0x0003) MISSED OFFSET
	float                                              InertiaTime;                                              // 0x0650(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	class UCurveFloat*                                 SwingRateCurve;                                           // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0660(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LaserInterceptor");
		return ptr;
	}


	void OnLifeTimeExpired();
	void OnCreateWeaponEnd();
};


// Class Nimbus.LaserWeapon
// 0x0050 (0x07C8 - 0x0778)
class ALaserWeapon : public AAttachedInstantWeapon
{
public:
	float                                              MoveStartTime;                                            // 0x0778(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationAngle;                                           // 0x077C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ELaserWeaponSupplementaryType                      WeaponSupplementaryType;                                  // 0x0780(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0781(0x0007) MISSED OFFSET
	class UCurveFloat*                                 SupplementalAngleSpeedCurve;                              // 0x0788(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 SupplementalDistanceSpeedCurve;                           // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RangeMovementMax_Yaw;                                     // 0x0798(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeMovementMin_Yaw;                                     // 0x079C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeMovementBassOffSetPitch;                             // 0x07A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeMovementAngle;                                       // 0x07A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x07A8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LaserWeapon");
		return ptr;
	}

};


// Class Nimbus.LayerMenuLineMeshActor
// 0x00D0 (0x0438 - 0x0368)
class ALayerMenuLineMeshActor : public AActor
{
public:
	class UProceduralMeshComponent*                    Mesh;                                                     // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUILayerMenuParam*                           LayerMenuParam;                                           // 0x0370(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLayerMenuLineInfo>                  LineInfoList;                                             // 0x0378(0x0010) (ZeroConstructor, Transient)
	int                                                LineInfoIdCount;                                          // 0x0388(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SelectedLineInfoID;                                       // 0x038C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<int>                                        LinkLineInfoIDList;                                       // 0x0390(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        DecorationLineInfoIDList;                                 // 0x03A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x88];                                      // 0x03B0(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LayerMenuLineMeshActor");
		return ptr;
	}

};


// Class Nimbus.UILayerMenuParam
// 0x0248 (0x0278 - 0x0030)
class UUILayerMenuParam : public UDataAsset
{
public:
	float                                              TransitionTime;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SubMenuTransitionTime;                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LinkLineAnimationTime;                                    // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FUILayerMenuTransform>               MenuTransforms;                                           // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUILayerCameraTransform>             CameraTransforms;                                         // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLinearColor>                        LayerColorList;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)
	struct FUILayerCameraTransform                     CameraTransitionOffset;                                   // 0x0070(0x001C) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CameraTransitionRateCurve;                                // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FUILayerMenuTransform                       MenuWallTransform;                                        // 0x0098(0x0034) (Edit)
	struct FUILayerMenuTransform                       MenuBGTransform;                                          // 0x00CC(0x0034) (Edit)
	struct FVector                                     StartupTransTimePos;                                      // 0x0100(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     StartupTransTimePosDelay;                                 // 0x010C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     StartupTransTimeRot;                                      // 0x0118(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     StartupTransTimeRotDelay;                                 // 0x0124(0x000C) (Edit, IsPlainOldData)
	float                                              StartupTextHidingDelay;                                   // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FUILayerCameraTransform                     StartupCameraTransformsStart;                             // 0x0134(0x001C) (Edit)
	class UMaterialInstance*                           LineMatInstance;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LineWidth;                                                // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColorSelected;                                        // 0x015C(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                LineColorNormal;                                          // 0x016C(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	TArray<struct FUILayerMenuLineDecoration>          DecorationLines;                                          // 0x0180(0x0010) (Edit, ZeroConstructor)
	bool                                               VisibleDecorationLines;                                   // 0x0190(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	struct FVector2D                                   ItemOffsetText;                                           // 0x0194(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   ItemOffsetIcon;                                           // 0x019C(0x0008) (Edit, IsPlainOldData)
	float                                              TextHeight;                                               // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IconHeight;                                               // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroupSpaceHeight;                                         // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ItemInitialPosition;                                      // 0x01B0(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   ItemShowHideAnimOffsetTransition;                         // 0x01B8(0x0008) (Edit, IsPlainOldData)
	float                                              ItemShowHideAnimTimeTransition;                           // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ItemShowHideDelayDiffTimeTransition;                      // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ItemShowHideAnimTimeChangeItem;                           // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET
	TArray<struct FVector2D>                           ItemShowHideAnimOffsetStartup;                            // 0x01D0(0x0010) (Edit, ZeroConstructor)
	TArray<float>                                      ItemShowHideAnimTimeStartup;                              // 0x01E0(0x0010) (Edit, ZeroConstructor)
	float                                              ItemShowHideAnimTimeStartupAlpha;                         // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x01F4(0x0004) MISSED OFFSET
	TArray<float>                                      ItemShowHideAnimDelayTimeStartup;                         // 0x01F8(0x0010) (Edit, ZeroConstructor)
	TArray<bool>                                       ItemShowHideAnimOrderStartup;                             // 0x0208(0x0010) (Edit, ZeroConstructor)
	float                                              ItemShowHideDelayDiffTimeStartup;                         // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x021C(0x0004) MISSED OFFSET
	TArray<struct FUILayerMenuParamRandomText>         RandomTextTable;                                          // 0x0220(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUILayerMenuParamAnimList>           AnimListTable;                                            // 0x0230(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUILayerMenuParamTextDecoration>     DecorationTexts;                                          // 0x0240(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      MenuIndexWidgetClass;                                     // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuVerticalBarWidgetClass;                               // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuLeftVerticalBarWidgetClass;                           // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UTexture2D*>                          CachedIconImages;                                         // 0x0268(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UILayerMenuParam");
		return ptr;
	}

};


// Class Nimbus.UILayerMenuSubMenuObject
// 0x0020 (0x0048 - 0x0028)
class UUILayerMenuSubMenuObject : public UObject
{
public:
	class UMenuIndexWidget*                            MenuWidget;                                               // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuWidgetActor;                                          // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMenuIndexWidget*                            MenuGlowWidget;                                           // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuGlowWidgetActor;                                      // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UILayerMenuSubMenuObject");
		return ptr;
	}

};


// Class Nimbus.LayerMenuManager
// 0x0518 (0x0880 - 0x0368)
class ALayerMenuManager : public AActor
{
public:
	class UUILayerMenuParam*                           LayerMenuParam;                                           // 0x0368(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUIManagerActor*                             UIManagerActor;                                           // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUILayerMenuSubMenuObject*                   SubMenuObjects[0x4];                                      // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x440];                                     // 0x0398(0x0440) MISSED OFFSET
	class UMenuVerticalBarWidget*                      MenuVerticalBarWidget[0x4];                               // 0x07D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuVerticalBar3DWidgetActor[0x4];                        // 0x07F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ALayerMenuLineMeshActor*                     LayerMenuLineActor;                                       // 0x0818(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMenuBaseWidget*                             FocusedMenuWidget;                                        // 0x0820(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuForeground3DWidgetActor;                              // 0x0828(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUIBackgroundActor*                          MenuBackground3DWidgetActor;                              // 0x0830(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuLeftVerticalBar3DWidgetActor;                         // 0x0838(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuRightVerticalBar3DWidgetActor;                        // 0x0840(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0848(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LayerMenuManager");
		return ptr;
	}

};


// Class Nimbus.LobbyGameMode
// 0x04D0 (0x1050 - 0x0B80)
class ALobbyGameMode : public AMultiPlayerGameMode
{
public:
	unsigned char                                      UnknownData00[0x490];                                     // 0x0B80(0x0490) MISSED OFFSET
	class UDataTable*                                  MissionTable;                                             // 0x1010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PlayerCountTable;                                         // 0x1018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  DebugSessionTable;                                        // 0x1020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x1028(0x0010) MISSED OFFSET
	class UEULAHelper*                                 EULAHelper;                                               // 0x1038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x1040(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LobbyGameMode");
		return ptr;
	}


	void StartGame();
	bool AllClientsHaveValidSessionObject();
};


// Class Nimbus.LocalizationManager
// 0x0000 (0x0028 - 0x0028)
class ULocalizationManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.LocalizationManager");
		return ptr;
	}


	void STATIC_SetVoiceCulture(const struct FString& Name);
	void STATIC_SetSubtitleCulture(const struct FString& Name);
	void STATIC_SetIsDebugOutputEnabled(bool Value);
	void STATIC_SetCulture(const struct FString& Name);
	struct FString STATIC_LocalizeStringParams(const struct FString& Key, TArray<struct FString> Params);
	struct FString STATIC_LocalizeString(const struct FString& Key, bool bErrorCheck, const struct FString& DummyPrefix);
	bool STATIC_HasString(const struct FString& Key);
	struct FString STATIC_GetVoiceCulture();
	struct FString STATIC_GetSubtitleCulture();
	bool STATIC_GetIsDebugOutputEnabled();
	struct FString STATIC_GetCulture();
};


// Class Nimbus.MagneticAnomalyDetectorComponent
// 0x0190 (0x0280 - 0x00F0)
class UMagneticAnomalyDetectorComponent : public UNimbusGameObjectComponent
{
public:
	bool                                               bDebugDisplay;                                            // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              SearchDistance;                                           // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchDownwardAngle;                                      // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSearchRadius;                                          // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 SearchDistanceRange;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ObservationRange;                                         // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationOption                              ObservationOption;                                        // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveDirectionOption                 ObservationWaveDirectionOption;                           // 0x0111(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0112(0x0002) MISSED OFFSET
	float                                              MaxVibrationScale;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveNumRange;                                             // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveOffsetRange;                                          // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveMinRatioRange;                                        // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveMaxRatioRange;                                        // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveMaxIntervalRange;                                     // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveMaxTimeRange;                                         // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 WaveSharpnessRange;                                       // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveReferenceOption                 WaveScaleReference;                                       // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveReferenceOption                 WaveNumReference;                                         // 0x0151(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveReferenceOption                 WaveOffsetReference;                                      // 0x0152(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveReferenceOption                 WaveMinReference;                                         // 0x0153(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMADObservationWaveReferenceOption                 WaveMaxReference;                                         // 0x0154(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSearchUnderMode;                                         // 0x0155(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0156(0x0002) MISSED OFFSET
	float                                              JammingWavePeakMin;                                       // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWavePeakMax;                                       // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveScaleMin;                                      // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveScaleMax;                                      // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveNumMin;                                        // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveNumMax;                                        // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveOffsetMin;                                     // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveOffsetMax;                                     // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMinRatioMin;                                   // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMinRatioMax;                                   // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMaxRatioMin;                                   // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMaxRatioMin2;                                  // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMaxRatioMin3;                                  // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveMaxRatioMax;                                   // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingSwitchingCycleTimeMin;                             // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingSwitchingCycleTimeMax;                             // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveSharpMin;                                      // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingWaveSharpMax;                                      // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecaySpeedLimitKmphMin;                                   // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecaySpeedLimitKmphMax;                                   // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecayAltLimitMeterMin;                                    // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecayAltLimitMeterMax;                                    // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ObservatRateOffset;                                       // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReactivationTimeAfterDetectedSubmarineEvent;              // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReactivationTimeAfterJamming;                             // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC4];                                      // 0x01BC(0x00C4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MagneticAnomalyDetectorComponent");
		return ptr;
	}


	void StopJammingMode();
	void SetJammingMode(bool bActive);
	struct FSearchResultDeta GetSearchResult();
};


// Class Nimbus.MainMenuWidget
// 0x0080 (0x0550 - 0x04D0)
class UMainMenuWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x04D0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MainMenuWidget");
		return ptr;
	}

};


// Class Nimbus.MainTitleWidget
// 0x0040 (0x0510 - 0x04D0)
class UMainTitleWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x04D0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MainTitleWidget");
		return ptr;
	}

};


// Class Nimbus.MedalWidget
// 0x0020 (0x0228 - 0x0208)
class UMedalWidget : public UUserWidget
{
public:
	class UWidgetAnimation*                            UmgUnlockAnimation;                                       // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0210(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MedalWidget");
		return ptr;
	}

};


// Class Nimbus.MenuForegroundWidget
// 0x00B0 (0x03A0 - 0x02F0)
class UMenuForegroundWidget : public UUIBaseWidget
{
public:
	TArray<class UWidgetAnimation*>                    UmgStartAnimations;                                       // 0x02F0(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	class UWidgetAnimation*                            UmgAcceptAnimation;                                       // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FCursorInfo                                 ClientCursorInfo;                                         // 0x0308(0x000C) (Edit, DisableEditOnInstance)
	struct FCursorInfo                                 SessionCursorInfo;                                        // 0x0314(0x000C) (Edit, DisableEditOnInstance)
	struct FCursorInfo                                 RadioMessageCursorInfo;                                   // 0x0320(0x000C) (Edit, DisableEditOnInstance)
	struct FCursorInfo                                 SortieSelectCursorInfo;                                   // 0x032C(0x000C) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0338(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuForegroundWidget");
		return ptr;
	}

};


// Class Nimbus.UILayerMenuItemWidget
// 0x0020 (0x0048 - 0x0028)
class UUILayerMenuItemWidget : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UUserWidget*                                 ParentWidget;                                             // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgTextBlock;                                             // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgImage;                                                 // 0x0040(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UILayerMenuItemWidget");
		return ptr;
	}

};


// Class Nimbus.MenuIndexWidget
// 0x0010 (0x0300 - 0x02F0)
class UMenuIndexWidget : public UUIBaseWidget
{
public:
	TArray<class UUILayerMenuItemWidget*>              MenuItemWidgetList;                                       // 0x02F0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuIndexWidget");
		return ptr;
	}

};


// Class Nimbus.MenuScrollBox
// 0x0030 (0x0320 - 0x02F0)
class UMenuScrollBox : public UUIBaseWidget
{
public:
	float                                              ScrollSpeed;                                              // 0x02F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2C];                                      // 0x02F4(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuScrollBox");
		return ptr;
	}


	void SetMenuScrollBar(class UImage* InScrollBar, class UImage* InScrollBarBackground);
	void SetMenuBox(class UTextBlock* InText, class UScrollBox* InScrollBox);
	void RemoveChildAt(int Index);
	class UWidget* GetChildAt(int Index);
	void ClearContent();
	void AddChild(class UWidget* InWidget);
};


// Class Nimbus.SequenceDataAsset
// 0x0018 (0x0048 - 0x0030)
class USequenceDataAsset : public UDataAsset
{
public:
	class UDataTable*                                  SequenceMenuDataTable;                                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SequenceLinkDataTable;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SequenceMenuItemDataTable;                                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SequenceDataAsset");
		return ptr;
	}

};


// Class Nimbus.IntComparator
// 0x0018 (0x0040 - 0x0028)
class UIntComparator : public UVariableComparator
{
public:
	class UIntProperty*                                Property;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.IntComparator");
		return ptr;
	}

};


// Class Nimbus.MenuVerticalBarWidget
// 0x0008 (0x0210 - 0x0208)
class UMenuVerticalBarWidget : public UUserWidget
{
public:
	class UWidgetAnimation*                            UmgStartAnimation;                                        // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuVerticalBarWidget");
		return ptr;
	}

};


// Class Nimbus.MissionStateBase
// 0x0000 (0x0028 - 0x0028)
class UMissionStateBase : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionStateBase");
		return ptr;
	}

};


// Class Nimbus.MiniGameCameraComponent
// 0x0050 (0x09A0 - 0x0950)
class UMiniGameCameraComponent : public UCameraComponent
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x0950(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0958(0x0008) MISSED OFFSET
	TArray<class UCameraAnim*>                         CameraAnimArray;                                          // 0x0960(0x0010) (ZeroConstructor)
	TArray<struct FVector>                             CameraAnimScaleArray;                                     // 0x0970(0x0010) (ZeroConstructor)
	class UCameraAnimInst*                             AnimInst;                                                 // 0x0980(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      DummyCameraActor;                                         // 0x0988(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     CameraAnimScale;                                          // 0x0990(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x099C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameCameraComponent");
		return ptr;
	}

};


// Class Nimbus.MiniGameCameraManager
// 0x00B8 (0x00E0 - 0x0028)
class UMiniGameCameraManager : public UObject
{
public:
	class UCameraViewComponent*                        CameraViewComponent;                                      // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMiniGameCameraComponent*                    MiniGameCameraComponent;                                  // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAnimatedCameraComponent*                    ThiredPersonCameraComponent;                              // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0040(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameCameraManager");
		return ptr;
	}

};


// Class Nimbus.MenuSequenceManager
// 0x01A8 (0x01D0 - 0x0028)
class UMenuSequenceManager : public UObject
{
public:
	class UDataTable*                                  SequenceMenuDataTable;                                    // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SequenceLinkDataTable;                                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SequenceMenuItemDataTable;                                // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USequenceDataAsset*                          SequenceDataUpdate02;                                     // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x180];                                     // 0x0050(0x0180) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuSequenceManager");
		return ptr;
	}

};


// Class Nimbus.MiniGameCarrierDeckCatapult
// 0x0028 (0x0390 - 0x0368)
class AMiniGameCarrierDeckCatapult : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0368(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameCarrierDeckCatapult");
		return ptr;
	}

};


// Class Nimbus.MiniGameHUDManager
// 0x0078 (0x00A0 - 0x0028)
class UMiniGameHUDManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UMiniGameLandingSettings*                    LandingSettings;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameAerialRefuelingSettings*            AerialRefuelingSettings;                                  // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0058(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameHUDManager");
		return ptr;
	}


	void OnSuccessAerialRefuelingDelegate__DelegateSignature();
	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
};


// Class Nimbus.MiniGamePhase
// 0x03E8 (0x0750 - 0x0368)
class AMiniGamePhase : public AActor
{
public:
	struct FScriptMulticastDelegate                    MiniGameStartEvent;                                       // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MiniGameCompleteEvent;                                    // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MiniGameRetryEvent;                                       // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0398(0x0020) MISSED OFFSET
	class AActor*                                      NavyTakeoffStartMarker;                                   // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVolume*                                     NavyTakeoffRunawayVolume;                                 // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      AirTakeoffStartMarker;                                    // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVolume*                                     AirTakeoffRunawayVolume;                                  // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JudgementHeightMeter;                                     // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CatapultTakeoffEndTime;                                   // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TakeoffSuccessfulDemoHeightMeter;                         // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	class AActor*                                      NavyLadingStartMarker;                                    // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AVolume*>                             NavyLandingVolumes;                                       // 0x03F0(0x0010) (Edit, ZeroConstructor)
	class AVolume*                                     NavyAssistLandingVolume;                                  // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVolume*                                     NavyMiniMapLandingVolume;                                 // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      AirLadingStartMarker;                                     // 0x0410(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AVolume*>                             AirLandingVolumes;                                        // 0x0418(0x0010) (Edit, ZeroConstructor)
	class AVolume*                                     AirAssistLandingVolume;                                   // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVolume*                                     AirMiniMapLandingVolume;                                  // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMinigameRandomStartPosParam                LandingRandomRange_Easy;                                  // 0x0438(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                LandingRandomRange_Normal;                                // 0x0448(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                LandingRandomRange_Hard;                                  // 0x0458(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                LandingRandomRange_Ace;                                   // 0x0468(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                LandingRandomRange_Free;                                  // 0x0478(0x0010) (Edit)
	class AActor*                                      AerialRefuellingStartMarker;                              // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMinigameRandomStartPosParam                AerialRefuelingRandomRange_Easy;                          // 0x0490(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                AerialRefuelingRandomRange_Normal;                        // 0x04A0(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                AerialRefuelingRandomRange_Hard;                          // 0x04B0(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                AerialRefuelingRandomRange_Ace;                           // 0x04C0(0x0010) (Edit)
	struct FMinigameRandomStartPosParam                AerialRefuelingRandomRange_Free;                          // 0x04D0(0x0010) (Edit)
	class AAIPlane*                                    RefuelingAircraft;                                        // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelJudgeRadius;                                        // 0x04E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelJudgeOffset;                                        // 0x04EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputBrakeRate;                                     // 0x04F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputLeftYawRate;                                   // 0x04F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputRightYawRate;                                  // 0x04F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputRollRate;                                      // 0x04FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputPitchRate;                                     // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RefuelInputThrottleRate;                                  // 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAdjustForMS03;                                           // 0x0508(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0509(0x0003) MISSED OFFSET
	float                                              Refuel_AdjustJudgeLength;                                 // 0x050C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_AdjustMinStrength;                                 // 0x0510(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_AdjustMaxStrength;                                 // 0x0514(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_DecayRate;                                         // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_RollLimit;                                         // 0x051C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_RollResist;                                        // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_RollDecayRate;                                     // 0x0524(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_YawLimit;                                          // 0x0528(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_YawResist;                                         // 0x052C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_YawDecayRate;                                      // 0x0530(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_PitchLimit;                                        // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_PitchResist;                                       // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Refuel_PitchDecayRate;                                    // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSupplyMiniGame;                                          // 0x0540(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMiniGameType                                      MiniGameType;                                             // 0x0541(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableCarrierTakeoff;                                    // 0x0542(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableCarrierLanding;                                    // 0x0543(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	class AActor*                                      MiniGameVolume;                                           // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      NavyMiniGameVolume;                                       // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPauseBGM;                                                // 0x0558(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0559(0x0007) MISSED OFFSET
	class UAkAudioEvent*                               MiniGameBGMPlayEvent;                                     // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               MiniGameBGMStopEvent;                                     // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeA;                                 // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeB;                                 // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeC;                                 // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeA_Navy;                            // 0x0588(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeB_Navy;                            // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginTakeoffCameraAnimeC_Navy;                            // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 EndTakeoffCameraAnime;                                    // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginLandingCameraAnime;                                  // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 BeginAerialRefuelingCameraAnime;                          // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 EndAerialRefuelingCameraAnime;                            // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 WeaponChangeCameraAnime;                                  // 0x05C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TakeoffTimeLimit;                                         // 0x05C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingTimeLimit;                                         // 0x05CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AerialRefuelingTimeLimit;                                 // 0x05D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x05D4(0x0004) MISSED OFFSET
	TArray<struct FMinigameTimeBonus>                  TimeBonus;                                                // 0x05D8(0x0010) (Edit, ZeroConstructor)
	float                                              RetryTimePenalty;                                         // 0x05E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseFormationLight;                                       // 0x05EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x05ED(0x0003) MISSED OFFSET
	unsigned char                                      bOverride_MotionBlurAmount : 1;                           // 0x05F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MotionBlurMax : 1;                              // 0x05F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MotionBlurPerObjectSize : 1;                    // 0x05F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData07[0x3];                                       // 0x05F1(0x0003) MISSED OFFSET
	float                                              MotionBlurAmount;                                         // 0x05F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MotionBlurMax;                                            // 0x05F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MotionBlurSize;                                           // 0x05FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     AmbientSoundEventName;                                    // 0x0600(0x0010) (Edit, ZeroConstructor)
	struct FString                                     AmbientSoundEventNameForCarrierBasedPlane;                // 0x0610(0x0010) (Edit, ZeroConstructor)
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0620(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionSetupFrameManager*                   SetupFrameManager;                                        // 0x0628(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0630(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionTransitionStateFactory*              TransitionStateFactory;                                   // 0x0638(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionCooldownStateDeadFactory*            DeadStateFactory;                                         // 0x0640(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTakeoffSettings*                    TakeoffSettings;                                          // 0x0648(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameLandingSettings*                    LandingSettings;                                          // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameAerialRefuelingSettings*            AerialRefuelingSettings;                                  // 0x0658(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameCameraManager*                      CameraManager;                                            // 0x0660(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGamePlayerManager*                      PlayerManager;                                            // 0x0668(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameMiniMapManager*                     MiniMapManager;                                           // 0x0670(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameScriptEventManager*                 ScriptEventManager;                                       // 0x0678(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameHUDManager*                         HUDManager;                                               // 0x0680(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTimeManager*                        TimeManager;                                              // 0x0688(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionStateManager*                        StateManager;                                             // 0x0690(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0698(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0xA0];                                      // 0x06A0(0x00A0) MISSED OFFSET
	class UTexture2D*                                  EnlargedMiniMapBackgroundTexture;                         // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  BattleMiniMapBackgroundTexture;                           // 0x0748(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGamePhase");
		return ptr;
	}


	void OnSuccessTakeoffHandler(float ElapsedTime);
	void OnSuccessLandingHandler(float ElapsedTime);
	void OnSuccessAerialRefuelingHandler(float ElapsedTime);
	void OnStartTakeoffHandler(bool bIsRetry);
	void OnStartSupplyMenuHandler();
	void OnStartPlayableTakeoffHandler();
	void OnStartPlayableLandingHandler();
	void OnStartPlayableAerialRefuelingHandler();
	void OnStartLandingHandler(bool bIsRetry);
	void OnStartAerialRefuelingProbeStartHandler();
	void OnStartAerialRefuelingProbeEndHandler();
	void OnStartAerialRefuelingHandler(bool bIsRetry);
	void OnSkipTakeoffHandler(float FadeOutDuration);
	void OnSkipMiniGamePhaseDelegate__DelegateSignature(float FadeOutDuration);
	void OnSkipLandingHandler(float FadeOutDuration);
	void OnSkipAerialRefuelingHandler(float FadeOutDuration);
	void OnPreStartMiniGamePhaseDelegate__DelegateSignature(bool bIsRetry);
	void OnMiniGameTick(float DeltaSeconds);
	void OnMiniGameStart();
	void OnMiniGameSkip();
	void OnMiniGameComplete();
	void OnFinishTakeoffHandler();
	void OnFinishLandingHandler();
	void OnFinishdSupplyMenuHandler();
	void OnFinishAerialRefuelingHandler();
	void OnFailedMiniGameHandler(EMissionStateMiniGameFailReason Reason);
	void OnCooldownStartTimeOutHandler();
	void OnCooldownStartSuccessfulHandler();
	void OnCooldownStartOutOfZoneHandler();
	void OnCooldownStartDeadHandler();
	void OnCooldownFinishedSuccessfulHandler();
	void OnCooldownFinishedFailedHandler();
	void OnCloseSupplyMenu();
	void OnCheckInterruptStateHandler();
	void OnActorEndOverlapTakeoffRunwayHandler(class AActor* OtherActor);
	void OnActorEndOverlapLandingRunwayHandler(class AActor* OtherActor);
	void OnActorBeginOverlapTakeoffRunwayHandler(class AActor* OtherActor);
	void OnActorBeginOverlapLandingRunwayHandler(class AActor* OtherActor);
};


// Class Nimbus.MiniGameLandingState
// 0x00C0 (0x00E8 - 0x0028)
class UMiniGameLandingState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameCameraManager*                      CameraManager;                                            // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGamePlayerManager*                      PlayerManager;                                            // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameMiniMapManager*                     MiniMapManager;                                           // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameHUDManager*                         HUDManager;                                               // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTimeManager*                        TimeManager;                                              // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameScriptEventManager*                 ScriptEventManager;                                       // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameLandingSettings*                    Settings;                                                 // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00D8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameLandingState");
		return ptr;
	}


	void OnSuccessLandingDelegate__DelegateSignature(float ElapsedTime);
	void OnStartLandingPlayableDelegate__DelegateSignature();
	void OnStartLandingDelegate__DelegateSignature(bool bIsRetry);
	void OnSkipDelegate__DelegateSignature(float FadeOutDuration);
	void OnPlayerEndLandingHandler();
	void OnFinishLandingDelegate__DelegateSignature();
	void OnFailLandingDelegate__DelegateSignature(EMissionStateMiniGameFailReason Reason);
	void OnFadeOutHandler(float Duration);
};


// Class Nimbus.MiniGamePlayerManager
// 0x0028 (0x0050 - 0x0028)
class UMiniGamePlayerManager : public UObject
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerWeaponActivator*                      WeaponActivator;                                          // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMiniGameAerialRefuelingSettings*            AerialRefuelingSettings;                                  // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameRefuelInterpolator*                 RefuelInterpolator;                                       // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGamePlayerManager");
		return ptr;
	}

};


// Class Nimbus.MiniGameRefuelInterpolator
// 0x0128 (0x0150 - 0x0028)
class UMiniGameRefuelInterpolator : public UObject
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerWeaponActivator*                      WeaponActivator;                                          // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMiniGameAerialRefuelingSettings*            Settings;                                                 // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x110];                                     // 0x0040(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameRefuelInterpolator");
		return ptr;
	}


	void OnPlayerAdjustMovedTransformHandler(float DeltaTime, bool* bInOutChangedTransform, struct FVector* InOutNextLocation, struct FRotator* InOutNextRotation, struct FRotator* InOutNextMomentSpeed);
};


// Class Nimbus.MiniGameScriptEventManager
// 0x0008 (0x0030 - 0x0028)
class UMiniGameScriptEventManager : public UObject
{
public:
	class UNimbusLevelSleepManager*                    LevelSleepManager;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameScriptEventManager");
		return ptr;
	}

};


// Class Nimbus.MiniGameMiniMapManager
// 0x0028 (0x0050 - 0x0028)
class UMiniGameMiniMapManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameMiniMapManager");
		return ptr;
	}


	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
};


// Class Nimbus.MiniGameSupplyMenuState
// 0x0060 (0x0088 - 0x0028)
class UMiniGameSupplyMenuState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameCameraManager*                      CameraManager;                                            // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGamePlayerManager*                      PlayerManager;                                            // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameHUDManager*                         HUDManager;                                               // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameScriptEventManager*                 ScriptEventManager;                                       // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTakeoffSettings*                    Settings;                                                 // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0080(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameSupplyMenuState");
		return ptr;
	}

};


// Class Nimbus.MiniGameTimeManager
// 0x0010 (0x0038 - 0x0028)
class UMiniGameTimeManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameTimeManager");
		return ptr;
	}

};


// Class Nimbus.MissionTransitionStateBase
// 0x0008 (0x0030 - 0x0028)
class UMissionTransitionStateBase : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionTransitionStateBase");
		return ptr;
	}

};


// Class Nimbus.MiniGameTransitionState
// 0x0000 (0x0030 - 0x0030)
class UMiniGameTransitionState : public UMissionTransitionStateBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameTransitionState");
		return ptr;
	}

};


// Class Nimbus.MiniGameTakeoffSettings
// 0x0020 (0x0048 - 0x0028)
class UMiniGameTakeoffSettings : public UObject
{
public:
	class UMiniGameVolumeSet*                          TakeoffRunwayVolumes;                                     // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      TakeoffStartMarker;                                       // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameTakeoffSettings");
		return ptr;
	}

};


// Class Nimbus.MiniGameLandingSettings
// 0x0038 (0x0060 - 0x0028)
class UMiniGameLandingSettings : public UObject
{
public:
	class UMiniGameVolumeSet*                          LandingRunwayVolumes;                                     // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      LandingStartMarker;                                       // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AVolume*                                     LandingMiniMapVolume;                                     // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AVolume*                                     LandingAssistVolume;                                      // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0048(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameLandingSettings");
		return ptr;
	}

};


// Class Nimbus.MiniGameAerialRefuelingSettings
// 0x0070 (0x0098 - 0x0028)
class UMiniGameAerialRefuelingSettings : public UObject
{
public:
	class AAIPlane*                                    RefuelingAircraft;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      AerialRefuelingStartMarker;                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             RefuelProbeOffMesh;                                       // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeNavyMesh;                                      // 0x0040(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeAirforceMesh;                                  // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RefuelProbeMesh;                                          // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0058(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameAerialRefuelingSettings");
		return ptr;
	}

};


// Class Nimbus.MiniGameVolumeSet
// 0x0088 (0x00B0 - 0x0028)
class UMiniGameVolumeSet : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	TArray<class AVolume*>                             Volumes;                                                  // 0x0048(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0058(0x0050) UNKNOWN PROPERTY: SetProperty Nimbus.MiniGameVolumeSet.OverlappedActors
	unsigned char                                      UnknownData02[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameVolumeSet");
		return ptr;
	}


	void OnActorEndOverlapHandler(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorBeginOverlapHandler(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActorOverlapDelegate__DelegateSignature(class AActor* OtherActor);
};


// Class Nimbus.MiniMapLayerWidget
// 0x0938 (0x0B68 - 0x0230)
class UMiniMapLayerWidget : public UNimbusUserWidget
{
public:
	EMiniMapType                                       InitialMiniMap;                                           // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class UMaterial*                                   IconImageMaterialBase;                                    // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   MiniMapSearchCombatAreaMaterialBase;                      // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   CircleIconMaterialBase;                                   // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAir;                                           // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirGradation;                                  // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirCloud;                                      // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirEscort;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirEscortGradation;                            // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirNPC;                                        // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirNPCGradation;                               // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirTGT;                                        // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirTGTGradation;                               // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGround;                                        // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundGradation;                               // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundEscort;                                  // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundEscortGradation;                         // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundTGT;                                     // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundTGTGradation;                            // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePlayer;                                        // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePlayerHeading;                                 // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePlayerGradation;                               // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureWeapon;                                        // 0x02E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAreaCircleDashedLine;                          // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAreaCircleSolidLine;                           // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAreaCircleFill;                                // 0x02F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAreaCircleGradation;                           // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePingRadius;                                    // 0x0308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureOutOfRange;                                    // 0x0310(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureOutOfRangeGradation;                           // 0x0318(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureTGTOutOfRange;                                 // 0x0320(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureTGTOutOfRangeGradation;                        // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirAlly;                                       // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirAllyGradation;                              // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureArea;                                          // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureJammingArea;                                   // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureSubmarineSearchArea;                           // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconSubmarineSearchAreaLineWidth;                         // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	class UTexture2D*                                  IconTextureSubmarineSearchAreaGradation;                  // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconReturnLine;                                           // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureWhite;                                         // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePredictedWeaponTrajectory;                     // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePredictedWeaponTrajectoryAlcnLine;             // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePredictedWeaponTrajectoryAlcn;                 // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTexturePredictedWeaponTrajectoryAlcnFill;             // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureCombatZoneHorizontalLine;                      // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureCombatZoneVerticalLine;                        // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureSonar;                                         // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureSonarPosition;                                 // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBase;                                            // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBaseTGT;                                         // 0x03C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBaseAlly;                                        // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBaseUnidentified;                                // 0x03E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorEnemy;                                           // 0x03F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorTGT;                                             // 0x0408(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorAlly;                                            // 0x0418(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorUnidentified;                                    // 0x0428(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorPlayer;                                          // 0x0438(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorPlayerHeading;                                   // 0x0448(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorWeapon;                                          // 0x0458(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBombImpactOutline;                               // 0x0468(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorBombImpactFill;                                  // 0x0478(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorImpactAreaOutline;                               // 0x0488(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorImpactAreaFill;                                  // 0x0498(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorImpactAreaGradation;                             // 0x04A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorLines;                                           // 0x04B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColorRadarDisplayObject;                              // 0x04C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BackgroundColorTint;                                      // 0x04D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SeaChartBackgroundColorTint;                              // 0x04E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                LineColorCombatZone;                                      // 0x04F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                LineColorLandingLine;                                     // 0x0508(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                RadarAreaColor;                                           // 0x0518(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SubmarineSearchAreaColor;                                 // 0x0528(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SearchRadarStraightLineColor;                             // 0x0538(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SearchRadarCircularLineColor;                             // 0x0548(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                CombatZoneAreaColor;                                      // 0x0558(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                PredictedWeaponTrajectoryColor;                           // 0x0568(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class USlateBrushAsset*                            CombatZoneAreaBrush;                                      // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                TestIconColorBase;                                        // 0x0580(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                TestIconColorEnemy;                                       // 0x0590(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                TestIconColorAlly;                                        // 0x05A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                TestIconColorTGT;                                         // 0x05B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirTGTRing;                                    // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureAirTGTRingGradation;                           // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundTGTRing;                                 // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IconTextureGroundTGTRingGradation;                        // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconRenderScale;                                          // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconInCloudOpacity;                                       // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconInCloudGradationOpacity;                              // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconGradationOpacity;                                     // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconPlayerGradationOpacity;                               // 0x05F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EnemyDamagedHealth;                                       // 0x05F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnidentifiedColorChangeTime;                              // 0x05F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PingScaleAmount;                                          // 0x05FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BackgroundColorDesaturationMultiplier;                    // 0x0600(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BackgroundOpacityDesaturationMultiplier;                  // 0x0604(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PredictedWeaponTrajectoryWidth;                           // 0x0608(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PredictedWeaponTrajectoryWidthAlcn;                       // 0x060C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PredictedWeaponTrajectoryMinDistanceMeters;               // 0x0610(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PredictedWeaponTrajectoryTimeToReachFullLength;           // 0x0614(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0618(0x0004) MISSED OFFSET
	float                                              CombatZoneLineIconThickness;                              // 0x061C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingLineIconThickness;                                 // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CombatAreaTextureSize;                                    // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderCombatZone;                                        // 0x0628(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0629(0x0003) MISSED OFFSET
	struct FVector2D                                   PlayerHeadingIconOffset;                                  // 0x062C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CircleIconDensityCurve;                                   // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 PredictedWeaponTrajectoryAlphaCurve;                      // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      PingTimings;                                              // 0x0648(0x0010) (ZeroConstructor, Transient)
	TArray<float>                                      CampaignPingTimings;                                      // 0x0658(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      CampaignAllyPingTimings;                                  // 0x0668(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      MultiplayerPingTimings;                                   // 0x0678(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FPredictedWeaponTrajectory>          PredictedWeaponTrajectories;                              // 0x0688(0x0010) (ZeroConstructor, Transient)
	struct FLinearColor                                AttackRingColor;                                          // 0x0698(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                HelpRingColor;                                            // 0x06A8(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                AllyRingColor;                                            // 0x06B8(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                EnemyRingColor;                                           // 0x06C8(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              EffectsSaturation;                                        // 0x06D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyGammaCorrection;                                    // 0x06DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x06DD(0x0003) MISSED OFFSET
	float                                              PingTotalDuration;                                        // 0x06E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AllyPingTotalDuration;                                    // 0x06E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               PingPlayEvent;                                            // 0x06E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMiniMapWidget*                              MiniMapSearchWidget;                                      // 0x06F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMiniMapWidget*                              MiniMapEnlargedWidget;                                    // 0x06F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMiniMapWidget*                              MiniMapBattleWidget;                                      // 0x0700(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 MiniMapJammerWidget;                                      // 0x0708(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x418];                                     // 0x0710(0x0418) MISSED OFFSET
	class UUserWidget*                                 ScanningWidget;                                           // 0x0B28(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      ScanningImage;                                            // 0x0B30(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ScanningImageMID;                                         // 0x0B38(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x28];                                      // 0x0B40(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniMapLayerWidget");
		return ptr;
	}


	void UpdateMiniMapRadarVisibility(EMiniMapType NewMiniMapType);
	void OnUpdateMiniMapRadarVisibility(EMiniMapType NewMiniMapType);
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.MiniMapWidget
// 0x0298 (0x04C8 - 0x0230)
class UMiniMapWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0230(0x0004) MISSED OFFSET
	struct FLinearColor                                HUDMainColor;                                             // 0x0234(0x0010) (BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDHostileColor;                                          // 0x0244(0x0010) (BlueprintVisible, IsPlainOldData)
	float                                              MiniMapRefreshRate;                                       // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0258(0x0004) MISSED OFFSET
	bool                                               bAlignCanvasToPlayer;                                     // 0x025C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderCombatZone;                                        // 0x025D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderSelectedTargetBlinking;                            // 0x025E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderWeapons;                                           // 0x025F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderGroundAIAsUnits;                                   // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	float                                              MiniMapExtent;                                            // 0x0264(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0268(0x0040) MISSED OFFSET
	TArray<class UCanvasPanelSlot*>                    IconPool;                                                 // 0x02A8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UCanvasPanelSlot*>                    CircleIconPool;                                           // 0x02B8(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x28];                                      // 0x02C8(0x0028) MISSED OFFSET
	class UImage*                                      CombatAreaIcon;                                           // 0x02F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CombatAreaMID;                                            // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x128];                                     // 0x0300(0x0128) MISSED OFFSET
	TArray<class ASystemObjectLine*>                   SystemObjectLines;                                        // 0x0428(0x0010) (ZeroConstructor, Transient)
	TArray<class ASystemObject*>                       SystemObjects;                                            // 0x0438(0x0010) (ZeroConstructor, Transient)
	TArray<struct FOutOfRangeDesc>                     OutOfRangeTGTDesc;                                        // 0x0448(0x0010) (ZeroConstructor, Transient)
	TArray<struct FOutOfRangeDesc>                     OutOfRangeNonTGTDesc;                                     // 0x0458(0x0010) (ZeroConstructor, Transient)
	int                                                MaxOutOfRangeLocatorCount;                                // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   OutOfRangeIndicatorDisplayBorderOffset;                   // 0x046C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   OutOfRangeIndicatorDisplayPositionOffset;                 // 0x0474(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DottedLineSegmentSize;                                    // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DottedLineSpaceSegmentSize;                               // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RenderIconScale;                                          // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMiniMapLayerWidget*                         ParentMiniMapLayerWidget;                                 // 0x0488(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FPaintContext                               CachePaintContext;                                        // 0x0490(0x0030)
	bool                                               bIsInitialized;                                           // 0x04C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x04C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniMapWidget");
		return ptr;
	}


	void SetRetainerBoxEffectsSaturation(float InSaturationValue);
	void SetRetainerBoxApplyGammaCorrection(bool bApplyGammaCorrection);
	void SetRenderIconScale(float Scale);
	void SetPlayerIconScale(float Scale);
	void RefreshMiniMap();
	void OnHUDDisabled();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
	void OnCombatZoneUpdated();
	struct FVector2D GetMiniMapSize();
};


// Class Nimbus.MiniMapRadarWidget
// 0x0158 (0x0620 - 0x04C8)
class UMiniMapRadarWidget : public UMiniMapWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET
	class UTexture2D*                                  IconTextureCircleLarge;                                   // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconTextureCircleMedium;                                  // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconTextureCircleSmall;                                   // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MiniMapZoomedExtentNormal;                                // 0x04E8(0x0008) (Edit, EditConst, IsPlainOldData)
	struct FVector2D                                   MiniMapZoomedExtentNear;                                  // 0x04F0(0x0008) (Edit, EditConst, IsPlainOldData)
	struct FVector2D                                   MiniMapZoomedExtentVeryNear;                              // 0x04F8(0x0008) (Edit, EditConst, IsPlainOldData)
	float                                              MiniMapZoomTimeInSecond;                                  // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MiniMapZoomEaseOutExponent;                               // 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0508(0x0048) MISSED OFFSET
	class UImage*                                      RadarCircleLarge;                                         // 0x0550(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UImage*                                      RadarCircleMedium;                                        // 0x0558(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UImage*                                      RadarCircleSmall;                                         // 0x0560(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FLinearColor                                CurrentRadarStraightLineAlertColor;                       // 0x0568(0x0010) (BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                RadarStraightLineDefaultColor;                            // 0x0578(0x0010) (BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                CurrentRadarCircularLineAlertColor;                       // 0x0588(0x0010) (BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                RadarCircularLineDefaultColor;                            // 0x0598(0x0010) (BlueprintVisible, IsPlainOldData)
	float                                              DirectionCompassRadius;                                   // 0x05A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x34];                                      // 0x05AC(0x0034) MISSED OFFSET
	TArray<class UImage*>                              StraightLineImages;                                       // 0x05E0(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              CircularLineImages;                                       // 0x05F0(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UTextBlock*                                  NorthText;                                                // 0x0600(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SouthText;                                                // 0x0608(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  EastText;                                                 // 0x0610(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  WestText;                                                 // 0x0618(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniMapRadarWidget");
		return ptr;
	}


	void RefreshMiniMap();
	void OnHUDEnabled();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
	void ChangeRadarLineColor();
};


// Class Nimbus.MiniGameAerialRefuelingState
// 0x00E0 (0x0108 - 0x0028)
class UMiniGameAerialRefuelingState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0028(0x0080) MISSED OFFSET
	class UNimbusFadeManager*                          FadeManager;                                              // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameCameraManager*                      CameraManager;                                            // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGamePlayerManager*                      PlayerManager;                                            // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameMiniMapManager*                     MiniMapManager;                                           // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameHUDManager*                         HUDManager;                                               // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTimeManager*                        TimeManager;                                              // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameScriptEventManager*                 ScriptEventManager;                                       // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameAerialRefuelingSettings*            Settings;                                                 // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameAerialRefuelingState");
		return ptr;
	}


	void OnVisibilityChangedRefuelingAircraftHandler(bool bVisibility);
	void OnSuccessAerialRefuelingHandler();
	void OnSuccessAerialRefuelingDelegate__DelegateSignature(float ElapsedTime);
	void OnStartProbeStartDelegate__DelegateSignature();
	void OnStartProbeEndDelegate__DelegateSignature();
	void OnStartAerialRefuelingPlayableDelegate__DelegateSignature();
	void OnStartAerialRefuelingDelegate__DelegateSignature(bool bIsRetry);
	void OnSkipDelegate__DelegateSignature(float FadeOutDuration);
	void OnFinishAerialRefuelingDelegate__DelegateSignature();
	void OnFailAerialRefuelingDelegate__DelegateSignature(EMissionStateMiniGameFailReason Reason);
	void OnFadeOutHandler(float Duration);
};


// Class Nimbus.MiniMapScrollableWidget
// 0x0040 (0x0508 - 0x04C8)
class UMiniMapScrollableWidget : public UMiniMapWidget
{
public:
	class UMaterial*                                   BackgroundImageMaterialBase;                              // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x04D0(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniMapScrollableWidget");
		return ptr;
	}


	void RefreshMiniMap();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
};


// Class Nimbus.MissileParameters
// 0x0050 (0x0128 - 0x00D8)
class UMissileParameters : public UExplosiveWeaponParameters
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00D8(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissileParameters");
		return ptr;
	}

};


// Class Nimbus.Missile_FinallySpawnWeapon
// 0x0008 (0x08A8 - 0x08A0)
class AMissile_FinallySpawnWeapon : public AMissile
{
public:
	class UClass*                                      ImpactSpawnWeaponClass;                                   // 0x08A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Missile_FinallySpawnWeapon");
		return ptr;
	}

};


// Class Nimbus.MissileHomingParameters
// 0x0028 (0x0078 - 0x0050)
class UMissileHomingParameters : public UWeaponHomingParameters
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0050(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissileHomingParameters");
		return ptr;
	}

};


// Class Nimbus.MissileMovementParameters
// 0x0008 (0x0078 - 0x0070)
class UMissileMovementParameters : public UWeaponMovementParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissileMovementParameters");
		return ptr;
	}

};


// Class Nimbus.MissileMovementComponent
// 0x0080 (0x0348 - 0x02C8)
class UMissileMovementComponent : public UWeaponMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x02C8(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissileMovementComponent");
		return ptr;
	}

};


// Class Nimbus.Mission
// 0x0560 (0x08C8 - 0x0368)
class AMission : public AActor
{
public:
	struct FScriptMulticastDelegate                    ObjEvent;                                                 // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PreRestartPhaseEvent;                                     // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CheckPointLoadedEvent;                                    // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseEndEvent;                                            // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    IGCEnableEvent;                                           // 0x03A8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    TransitionToMiniGameEvent;                                // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    IGCViewerEvent;                                           // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CombatZoneUpdatedEvent;                                   // 0x03D8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x20];                                      // 0x03E8(0x0020) MISSED OFFSET
	class UMissionVariables*                           MissionVariables;                                         // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FMissionVariableChangeHistory>       MissionVariableChangeHistory;                             // 0x0410(0x0010) (ZeroConstructor, Transient)
	TArray<class AMissionPhase*>                       SortedPhases;                                             // 0x0420(0x0010) (ZeroConstructor, Transient)
	TArray<class AMissionPhase*>                       AllPhases;                                                // 0x0430(0x0010) (ZeroConstructor, Transient)
	TArray<class AMissionPhase*>                       AllMiniGamePhases;                                        // 0x0440(0x0010) (ZeroConstructor, Transient)
	class AMissionPhase*                               CurrentPhase;                                             // 0x0450(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class ANimbusLevelScriptActor*                     GlobalPhaseLevelScriptActor;                              // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusHUD*                                  NimbusHUD;                                                // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MissionNo;                                                // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	class UDataTable*                                  PhaseAssetTable;                                          // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    MissionEvent;                                             // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ACombatZone*                                 CombatZone;                                               // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x88];                                      // 0x0498(0x0088) MISSED OFFSET
	class AMissionAIManager*                           AIManager;                                                // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x0528(0x001C) MISSED OFFSET
	float                                              AirObjectIdentificationRateMultiplier;                    // 0x0544(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundObjectIdentificationRateMultiplier;                 // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3C];                                      // 0x054C(0x003C) MISSED OFFSET
	TArray<struct FKillStats>                          MissionKillStatList;                                      // 0x0588(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x1C];                                      // 0x0598(0x001C) MISSED OFFSET
	float                                              MissionCooldownDuration;                                  // 0x05B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MissionFailureCooldownDuration;                           // 0x05B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MissionFailureByDeathCooldownDuration;                    // 0x05BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x05C0(0x0018) MISSED OFFSET
	struct FString                                     CurrentQuotaMissionVariableName;                          // 0x05D8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     TargetQuotaMissionVariableName;                           // 0x05E8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData08[0x4];                                       // 0x05F8(0x0004) MISSED OFFSET
	float                                              CooldownFadingDuration;                                   // 0x05FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0600(0x0008) MISSED OFFSET
	TArray<struct FMissionVariableEvent>               MissionVariableEvents;                                    // 0x0608(0x0010) (ZeroConstructor)
	class AMissionPhase*                               SupplyPhase;                                              // 0x0618(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0620(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0628(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bMiniMapSeaChart;                                         // 0x0630(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0631(0x0007) MISSED OFFSET
	struct FMiniMapGridSettings                        MiniMapEnlargedGridSettings;                              // 0x0638(0x0010) (Edit)
	struct FMiniMapGridSettings                        MiniMapBattleGridSettings;                                // 0x0648(0x0010) (Edit)
	struct FMiniMapGridSettings                        CurrentMiniMapEnlargedGridSettings;                       // 0x0658(0x0010) (Transient)
	struct FMiniMapGridSettings                        CurrentMiniMapBattleGridSettings;                         // 0x0668(0x0010) (Transient)
	TArray<struct FString>                             MissionEnvironmentLevelNames;                             // 0x0678(0x0010) (Edit, ZeroConstructor)
	TArray<struct FString>                             MissionLogicLevelNames;                                   // 0x0688(0x0010) (Edit, ZeroConstructor)
	bool                                               bForcedAirForceTakeoffParameter;                          // 0x0698(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0699(0x0003) MISSED OFFSET
	float                                              GndSpeedTakeoff;                                          // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GndSpeedMax;                                              // 0x06A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GndSpeedLift;                                             // 0x06A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PowerAfterBurnerR;                                        // 0x06A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GndDrag3;                                                 // 0x06AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedMax;                                                 // 0x06B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AcceleR;                                                  // 0x06B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForcedAirForceLandingParameter;                          // 0x06B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x06B9(0x0003) MISSED OFFSET
	float                                              GndDrag2;                                                 // 0x06BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedCruise;                                              // 0x06C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedMin;                                                 // 0x06C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UNimbusLevelSleepManager*                    LevelSleepManager;                                        // 0x06C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGarbageCollectManager*                GarbageCollectManager;                                    // 0x06D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class ANimbusLevelScriptActor*>             LevelScriptActors;                                        // 0x06D8(0x0010) (ZeroConstructor, Transient)
	TArray<class ULevel*>                              MissionEnvironmentLevels;                                 // 0x06E8(0x0010) (ZeroConstructor, Transient)
	TArray<class ULevel*>                              MissionLogicLevels;                                       // 0x06F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData13[0x50];                                      // 0x0708(0x0050) UNKNOWN PROPERTY: SetProperty Nimbus.Mission.AllMiniGameLevels
	unsigned char                                      UnknownData14[0x50];                                      // 0x0758(0x0050) UNKNOWN PROPERTY: SetProperty Nimbus.Mission.AllIGCLevels
	class UClass*                                      SpecificWeaponClass;                                      // 0x07A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OnDeathMissionFailDelayTimer;                             // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x07B4(0x0004) MISSED OFFSET
	struct FString                                     AmbientSoundEventName;                                    // 0x07B8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData16[0x50];                                      // 0x07C8(0x0050) MISSED OFFSET
	class UAkAudioEvent*                               BGMStopEvent;                                             // 0x0818(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAkAudioEvent*                               BGMPlayEvent;                                             // 0x0820(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x10];                                      // 0x0828(0x0010) MISSED OFFSET
	class UAutomatedCollectMissionAsset*               AutomatedCollectMissionAsset;                             // 0x0838(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x8];                                       // 0x0840(0x0008) MISSED OFFSET
	class UMissionStateManager*                        StateManager;                                             // 0x0848(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData19[0x18];                                      // 0x0850(0x0018) MISSED OFFSET
	class ANimbusReplayPawn*                           ReplayPawn;                                               // 0x0868(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionReplayChapterManager*                ReplayChapterManager;                                     // 0x0870(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionIGCPlayer*                           IGCPlayer;                                                // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionOverlapActorManager*                 GlobalOverlapVolumeManager;                               // 0x0880(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionOverlapActorManager*                 AllMiniGameOverlapVolumeManager;                          // 0x0888(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0890(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionSetupFrameManager*                   SetupFrameManager;                                        // 0x0898(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionTransitionStateFactory*              TransitionStateFactory;                                   // 0x08A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionCooldownStateDeadFactory*            DeadStateFactory;                                         // 0x08A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionDelayStateFactory*                   DelayStateFactory;                                        // 0x08B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AMissionUIManagerActor*                      MissionUIManagerActor;                                    // 0x08B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x08C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Mission");
		return ptr;
	}


	void SkipMiniGame();
	void ShowMissionQuota(bool bShow);
	void STATIC_ShowMissionAccomplished_S(EMissionSuccessNotificationType Type);
	void STATIC_SetTrueSkyTime_S(int Hour, int Minute, float ShadowBase);
	void SetRemainingHpPercentage(float Percentage);
	void STATIC_SetObjectiveMissionScore_S(int Score);
	void STATIC_SetMissionObjectivesOnPause_S(int Value);
	void OnSystemMissionHandler(float DeltaTime);
	void OnSystemLevelScriptActorHandler(float DeltaTime);
	void OnSystemEndPhysicsHandler(float DeltaTime);
	void OnSuccessSupplyPhaseHandler(class AMissionPhase* MissionPhase, const struct FVector& RestartLocation, const struct FRotator& RestartRotation);
	void OnSuccessCurrentPhaseHandler(class AMissionPhase* MissionPhase);
	void OnStoppedReplayHandler();
	void OnStartSupplyPhaseHandler(class AMissionPhase* MissionPhase);
	void OnStartNextPhaseHandler(class AMissionPhase* MissionPhase, bool bIsRestart);
	void OnPreStopBusEvent(ENimbusSoundType BusType);
	void OnPreStartReplayHandler(bool bIsRestart);
	void OnPreStartMiniGamePhaseDelegate__DelegateSignature(bool bIsRetry);
	void OnPostStartReplayHandler(bool bIsRestart);
	void OnIgcStartSkipFadeOutHandler(bool bStopBGM, class UAkAudioEvent* OverrideStopBGMEvent, float Duration);
	void OnIgcCameraChangedHandler(class ACameraActor* NewCameraActor);
	void OnIgcCameraChanged__DelegateSignature(class ACameraActor* NewCameraActor);
	void OnGameEndPhysicsHandler(float DeltaTime);
	void OnFailCurrentPhaseHandler(class AMissionPhase* MissionPhase, EMissionStatePhaseFailReason Reason);
	void OnEndIGCHandler(const struct FMissionIGCRequestInfo& RequestInfo, class AMissionPhase* MiniGameMapPhase);
	void OnCooldownStartTimeOutHandler();
	void OnCooldownStartSuccessfulHandler();
	void OnCooldownStartOutOfZoneHandler();
	void OnCooldownStartFailObjectiveHandler();
	void OnCooldownStartDeadHandler();
	void OnCooldownFinishedHandler();
	void OnCheckInterruptStateHandler();
	void OnChangedReplayChapterHandler();
	void OnBeginIGCHandler(const struct FMissionIGCRequestInfo& RequestInfo, class AMissionPhase* MiniGameMapPhase);
	void OnActorSpawnedHandler(class AActor* SpawnedActor);
	bool IsPlayingBGM();
	bool IsMissionStarted();
	bool IsMissionFailed();
	bool IsMissionCompleted();
	bool IsInIGC();
	void IGCPreviewDelegate__DelegateSignature(int IGCNumber);
	int STATIC_GetObjectiveMissionScore_S();
	int STATIC_GetMissionScore_S();
	float STATIC_GetMissionPhaseTimeLeftInSeconds_S();
	float STATIC_GetMissionPhaseElapsedTimeInSeconds_S();
	float STATIC_GetMissionElapsedTimeInSeconds_S();
	int GetKillStatCount();
	void GetKillStat(int Index, struct FString* OutName, int* OutScore, float* OutTime);
	class AMission* STATIC_GetCurrentMission(bool bIncludeOnline);
	class AMissionConditionChecker* GetConditionChecker();
	class AMissionAIManager* GetAIManager();
	void STATIC_ForcePauseMissionTimer_S(bool bPause);
	void CompleteCoolDownOverride(float NewCooldownDuration, float NewCooldownFadingDuration);
	void Complete();
	void CombatZoneUpdatedDelegate__DelegateSignature();
};


// Class Nimbus.MissionCommonActor
// 0x0000 (0x0368 - 0x0368)
class AMissionCommonActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCommonActor");
		return ptr;
	}


	class AMissionCommonActor* STATIC_GetMissionCommonActor();
};


// Class Nimbus.MissionAIManager
// 0x0008 (0x0370 - 0x0368)
class AMissionAIManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionAIManager");
		return ptr;
	}


	void OnMissionPhaseRestarted(const struct FString& Dummy);
};


// Class Nimbus.MissionConditionChecker
// 0x0028 (0x0390 - 0x0368)
class AMissionConditionChecker : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnConditionUpdate;                                        // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FMissionConditionData>               Conditions;                                               // 0x0380(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionConditionChecker");
		return ptr;
	}


	void OnMissionPhaseRestarted(const struct FString& Dummy);
	void OnConditionUpdate__DelegateSignature();
	int STATIC_Get_TargetModifierStar(class AGameObject* GameObject);
	int STATIC_Get_StealthContainerOpacityPercentage(class AGameObject* GameObject);
	EMissionCondition_MiniGameCourseAssistant STATIC_Get_LandingCourseAssistant(float TouchdownRate, float TopSlopeRate, float BottomSlopeRate, float SideLineRate, float TopExpandAngle, float BottomExpandAngle, float SideExpandAngle, float LimitGauge, float LimitRoll);
	EMissionCondition_AzimuthOfDegrees STATIC_Get_AzimuthOfDegreesToObject(class AGameObject* GameObject, class AGameObject* Target, bool bIsRelativePosition);
	EMissionCondition_AzimuthOfClock STATIC_Get_AzimuthOfClockToObject(class AGameObject* GameObject, class AGameObject* Target, bool bIsRelativePosition);
	EMissionCondition_MiniGameCourseAssistant STATIC_Get_AerialRefuellingCourseAssistant(float ThresholdSideDistance, float ThresholdTopDistance, float ThresholdBottomDistance, float SideExpandAngle, float TopExpandAngle, float BottomExpandAngle, float LimitGauge, float LimitRoll);
	bool STATIC_Check_WeaponType(class AWeaponBase* Weapon, EMissionCondition_WeaponType WeaponType, class AWeaponBase** OutWeapon);
	bool STATIC_Check_WeaponLockedOnTarget(class AWeaponBase* HitWeapon, class AGameObject* DamagedObject);
	bool STATIC_Check_WeaponInCloud(class AWeaponBase* Weapon);
	bool STATIC_Check_WeaponFired(EMissionCondition_ObjectSpecificType OwnerType, EMissionCondition_ObjectSpecificType TargetType, EMissionCondition_WeaponType WeaponType);
	bool STATIC_Check_WeaponCountRateLessThanOrEqualTo(int WeaponCount, int MaxCount, float Rate);
	bool STATIC_Check_TeamDeathMatchSituation(class AGameObject* GameObject, EMissionCondition_TeamSituation Situation);
	bool STATIC_Check_TeamDeathMatchScoreProgress(float Percent);
	bool STATIC_Check_TargetPlaneRank(class AGameObject* GameObject, int Rank);
	bool STATIC_Check_TargetLockon(EMissionCondition_ObjectSpecificType TargetType, EMissionCondition_ObjectSpecificType InstigatorType);
	bool STATIC_Check_PhaseNo(int PhaseNo);
	bool STATIC_Check_PhaseElapsedTime(float ElapsedTime);
	bool STATIC_Check_OutOfCombatZone(class AActor* Actor, bool bAdaptAIFlightBufferDist);
	bool STATIC_Check_ObjectType(class AGameObject* GameObject, EMissionCondition_ObjectSpecificType SpecificType, class AGameObject** OutGameObject);
	bool STATIC_Check_ObjectDestroyed(EMissionCondition_ObjectSpecificType TargetType, EMissionCondition_ObjectSpecificType InstigatorType);
	bool STATIC_Check_ObjectDamaged(EMissionCondition_ObjectSpecificType TargetType, EMissionCondition_ObjectSpecificType InstigatorType, EMissionCondition_DamageType DamageType);
	bool STATIC_Check_MissionFailure(EMissionCondition_FailureType FailureType);
	bool STATIC_Check_MissileLostTarget(EMissionCondition_ObjectSpecificType TargetType, EMissionCondition_ObjectSpecificType OwnerType);
	bool STATIC_Check_MiniGameType(EMissionCondition_MiniGameType Type);
	bool STATIC_Check_MiniGameDistance(EMissionCondition_MiniGameDistanceType Type, float ThresholdDistanceMeter);
	bool STATIC_Check_LessMissionTimeLeft(float CheckTime);
	bool STATIC_Check_ElapsedTimeSinceEnteredCloud(class AGameObject* GameObject, float ElapsedTime, class AGameObject** OutGameObject);
	bool STATIC_Check_ElapsedMissionTime(float CheckTime);
	bool STATIC_Check_DistanceFromPlayer(class AActor* Actor, float Distance);
	bool STATIC_Check_BattleRoyalSituation(class AGameObject* GameObject, EMissionCondition_BattleRoyalSituation Situation);
	bool STATIC_Check_BattleRoyalRank(class AGameObject* GameObject, int Rank);
};


// Class Nimbus.MissionCooldownStateDeadBase
// 0x0030 (0x0058 - 0x0028)
class UMissionCooldownStateDeadBase : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateDeadBase");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateDead
// 0x0018 (0x0070 - 0x0058)
class UMissionCooldownStateDead : public UMissionCooldownStateDeadBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateDead");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateDeadFactory
// 0x0020 (0x0048 - 0x0028)
class UMissionCooldownStateDeadFactory : public UObject
{
public:
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateDeadFactory");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateDeadVR
// 0x0008 (0x0060 - 0x0058)
class UMissionCooldownStateDeadVR : public UMissionCooldownStateDeadBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateDeadVR");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateOutOfZone
// 0x0038 (0x0060 - 0x0028)
class UMissionCooldownStateOutOfZone : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class APlayerPlane*                                PlayerPlane;                                              // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateOutOfZone");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateFailObjective
// 0x0030 (0x0058 - 0x0028)
class UMissionCooldownStateFailObjective : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateFailObjective");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateTimeOut
// 0x0030 (0x0058 - 0x0028)
class UMissionCooldownStateTimeOut : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateTimeOut");
		return ptr;
	}

};


// Class Nimbus.MissionCooldownStateSuccessful
// 0x0030 (0x0058 - 0x0028)
class UMissionCooldownStateSuccessful : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionCooldownStateSuccessful");
		return ptr;
	}

};


// Class Nimbus.MissionDebugActor
// 0x0000 (0x0368 - 0x0368)
class AMissionDebugActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDebugActor");
		return ptr;
	}

};


// Class Nimbus.MissionDelayStateBase
// 0x0018 (0x0040 - 0x0028)
class UMissionDelayStateBase : public UMissionStateBase
{
public:
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionStateBase*                           NextState;                                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDelayStateBase");
		return ptr;
	}

};


// Class Nimbus.MissionDelayMS04SpecialState
// 0x0020 (0x0060 - 0x0040)
class UMissionDelayMS04SpecialState : public UMissionDelayStateBase
{
public:
	class AActor*                                      PlayerPlane;                                              // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0048(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDelayMS04SpecialState");
		return ptr;
	}

};


// Class Nimbus.MissionDelayStateFactory
// 0x0010 (0x0038 - 0x0028)
class UMissionDelayStateFactory : public UObject
{
public:
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDelayStateFactory");
		return ptr;
	}

};


// Class Nimbus.MissionEventListener
// 0x02B0 (0x0618 - 0x0368)
class AMissionEventListener : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnListenerTick;                                           // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectFireWeapon;                                       // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectDestroyed;                                        // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectTakeDamage;                                       // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectLockon;                                           // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectFoundTarget;                                      // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectGetBehind;                                        // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissileLostTarget;                                      // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCloudStateChanged;                                      // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectKilledByPlayer;                                   // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnitActivated;                                          // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnitDestroyed;                                          // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionPhaseStart;                                      // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionFailed;                                          // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerDead;                                             // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionAccomplished;                                    // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRadioGroupBegin;                                        // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRadioMessageBegin;                                      // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRadioMessageEnd;                                        // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDisplaySystemMessage;                                   // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDisplayTargetLocator;                                   // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponCountChanged;                                     // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectLostLockon;                                       // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTimeElapseSinceEnteredCloud;                            // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectFireFlare;                                        // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionTimeElapse;                                      // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectInterceptWeapon;                                  // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangedMultiplayerState;                                // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectToObjectEventOccurred;                            // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectEventOccurred;                                    // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMiniGameEventOccurred;                                  // 0x0550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMiniGamePlayingTick;                                    // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventTGTPEventPhase;                                    // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventMADEventPhase;                                     // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSonobuoyEventOccurred;                                  // 0x0590(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSubmarineEventMovedOnWater;                             // 0x05A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSubmarineEventMovedUnderWater;                          // 0x05B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSubmarineEventCompletedNoseLift;                        // 0x05C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSubmarineEventCompletedNoseDown;                        // 0x05D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSubmarineEventRailgunState;                             // 0x05E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTargetLostJammerEnd;                                    // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0600(0x0008) MISSED OFFSET
	bool                                               bEnableEventFilter;                                       // 0x0608(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0609(0x0003) MISSED OFFSET
	int                                                PhaseNo;                                                  // 0x060C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableDuringMission;                                    // 0x0610(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableDuringMiniGame;                                   // 0x0611(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableReplaying;                                         // 0x0612(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0613(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionEventListener");
		return ptr;
	}


	void MissionEventListenerTick__DelegateSignature(float DeltaSeconds);
	void EnableBPEvent(bool bEnable);
};


// Class Nimbus.MissionEventListenerInterface
// 0x0000 (0x0028 - 0x0028)
class UMissionEventListenerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionEventListenerInterface");
		return ptr;
	}


	void HandlerWeaponCountChanged(class AGameObject* Caucer, class AWeaponBase* Weapon, int WeaponNumber, int RemainingCount, int PrevCount, int MaxCount);
	void HandlerUnitDestroyed(class AUnit* Unit);
	void HandlerUnitActivated(class AUnit* Unit);
	void HandlerTimeElapseSinceEnteredCloud(class AGameObject* Caucer, float ElapsedTime, float PrevElapsedTime);
	void HandlerTGTPEventPhase(ETGTP_PhaseType InPhaseType);
	void HandlerSubmarineEventRailgunState(class AAIGroundVehicle* Submarine, ESubmarineRailgunEvent Event);
	void HandlerSubmarineEventMovedUnderWater(class AAIGroundVehicle* Submarine);
	void HandlerSubmarineEventMovedOnWater(class AAIGroundVehicle* Submarine);
	void HandlerSubmarineEventCompletedNoseLift(class AAIGroundVehicle* Submarine);
	void HandlerSubmarineEventCompletedNoseDown(class AAIGroundVehicle* Submarine);
	void HandlerSonobuoyEventOccurred(class ASystemObjectSonobuoy* Sonobuoy, ESonobuoyEvent Event);
	void HandlerRadioMessageEnd(const struct FString& RadioGroupID, const struct FString& VoiceID, bool bGroupEnd);
	void HandlerRadioMessageBegin(const struct FString& RadioGroupID, const struct FString& VoiceID);
	void HandlerRadioGroupBegin(const struct FString& RadioGroupID);
	void HandlerPlayerDead(EMissionCondition_PlayerDeadReason DeadReason);
	void HandlerObjectToObjectEventOccurred(class AGameObject* Causer, class AGameObject* Target, EMissionCondition_ObjectToObjectEvent Event);
	void HandlerObjectTakeDamage(class AGameObject* Causer, class AGameObject* DamagedTarget, class AWeaponBase* WeaponEntity, class AWeaponBase* WeaponTypeCDO, float Damage);
	void HandlerObjectLostLockon(class AGameObject* Caucer, class AGameObject* LcokonTarget, EMissionCondition_LostLockonCause Cause);
	void HandlerObjectLockon(class AGameObject* Causer, class AGameObject* LockonTarget);
	void HandlerObjectKilledByPlayer(class AGameObject* Causer, ESubFaction SubFaction);
	void HandlerObjectInterceptWeapon(class AGameObject* Causer, class AWeaponBase* Weapon, class AGameObject* InterceptedShooter, class AWeaponBase* InterceptedWeapon);
	void HandlerObjectGetBehind(class AGameObject* Causer, class AGameObject* ChaseTarget);
	void HandlerObjectFoundTarget(class AGameObject* Causer, class AGameObject* TrackingTarget);
	void HandlerObjectFireWeapon(class AGameObject* Causer, class AGameObject* WeaponTarget, class AWeaponBase* Weapon, int WeaponNumber);
	void HandlerObjectFireFlare(class AGameObject* Caucer, int RemainingCount);
	void HandlerObjectEventOccurred(class AGameObject* Causer, EMissionCondition_ObjectEvent Event);
	void HandlerObjectDestroyed(class AGameObject* Causer, class AGameObject* DestroyedTarget, class AGameObject* TargetLockonTarget, class AWeaponBase* HitWeapon, class AWeaponBase* HitWeaponTypeCDO);
	void HandlerMissionTimeElapse(float ElapsedTime, float PrevElapsedTime, float TimeLeft, float PrevTimeLeft);
	void HandlerMissionPhaseStart(int PhaseNo);
	void HandlerMissionFailed(EMissionCondition_FailureType FailureType);
	void HandlerMissionAccomplished();
	void HandlerMissileLostTarget(class AGameObject* Causer, class AGameObject* MissileTarget, class AWeaponBase* Weapon);
	void HandlerMiniGamePlayingTick(float DeltaSeconds);
	void HandlerMiniGameEventOccurred(EMissionCondition_MiniGameEvent Event);
	void HandlerMADEventPhase(EMAD_SearchType InPhaseType);
	void HandlerLostTargetJammerEnd();
	void HandlerDisplayTargetLocator(class AGameObject* Target);
	void HandlerDisplaySystemMessage(EMissionCondition_SystemMessageType MessageType);
	void HandlerCloudStateChanged(class AGameObject* Causer, EMissionCondition_CloudEvent CloudEvent);
	void HandlerChangedMultiplayerState(class AGameObject* Causer, EMissionCondition_MultiplayerEvent Event);
};


// Class Nimbus.MissionFadeSoundManager
// 0x0040 (0x0068 - 0x0028)
class UMissionFadeSoundManager : public UObject
{
public:
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0030(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionFadeSoundManager");
		return ptr;
	}


	void OnPreUnpauseBusHandler(ENimbusSoundType BusType);
	void OnPreStopBusHandler(ENimbusSoundType BusType);
	void OnPrePauseBusHandler(ENimbusSoundType BusType);
	void OnPostStopBusHandler(ENimbusSoundType BusType);
	void OnFadeOutHandler(float Duration);
	void OnFadeInHandler(float Duration);
	void OnFadedOutHandler();
	void OnFadedInHandler();
};


// Class Nimbus.MissionIGCPlayer
// 0x00E0 (0x0108 - 0x0028)
class UMissionIGCPlayer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UNimbusPauseManager*                         PauseManager;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x0058(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionIGCPlayer");
		return ptr;
	}


	void OnStartSkipFadeOut__DelegateSignature(bool bStopBGM, class UAkAudioEvent* OverrideStopBGMEvent, float Duration);
	void OnIgcCameraChanged__DelegateSignature(class ACameraActor* NewCameraActor);
	void OnFadeOutHandler(float Duration);
};


// Class Nimbus.MissionIGCState
// 0x0058 (0x0080 - 0x0028)
class UMissionIGCState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UMissionIGCPlayer*                           IGCPlayer;                                                // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAsyncTaskMissionRequestIGC*                 IGCTask;                                                  // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AMissionPhase*                               MiniGameMapPhase;                                         // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGarbageCollectManager*                GarbageCollectManager;                                    // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusSoundReverbManager*                   SoundReverbManager;                                       // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionIGCState");
		return ptr;
	}

};


// Class Nimbus.MissionMultiTransitionState
// 0x0000 (0x0030 - 0x0030)
class UMissionMultiTransitionState : public UMissionTransitionStateBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionMultiTransitionState");
		return ptr;
	}

};


// Class Nimbus.MissionObjectiveBase
// 0x0008 (0x0030 - 0x0028)
class UMissionObjectiveBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveBase");
		return ptr;
	}


	void Reset();
	class APlayerPlane* GetPlayerPlane();
	EObjectiveStatus CheckObjectiveStatus(float DeltaSeconds);
};


// Class Nimbus.MissionObjectiveDestroyTargets
// 0x0030 (0x0060 - 0x0030)
class UMissionObjectiveDestroyTargets : public UMissionObjectiveBase
{
public:
	TArray<TLazyObjectPtr<class AAIGameObject>>        TargetObjectsToDestroy;                                   // 0x0030(0x0010) (ZeroConstructor)
	bool                                               bSelectAll;                                               // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x10];                                      // 0x0041(0x0010) UNKNOWN PROPERTY: ArrayProperty Nimbus.MissionObjectiveDestroyTargets.TargetObjectsToDestroySoftRefs
	int                                                version;                                                  // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveDestroyTargets");
		return ptr;
	}

};


// Class Nimbus.MissionObjectiveDestroyUnits
// 0x0028 (0x0058 - 0x0030)
class UMissionObjectiveDestroyUnits : public UMissionObjectiveBase
{
public:
	TArray<TLazyObjectPtr<class AUnit>>                TargetUnitsToDestroy;                                     // 0x0030(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty Nimbus.MissionObjectiveDestroyUnits.TargetUnitsToDestroySoftRefs
	int                                                version;                                                  // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveDestroyUnits");
		return ptr;
	}

};


// Class Nimbus.MiniGameTakeoffState
// 0x00C0 (0x00E8 - 0x0028)
class UMiniGameTakeoffState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionFadeSoundManager*                    FadeSoundManager;                                         // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameCameraManager*                      CameraManager;                                            // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGamePlayerManager*                      PlayerManager;                                            // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameMiniMapManager*                     MiniMapManager;                                           // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameHUDManager*                         HUDManager;                                               // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTimeManager*                        TimeManager;                                              // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameScriptEventManager*                 ScriptEventManager;                                       // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                PlayerPlane;                                              // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMiniGameTakeoffSettings*                    Settings;                                                 // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00D8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MiniGameTakeoffState");
		return ptr;
	}


	void OnSuccessTakeoffDelegate__DelegateSignature(float ElapsedTime);
	void OnStartTakeoffPlayableDelegate__DelegateSignature();
	void OnStartTakeoffDelegate__DelegateSignature(bool bIsRetry);
	void OnSkipDelegate__DelegateSignature(float FadeOutDuration);
	void OnPlayerEndTakeoffHandler();
	void OnPlayerBeginCatapultTakeoffHandler();
	void OnFinishTakeoffDelegate__DelegateSignature();
	void OnFailTakeoffDelegate__DelegateSignature(EMissionStateMiniGameFailReason Reason);
	void OnFadeOutHandler(float Duration);
};


// Class Nimbus.MissionObjectiveMiniGame
// 0x0008 (0x0038 - 0x0030)
class UMissionObjectiveMiniGame : public UMissionObjectiveBase
{
public:
	class AMiniGamePhase*                              MiniGame;                                                 // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveMiniGame");
		return ptr;
	}

};


// Class Nimbus.MissionObjectiveVariable
// 0x0020 (0x0050 - 0x0030)
class UMissionObjectiveVariable : public UMissionObjectiveBase
{
public:
	TArray<struct FVariableCondition>                  VariableConditions;                                       // 0x0030(0x0010) (Edit, ZeroConstructor)
	bool                                               bSuccessForVariable;                                      // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UVariableComparator*                         VariableComparator;                                       // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveVariable");
		return ptr;
	}

};


// Class Nimbus.MissionObjectiveVariableTimeIsUp
// 0x0000 (0x0050 - 0x0050)
class UMissionObjectiveVariableTimeIsUp : public UMissionObjectiveVariable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveVariableTimeIsUp");
		return ptr;
	}

};


// Class Nimbus.MissionOverlapActorManager
// 0x0028 (0x0050 - 0x0028)
class UMissionOverlapActorManager : public UObject
{
public:
	class UNimbusLevelSleepManager*                    LevelSleepManager;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              VolumeActors;                                             // 0x0030(0x0010) (ZeroConstructor, Transient)
	TArray<unsigned char>                              VolumeOptions;                                            // 0x0040(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionOverlapActorManager");
		return ptr;
	}

};


// Class Nimbus.MissionPhase
// 0x03E0 (0x0748 - 0x0368)
class AMissionPhase : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnChangeRadarAreaState;                                   // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeImpactAreaState;                                  // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeJammingAreaState;                                 // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeSearchLightState;                                 // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangePulloutLineState;                                 // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeRestrictedAltitudeState;                          // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeWayPointState;                                    // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAddMissionScore;                                        // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTimeIsUp;                                               // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AVolume*                                     TakeoffVolume;                                            // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVolume*                                     NavyTakeoffVolume;                                        // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     PhaseName;                                                // 0x0408(0x0010) (Edit, ZeroConstructor)
	int                                                PhaseNo;                                                  // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSaveCheckPointEnabledEasy;                               // 0x041C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSaveCheckPointEnabledNormal;                             // 0x041D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSaveCheckPointEnabledHard;                               // 0x041E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSaveCheckPointEnabledAce;                                // 0x041F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0420(0x0010) MISSED OFFSET
	TArray<class UMissionObjectiveBase*>               Objectives;                                               // 0x0430(0x0010) (Edit, ExportObject, ZeroConstructor)
	bool                                               bCheckTimeCondition;                                      // 0x0440(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0441(0x0001) MISSED OFFSET
	bool                                               bFailedByTime;                                            // 0x0442(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xD];                                       // 0x0443(0x000D) MISSED OFFSET
	class AMiniGamePhase*                              MiniGame;                                                 // 0x0450(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACombatZone*                                 CombatZoneOverride;                                       // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x38];                                      // 0x0460(0x0038) MISSED OFFSET
	class UTexture2D*                                  PhaseEnlargedMiniMapBackgroundTexture;                    // 0x0498(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  PhaseBattleMiniMapBackgroundTexture;                      // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AVolume*                                     CurrentTakeoffVolume;                                     // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeLimit;                                                // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    PhaseStartEvent;                                          // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseRestartEvent;                                        // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseCompleteEvent;                                       // 0x04D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              PhaseStartNotificationDelay;                              // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	struct FMiniGameLevelName                          AirMiniGameLevelNames;                                    // 0x04F0(0x00B0) (Edit)
	struct FMiniGameLevelName                          NavyMiniGameLevelNames;                                   // 0x05A0(0x00B0) (Edit)
	class UTexture2D*                                  AirEnlargedMinimapBackgroundImage;                        // 0x0650(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirMinimapBackgroundImage;                                // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  NavyEnlargedMinimapBackgroundImage;                       // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  NavyMinimapBackgroundImage;                               // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x22];                                      // 0x0670(0x0022) MISSED OFFSET
	bool                                               bContinueLastPhaseTime;                                   // 0x0692(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTelePlayerAtPhaseStart;                                  // 0x0693(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	class AActor*                                      PlayerStartMarker;                                        // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverwriteInputDelayPhaseStart;                            // 0x06A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverwriteInputDelayPhaseRestart;                          // 0x06A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EPhaseStartNotificationType                        PhaseStartNotificationType;                               // 0x06A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPhaseBeginFadeType                                PhaseBeginFadeType;                                       // 0x06A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x6];                                       // 0x06AA(0x0006) MISSED OFFSET
	class UNimbusLevelSleepManager*                    LevelSleepManager;                                        // 0x06B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class ULevel*>                              CurrentMiniGameLevels;                                    // 0x06B8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData09[0x50];                                      // 0x06C8(0x0050) UNKNOWN PROPERTY: SetProperty Nimbus.MissionPhase.AllMiniGameLevels
	class UMissionOverlapActorManager*                 PhaseOverlapVolumeManager;                                // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionOverlapActorManager*                 MiniGameOverlapVolumeManager;                             // 0x0720(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x20];                                      // 0x0728(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionPhase");
		return ptr;
	}


	void StartMiniGame();
	bool ShouldShowNavyMiniGameLevels();
	void OnTimeIsUp__DelegateSignature();
	void OnSkipMiniGamePhaseHandler(float FadeOutDuration);
	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
	void OnPreStartMiniGamePhaseHandler(bool bIsRetry);
	void OnChangeWayPointState__DelegateSignature(bool bReached, class ASystemObjectWayPointMarker* WayPointMarker);
	void OnChangeSearchLightState__DelegateSignature(bool bInside);
	void OnChangeRestrictedAltitudeState__DelegateSignature(bool bOver);
	void OnChangeRadarAreaState__DelegateSignature(bool bInside);
	void OnChangePulloutLineState__DelegateSignature(bool bBeyond);
	void OnChangeJammingAreaState__DelegateSignature(bool bInside);
	void OnChangeImpactAreaState__DelegateSignature(bool bInside);
	void OnAddMissionScore__DelegateSignature(int CurrentMissionScore, int ObjectiveMissionScore, bool bAchieved);
	EPhaseStatus GetStatus();
	float GetMissionPhaseTimeLeft();
	float GetElapsedMissionPhaseTime();
	void ForceUpdateStatus(EPhaseStatus NewStatus);
	void CompleteMiniGame();
};


// Class Nimbus.MissionPhaseState
// 0x0040 (0x0068 - 0x0028)
class UMissionPhaseState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionPhaseState");
		return ptr;
	}


	void OnSuccessPhaseDelegate__DelegateSignature(class AMissionPhase* MissionPhase);
	void OnStartPhaseDelegate__DelegateSignature(class AMissionPhase* MissionPhase, bool bRestart);
	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
	void OnFailPhaseDelegate__DelegateSignature(class AMissionPhase* MissionPhase, EMissionStatePhaseFailReason Reason);
};


// Class Nimbus.MissionReplayChapterManager
// 0x0020 (0x0048 - 0x0028)
class UMissionReplayChapterManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionReplayChapterManager");
		return ptr;
	}

};


// Class Nimbus.MissionReplayState
// 0x0048 (0x0070 - 0x0028)
class UMissionReplayState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0028(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionReplayState");
		return ptr;
	}

};


// Class Nimbus.MissionResultData
// 0x0050 (0x0078 - 0x0028)
class UMissionResultData : public UObject
{
public:
	struct FRecordReplayEventData                      EventData;                                                // 0x0028(0x0050)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionResultData");
		return ptr;
	}

};


// Class Nimbus.MissionResupplyWidget
// 0x0190 (0x0670 - 0x04E0)
class UMissionResupplyWidget : public UMissionBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x190];                                     // 0x04E0(0x0190) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionResupplyWidget");
		return ptr;
	}

};


// Class Nimbus.MissionSaveGame
// 0x0028 (0x0050 - 0x0028)
class UMissionSaveGame : public UObject
{
public:
	TArray<struct FCheckPointUnit>                     Units;                                                    // 0x0028(0x0010) (ZeroConstructor)
	TArray<struct FCheckPointGameObject>               GameObjects;                                              // 0x0038(0x0010) (ZeroConstructor)
	class UMissionVariables*                           MissionVariables;                                         // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionSaveGame");
		return ptr;
	}

};


// Class Nimbus.MissionSetupFrameManager
// 0x0030 (0x0058 - 0x0028)
class UMissionSetupFrameManager : public UObject
{
public:
	class UNimbusPauseManager*                         PauseManager;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0038(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionSetupFrameManager");
		return ptr;
	}


	void OnPostGarbageCollectHandler();
};


// Class Nimbus.MissionDelayState
// 0x0000 (0x0040 - 0x0040)
class UMissionDelayState : public UMissionDelayStateBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDelayState");
		return ptr;
	}

};


// Class Nimbus.MissionStateManager
// 0x0098 (0x00C0 - 0x0028)
class UMissionStateManager : public UObject
{
public:
	class UMissionSetupFrameManager*                   SetupFrameManager;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionTransitionStateFactory*              TransitionStateFactory;                                   // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMissionStateBase*>                   MissionStateStack;                                        // 0x0038(0x0010) (ZeroConstructor, Transient)
	TArray<class UMissionStateBase*>                   RequestedMissionStateQueue;                               // 0x0048(0x0010) (ZeroConstructor, Transient)
	TArray<class UMissionStateBase*>                   InterruptMissionStateQueue;                               // 0x0058(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0068(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionStateManager");
		return ptr;
	}

};


// Class Nimbus.MissionSuccessWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMissionSuccessWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionSuccessWidget");
		return ptr;
	}

};


// Class Nimbus.MissionObjectiveIsTargetAlive
// 0x0010 (0x0040 - 0x0030)
class UMissionObjectiveIsTargetAlive : public UMissionObjectiveBase
{
public:
	bool                                               bShouldBeAlive;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class AGameObject*                                 Target;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionObjectiveIsTargetAlive");
		return ptr;
	}

};


// Class Nimbus.MissionTransitionState
// 0x0000 (0x0030 - 0x0030)
class UMissionTransitionState : public UMissionTransitionStateBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionTransitionState");
		return ptr;
	}

};


// Class Nimbus.MissionTransitionStateFactory
// 0x0008 (0x0030 - 0x0028)
class UMissionTransitionStateFactory : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionTransitionStateFactory");
		return ptr;
	}

};


// Class Nimbus.UIManagerActor
// 0x0CF8 (0x1060 - 0x0368)
class AUIManagerActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0368(0x0010) MISSED OFFSET
	struct FMenuParameters                             MenuParameters;                                           // 0x0378(0x0020) (Edit, BlueprintVisible)
	float                                              VRDistanceFromCameraOffset;                               // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsUIManagarActorBoot;                                     // 0x039C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	struct FTextHidingParameters                       TextHidingParameters;                                     // 0x03A0(0x0074) (Edit, BlueprintVisible)
	struct FImageHidingParameters                      ImageHidingParameters;                                    // 0x0414(0x002C) (Edit, BlueprintVisible)
	float                                              DelayTimeAfterTextHidingEnded;                            // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FHangarColorParameters                      HangarColorParameters;                                    // 0x0444(0x02F0) (Edit, BlueprintVisible)
	struct FMultiplayerTextColorParameters             MultiplayerColorParameters;                               // 0x0734(0x00C0) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07F4(0x0004) MISSED OFFSET
	TArray<struct FLinearColor>                        PingConditionColorParameters;                             // 0x07F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLinearColor>                        PingConditionGlowParameters;                              // 0x0808(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      DialogWidgetClass;                                        // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ScrollableDialogWidgetClass;                              // 0x0820(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EULADialogWidgetClass;                                    // 0x0828(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRDialogWidgetClass;                                      // 0x0830(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      KeyAssignDialogWidgetClass;                               // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GuideWidgetClass;                                         // 0x0840(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FrontWindowWidgetClass;                                   // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FrontScreenWidgetClass;                                   // 0x0850(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FrontScreenFilterWidgetClass;                             // 0x0858(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MovieWidgetClass;                                         // 0x0860(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FullscreenMovieWidgetClass;                               // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiSessionCommonWidgetClass;                            // 0x0870(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiSimpleVoiceChatWidgetClass;                          // 0x0878(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuForegroundWidgetClass;                                // 0x0880(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuBackgroundWidgetClass;                                // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuBackgroundWidgetClass;                           // 0x0890(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AircraftTreeBackgroundWidgetClass;                        // 0x0898(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuIndexWidgetClass;                                     // 0x08A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuVerticalBarWidgetClass;                               // 0x08A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MenuLeftVerticalBarWidgetClass;                           // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BootWidgetClass;                                          // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CopyrightWidgetClass;                                     // 0x08C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MainTitleWidgetClass;                                     // 0x08C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SetupMenuControlsWidgetClass;                             // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SetupMenuVoiceWidgetClass;                                // 0x08D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SetupMenuTextWidgetClass;                                 // 0x08E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MainMenuWidgetClass;                                      // 0x08E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StaffCreditsWidgetClass;                                  // 0x08F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RewardMedalWidgetClass;                                   // 0x08F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RewardItemWidgetClass;                                    // 0x0900(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GenericLoadWidgetClass;                                   // 0x0908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarAircraftWidgetClass;                        // 0x0910(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignAircraftViewerWidgetClass;                        // 0x0918(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarWeaponWidgetClass;                          // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarWeaponViewerWidgetClass;                    // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarPartsWidgetClass;                           // 0x0930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarSkinWidgetClass;                            // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarEmblemWidgetClass;                          // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarEmblemSwitchWidgetClass;                    // 0x0948(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarReviewWidgetClass;                          // 0x0950(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHangarSortieWidgetClass;                          // 0x0958(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignAircraftTreeWidgetClass;                          // 0x0960(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarWidgetClass;                                   // 0x0968(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiplayAircraftViewerWidgetClass;                       // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarAircraftSetWidgetClass;                        // 0x0978(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarAircraftTreeWidgetClass;                       // 0x0980(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarRadioWidgetClass;                              // 0x0988(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarAircraftWidgetClass;                           // 0x0990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarWeaponWidgetClass;                             // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarPartsWidgetClass;                              // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarEmblemWidgetClass;                             // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarEmblemSwitchWidgetClass;                       // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarSkinWidgetClass;                               // 0x09B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarReviewWidgetClass;                             // 0x09C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarNameWidgetClass;                               // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiHangarSortieSelectWidgetClass;                       // 0x09D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMenuMainWidgetClass;                              // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMenuDifficultyWidgetClass;                        // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMvWidgetClass;                                    // 0x09E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMvNewsWidgetClass;                                // 0x09F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMissionTitleWidgetClass;                          // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignBriefingMvWidgetClass;                            // 0x0A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignBriefingMenuWidgetClass;                          // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMenuActionSelectWidgetClass;                      // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMissionLoadWidgetClass;                           // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignEdWidgetClass;                                    // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignDebriefingWidgetClass;                            // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignUnlockMenuWidgetClass;                            // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignMenuNextWidgetClass;                              // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignFreeMissionWidgetClass;                           // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignFreeMissionDifficultyWidgetClass;                 // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignFreeMissionNextWidgetClass;                       // 0x0A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignHudPauseWidgetClass;                              // 0x0A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CampaignRetryWidgetClass;                                 // 0x0A60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionFailWidgetClass;                                   // 0x0A68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionSuccessWidgetClass;                                // 0x0A70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionResupplyWidgetClass;                               // 0x0A78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuMainWidgetClass;                                 // 0x0A80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuStartWidgetClass;                                // 0x0A88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuQuickMatchWigetClass;                            // 0x0A90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuSessionWidgetClass;                              // 0x0A98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuSessionBrowserWidgetClass;                       // 0x0AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuSessionConfirmWidgetClass;                       // 0x0AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuCreateSessionWidgetClass;                        // 0x0AB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuLobbyWidgetClass;                                // 0x0AB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuLobbyInfoWidgetClass;                            // 0x0AC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuLobbyChatWidgetClass;                            // 0x0AC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMissionLoadWidgetClass;                              // 0x0AD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiMenuInvitationWidgetClass;                           // 0x0AD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiPauseWidgetClass;                                    // 0x0AE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiWinLoseTDWidgetClass;                                // 0x0AE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiWinLoseBRWidgetClass;                                // 0x0AF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiResultDetailsTDWidgetClass;                          // 0x0AF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiResultDetailsBRWidgetClass;                          // 0x0B00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiResultRewardWidgetClass;                             // 0x0B08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiRewardItemWidgetClass;                               // 0x0B10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiRewardMedalWidgetClass;                              // 0x0B18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MultiReviveWidgetClass;                                   // 0x0B20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRMenuMainWidgetClass;                                    // 0x0B28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRHmdWidgetClass;                                         // 0x0B30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRMainTitleWidgetClass;                                   // 0x0B38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRHangarWidgetClass;                                      // 0x0B40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRPrologueWidgetClass;                                    // 0x0B48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRDifficultyWidgetClass;                                  // 0x0B50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRMissionSelectWidgetClass;                               // 0x0B58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRBriefingWidgetClass;                                    // 0x0B60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRAircraftWidgetClass;                                    // 0x0B68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRWeaponWidgetClass;                                      // 0x0B70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRReviewWidgetClass;                                      // 0x0B78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRAircraftViewerWidgetClass;                              // 0x0B80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRHangarCockpitWidgetClass;                               // 0x0B88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRMissionLoadWidgetClass;                                 // 0x0B90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRDebriefingWidgetClass;                                  // 0x0B98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRUnlockWidgetClass;                                      // 0x0BA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VREdWidgetClass;                                          // 0x0BA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRWarningLookFrontWidgetClass;                            // 0x0BB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRHudPauseWidgetClass;                                    // 0x0BB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VRRetryWidgetClass;                                       // 0x0BC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMenuWidgetClass;                                    // 0x0BC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMenuCampaignWidgetClass;                            // 0x0BD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerCampaignRecordsWidgetClass;                         // 0x0BD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerCampaignMedalWidgetClass;                           // 0x0BE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerCampaignPilotDataWidgetClass;                       // 0x0BE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMenuVRWidgetClass;                                  // 0x0BF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerVRRecordsWidgetClass;                               // 0x0BF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerVRMedalWidgetClass;                                 // 0x0C00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerVRPilotDataWidgetClass;                             // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMenuMultiplayWidgetClass;                           // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMultiplayRecordsWidgetClass;                        // 0x0C18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMultiplayMedalWidgetClass;                          // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMenuGalleryWidgetClass;                             // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerSceneWidgetClass;                                   // 0x0C30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerMusicWidgetClass;                                   // 0x0C38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarReviewClass;                                  // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarAircraftClass;                                // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarWeaponClass;                                  // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarEmblemClass;                                  // 0x0C58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarEmblemSwitchClass;                            // 0x0C60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarSkinClass;                                    // 0x0C68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarNicknameClass;                                // 0x0C70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ViewerHangarSelectClass;                                  // 0x0C78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsMenuWidgetClass;                                   // 0x0C80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsFlightSystemWidgetClass;                           // 0x0C88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsControllerWidgetClass;                             // 0x0C90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsKeyboardWidgetClass;                               // 0x0C98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsMouseWidgetClass;                                  // 0x0CA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsFlightStickWidgetClass;                            // 0x0CA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsScreenWidgetClass;                                 // 0x0CB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsGraphicsSteamWidgetClass;                          // 0x0CB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsSoundWidgetClass;                                  // 0x0CC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsLanguageWidgetClass;                               // 0x0CC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsGraphicsScreenWidgetClass;                         // 0x0CD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsGraphicsResolutionWidgetClass;                     // 0x0CD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsGraphicsAdvancedWidgetClass;                       // 0x0CE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReplayWidgetClass;                                        // 0x0CE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMenuWidgetClassDataAsset*                   MenuWidgetData;                                           // 0x0CF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGlowParameters                             GlowParameters;                                           // 0x0CF8(0x0020) (Edit, BlueprintVisible)
	struct FGlowParameters                             VRGlowParameters;                                         // 0x0D18(0x0020) (Edit, BlueprintVisible)
	struct FVector2D                                   HUDGlowBlendParameters;                                   // 0x0D38(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UUIFrontWindowWidget*                        FrontWindowWidget;                                        // 0x0D40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWidgetToTextureConverter*                   FrontWindowConverter;                                     // 0x0D48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUIFrontScreenWidget*                        FrontScreenWidget;                                        // 0x0D50(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUIFrontScreenFilterWidget*                  FrontScreenFilterWidget;                                  // 0x0D58(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFullscreenMovieWidget*                      FullscreenMovieWidget;                                    // 0x0D60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVRDialogWidget*                             VRDialogWidget;                                           // 0x0D68(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            VRDialog3DWidgetActor;                                    // 0x0D70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMultiSessionCommonWidget*                   MultiSessionCommonWidget;                                 // 0x0D78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MultiSessionCommon3DWidgetActor;                          // 0x0D80(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMultiSimpleVoiceChatWidget*                 MultiSimpleVoiceChatWidget;                               // 0x0D88(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x120];                                     // 0x0D90(0x0120) MISSED OFFSET
	class UMenuForegroundWidget*                       MenuForegroundWidget;                                     // 0x0EB0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuForeground3DWidgetActor;                              // 0x0EB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUserWidget*                                 MenuBackgroundWidget;                                     // 0x0EC0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 MultiMenuBackgroundWidget;                                // 0x0EC8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 AircraftTreeBackgroundWidget;                             // 0x0ED0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUIBackgroundActor*                          MenuBackground3DWidgetActor;                              // 0x0ED8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMenuVerticalBarWidget*                      MenuLeftVerticalBarWidget;                                // 0x0EE0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuLeftVerticalBar3DWidgetActor;                         // 0x0EE8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMenuVerticalBarWidget*                      MenuVerticalBarWidget;                                    // 0x0EF0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AUI3DWidgetActor*                            MenuVerticalBar3DWidgetActor;                             // 0x0EF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ALayerMenuManager*                           LayerMenuManager;                                         // 0x0F00(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UVRWarningLookFrontWidget*                   VRWarningLookWidget;                                      // 0x0F08(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UManaComponent*                              ManaComponent;                                            // 0x0F10(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0F18(0x0018) MISSED OFFSET
	TArray<class UMenuBaseWidget*>                     MenuWidgetArray;                                          // 0x0F30(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class AUI3DWidgetActor*>                    Menu3DWidgetActorArray;                                   // 0x0F40(0x0010) (ZeroConstructor, Transient)
	TMap<EMenuIDs, class UMenuBaseWidget*>             ReusableMenuWidgets;                                      // 0x0F50(0x0050) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0FA0(0x0018) MISSED OFFSET
	TArray<class AUI3DWidgetActor*>                    WidgetActorPool;                                          // 0x0FB8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x98];                                      // 0x0FC8(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIManagerActor");
		return ptr;
	}


	void RemoveAllMenus();
	void OpenMenu(EMenuIDs MenuID);
	void OnSetCurrentUIManagerActor();
	float OnEvaluateGlowPulsing();
	class AUIManagerActor* STATIC_GetCurrentUIManagerActor();
	void CloseMenuAndResumePlay();
};


// Class Nimbus.MissionDelayFadeOutState
// 0x0008 (0x0048 - 0x0040)
class UMissionDelayFadeOutState : public UMissionDelayStateBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionDelayFadeOutState");
		return ptr;
	}

};


// Class Nimbus.MissionVaraibleDelegateBinding
// 0x0010 (0x0038 - 0x0028)
class UMissionVaraibleDelegateBinding : public UDynamicBlueprintBinding
{
public:
	TArray<struct FBlueprintMissionVariableDelegateBinding> MissionVariableDelegateBindings;                          // 0x0028(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionVaraibleDelegateBinding");
		return ptr;
	}

};


// Class Nimbus.MissionVariables
// 0x0000 (0x0028 - 0x0028)
class UMissionVariables : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionVariables");
		return ptr;
	}

};


// Class Nimbus.MissionUIManagerActor
// 0x0050 (0x10B0 - 0x1060)
class AMissionUIManagerActor : public AUIManagerActor
{
public:
	class UClass*                                      ReplayCameraInfoWidgetClass;                              // 0x1060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ReplayPawnClass;                                          // 0x1068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ReplayPlayerControllerClass;                              // 0x1070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGlowParameters                             HUDGlowParameters;                                        // 0x1078(0x0020) (Edit, BlueprintVisible)
	class UClass*                                      TempLoadingScreenWidgetClass;                             // 0x1098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 TempLoadingScreenWidget;                                  // 0x10A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x10A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionUIManagerActor");
		return ptr;
	}


	void STATIC_StartDebug(EDebugModeState InDebugState);
	void SetupDebugUI(EDebugModeState InDebugState);
	void OnReplay();
	void OnMissionSuccess();
	void OnMissionResupply();
	void OnMissionFail();
};


// Class Nimbus.MonoEyeColorChangeComponent
// 0x0058 (0x0148 - 0x00F0)
class UMonoEyeColorChangeComponent : public UActorComponent
{
public:
	float                                              EmergencyDistanceMeter;                                   // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDontReturnNormal;                                        // 0x00F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	struct FLinearColor                                NormalColor;                                              // 0x00F8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EmergencyColor;                                           // 0x0108(0x0010) (Edit, IsPlainOldData)
	float                                              SearchInterval;                                           // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FString                                     TargetMeshName;                                           // 0x0120(0x0010) (Edit, ZeroConstructor)
	int                                                MaterialElementIndex;                                     // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    MonoEyeMaterial;                                          // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0140(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MonoEyeColorChangeComponent");
		return ptr;
	}


	void OnRestored();
};


// Class Nimbus.MovieSubtitleWidget
// 0x0128 (0x0330 - 0x0208)
class UMovieSubtitleWidget : public UUserWidget
{
public:
	struct FLinearColor                                DefaultSubtitleColor;                                     // 0x0208(0x0010) (Edit, IsPlainOldData)
	float                                              EmblemAnimationFPS;                                       // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5C];                                      // 0x021C(0x005C) MISSED OFFSET
	class APlayerController*                           PlayerController;                                         // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0280(0x0070) MISSED OFFSET
	class USubtitleWidget*                             InGameSubtitleWidget;                                     // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UTexture2D*>                          EmblemImageTextures;                                      // 0x02F8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0308(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MovieSubtitleWidget");
		return ptr;
	}


	void OnAnalyzeAnimationStart();
	void OnAnalyzeAnimationShow(bool bShow);
	void OnAnalyzeAnimationEnd();
};


// Class Nimbus.MovieWidget
// 0x0050 (0x0258 - 0x0208)
class UMovieWidget : public UUserWidget
{
public:
	class AUIManagerActor*                             UIManagerActor;                                           // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UManaComponent*                              ManaComponent;                                            // 0x0210(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgBackground;                                            // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgMovieImage;                                            // 0x0220(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0228(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MovieWidget");
		return ptr;
	}

};


// Class Nimbus.MultiMenuBaseWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMultiMenuBaseWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMenuBaseWidget");
		return ptr;
	}

};


// Class Nimbus.MultiCreateSessionWidget
// 0x0090 (0x0560 - 0x04D0)
class UMultiCreateSessionWidget : public UMultiMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x04D0(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiCreateSessionWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiDetailedPlayerListWidget
// 0x0100 (0x03F0 - 0x02F0)
class UMultiDetailedPlayerListWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x100];                                     // 0x02F0(0x0100) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiDetailedPlayerListWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarAircraftSetWidget
// 0x0220 (0x06F0 - 0x04D0)
class UMultiHangarAircraftSetWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x1D8];                                     // 0x04D0(0x01D8) MISSED OFFSET
	class UHangarStatus*                               HangarStatus;                                             // 0x06A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x06B0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarAircraftSetWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarAircraftTreeWidget
// 0x0000 (0x0860 - 0x0860)
class UMultiHangarAircraftTreeWidget : public UCommonAircraftTreeWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarAircraftTreeWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarAircraftWidget
// 0x0000 (0x0580 - 0x0580)
class UMultiHangarAircraftWidget : public UCommonHangarAircraftWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarAircraftWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarEmblemSwitchWidget
// 0x0000 (0x04E0 - 0x04E0)
class UMultiHangarEmblemSwitchWidget : public UCommonHangarEmblemSwitchWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarEmblemSwitchWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarNameWidget
// 0x0000 (0x05A0 - 0x05A0)
class UMultiHangarNameWidget : public UCommonHangarNameWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarNameWidget");
		return ptr;
	}

};


// Class Nimbus.MissionSupplyPhaseState
// 0x0050 (0x0078 - 0x0028)
class UMissionSupplyPhaseState : public UMissionStateBase
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MissionSupplyPhaseState");
		return ptr;
	}


	void OnSuccessPhaseDelegate__DelegateSignature(class AMissionPhase* MissionPhase, const struct FVector& RestartLocation, const struct FRotator& RestartRotation);
	void OnStartPhaseDelegate__DelegateSignature(class AMissionPhase* MissionPhase);
	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
};


// Class Nimbus.MultiHangarSkinWidget
// 0x0000 (0x0500 - 0x0500)
class UMultiHangarSkinWidget : public UCommonHangarSkinWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarSkinWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarWeaponWidget
// 0x0000 (0x0520 - 0x0520)
class UMultiHangarWeaponWidget : public UCommonHangarWeaponWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarWeaponWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMultiHangarWidget : public UCommonMenuHangarWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarWidget");
		return ptr;
	}

};


// Class Nimbus.MultiMissionMenuBaseWidget
// 0x0010 (0x04E0 - 0x04D0)
class UMultiMissionMenuBaseWidget : public UMenuBaseWidget
{
public:
	class ATeamDeathMatchGameMode*                     GameMode;                                                 // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMissionMenuBaseWidget");
		return ptr;
	}

};


// Class Nimbus.MultiIGCHudWidget
// 0x0020 (0x0500 - 0x04E0)
class UMultiIGCHudWidget : public UMultiMissionMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiIGCHudWidget");
		return ptr;
	}

};


// Class Nimbus.MultiIGCHudKillerWidget
// 0x0050 (0x0550 - 0x0500)
class UMultiIGCHudKillerWidget : public UMultiIGCHudWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0500(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiIGCHudKillerWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarReviewWidget
// 0x0000 (0x04F0 - 0x04F0)
class UMultiHangarReviewWidget : public UCommonHangarReviewWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarReviewWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarEmblemWidget
// 0x0000 (0x0550 - 0x0550)
class UMultiHangarEmblemWidget : public UCommonHangarEmblemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarEmblemWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarRadioWidget
// 0x0080 (0x0550 - 0x04D0)
class UMultiHangarRadioWidget : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x04D0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarRadioWidget");
		return ptr;
	}

};


// Class Nimbus.MultiHangarSortieSelectWidget
// 0x02C0 (0x0790 - 0x04D0)
class UMultiHangarSortieSelectWidget : public UMultiMenuBaseWidget
{
public:
	uint32_t                                           CountDownTime;                                            // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           CooldownSFXTime;                                          // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           HostMigrationActionLostTime;                              // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                NormalTextColor;                                          // 0x04DC(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                NormalTextGlow;                                           // 0x04EC(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                RedCostTextColor;                                         // 0x04FC(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                GrayTextColor;                                            // 0x050C(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                NoGlow;                                                   // 0x051C(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x264];                                     // 0x052C(0x0264) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarSortieSelectWidget");
		return ptr;
	}

};


// Class Nimbus.MultiIGCHudTDWidget
// 0x0180 (0x0680 - 0x0500)
class UMultiIGCHudTDWidget : public UMultiIGCHudWidget
{
public:
	unsigned char                                      UnknownData00[0x180];                                     // 0x0500(0x0180) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiIGCHudTDWidget");
		return ptr;
	}

};


// Class Nimbus.MultiInvitationTransitionWidget
// 0x0090 (0x0560 - 0x04D0)
class UMultiInvitationTransitionWidget : public UMultiMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x04D0(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiInvitationTransitionWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiLobbyInfoWidget
// 0x0020 (0x04F0 - 0x04D0)
class UMultiLobbyInfoWidget : public UMultiMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiLobbyInfoWidget");
		return ptr;
	}

};


// Class Nimbus.MultiLobbyWidget
// 0x0220 (0x0710 - 0x04F0)
class UMultiLobbyWidget : public UMultiLobbyInfoWidget
{
public:
	class UClass*                                      ChatItemClass;                                            // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   StatusImages;                                             // 0x04F8(0x0010) (Edit, ZeroConstructor)
	TArray<class UMaterialInstance*>                   ClientPingTimeImages;                                     // 0x0508(0x0010) (Edit, ZeroConstructor)
	TArray<uint32_t>                                   PingTimeUpperLimits;                                      // 0x0518(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLinearColor>                        StatusColor;                                              // 0x0528(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLinearColor>                        StatusGlow;                                               // 0x0538(0x0010) (Edit, ZeroConstructor)
	float                                              TimeBeforeNextChat;                                       // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     ChatMessagePadding;                                       // 0x054C(0x0010) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	TArray<class UMaterialInstance*>                   VoiceChatImages;                                          // 0x0560(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0570(0x0070) MISSED OFFSET
	class UTextBlock*                                  SystemMessageTemplate;                                    // 0x05E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UserMessageTemplate;                                      // 0x05E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x88];                                      // 0x05F0(0x0088) MISSED OFFSET
	class UClass*                                      SteamPlayerNameIDMapClass;                                // 0x0678(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x90];                                      // 0x0680(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiLobbyWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiMenuMainWidget
// 0x0010 (0x04E0 - 0x04D0)
class UMultiMenuMainWidget : public UMultiMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMenuMainWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiMenuStartWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMultiMenuStartWidget : public UMultiMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMenuStartWidget");
		return ptr;
	}

};


// Class Nimbus.MapChangeTransitionDelayObject
// 0x0000 (0x0028 - 0x0028)
class UMapChangeTransitionDelayObject : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MapChangeTransitionDelayObject");
		return ptr;
	}

};


// Class Nimbus.MultiHangarPartsWidget
// 0x0000 (0x0510 - 0x0510)
class UMultiHangarPartsWidget : public UCommonHangarPartsWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiHangarPartsWidget");
		return ptr;
	}

};


// Class Nimbus.MultiCheckingPrivilegeMapChangeTransitionDelayObject
// 0x0008 (0x0030 - 0x0028)
class UMultiCheckingPrivilegeMapChangeTransitionDelayObject : public UMapChangeTransitionDelayObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiCheckingPrivilegeMapChangeTransitionDelayObject");
		return ptr;
	}

};


// Class Nimbus.MultiIGCHudMVPWidget
// 0x0060 (0x0560 - 0x0500)
class UMultiIGCHudMVPWidget : public UMultiIGCHudWidget
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0500(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiIGCHudMVPWidget");
		return ptr;
	}

};


// Class Nimbus.MultiLobbyChatWidget
// 0x0010 (0x04E0 - 0x04D0)
class UMultiLobbyChatWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiLobbyChatWidget");
		return ptr;
	}

};


// Class Nimbus.MultiMissionLoadWidget
// 0x0270 (0x0740 - 0x04D0)
class UMultiMissionLoadWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x270];                                     // 0x04D0(0x0270) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMissionLoadWidget");
		return ptr;
	}

};


// Class Nimbus.MultiMissionUIManagerActor
// 0x00D0 (0x1130 - 0x1060)
class AMultiMissionUIManagerActor : public AUIManagerActor
{
public:
	struct FGlowParameters                             HUDGlowParameters;                                        // 0x1060(0x0020) (Edit, BlueprintVisible)
	float                                              HudOpacityOnPause;                                        // 0x1080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x94];                                      // 0x1084(0x0094) MISSED OFFSET
	class UClass*                                      ErrorBackgroundWidgetClass;                               // 0x1118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 ErrorBackgroundWidget;                                    // 0x1120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x1128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiMissionUIManagerActor");
		return ptr;
	}

};


// Class Nimbus.MultiPauseWidget
// 0x02C0 (0x07A0 - 0x04E0)
class UMultiPauseWidget : public UMultiMissionMenuBaseWidget
{
public:
	struct FLinearColor                                HUDColor;                                                 // 0x04E0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                HUDGlowColor;                                             // 0x04F0(0x0010) (Edit, IsPlainOldData)
	class UClass*                                      EmblemListClass;                                          // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowAllRows;                                             // 0x0508(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x297];                                     // 0x0509(0x0297) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiPauseWidget");
		return ptr;
	}

};


// Class Nimbus.MultiplayAircraftViewerWidget
// 0x0000 (0x0620 - 0x0620)
class UMultiplayAircraftViewerWidget : public UCampaignAircraftViewerWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiplayAircraftViewerWidget");
		return ptr;
	}

};


// Class Nimbus.MultiIGCTargetPoint
// 0x0000 (0x0368 - 0x0368)
class AMultiIGCTargetPoint : public ATargetPoint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiIGCTargetPoint");
		return ptr;
	}


	void MultiIGCTest(EMultiplayerIGCType IGCType, int IGCIndex);
};


// Class Nimbus.MultiplayerDebugCameraController
// 0x0000 (0x0708 - 0x0708)
class AMultiplayerDebugCameraController : public ADebugCameraController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiplayerDebugCameraController");
		return ptr;
	}

};


// Class Nimbus.MultiplayerScoreCalculator
// 0x0000 (0x0028 - 0x0028)
class UMultiplayerScoreCalculator : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiplayerScoreCalculator");
		return ptr;
	}


	int CalculateShootScore(float DamagePercentage, int EnemyBasePoint, float CostDifferenceModifier, float PlacementModifier);
	int CalculateRankingXP(float PlayingTimePercentage, int Score, float PlayerNumberModifier);
	int CalculateMRP(int BaseMatchResultReward, int ScoreReward, int PerformanceReward, float PlayerNumberModifier, float CrashPenaltyModifier, float PartsBonus, float* OutMRPCoefficient, float* OutScoreCoefficient);
	int CalculateKillScore(int EnemyBasePoint, float CostDifferenceModifier, float PlacementModifier);
	int CalculateCrashScore(int CrashedPlaneBasePoint, float PlacementModifier, int CrashCount);
	int CalculateAssistScore(float DamagePercentage, int EnemyBasePoint);
};


// Class Nimbus.MultiPlayerStart
// 0x0008 (0x03A0 - 0x0398)
class AMultiPlayerStart : public APlayerStart
{
public:
	class AMultiIGCTargetPoint*                        MultiIGCTargetPoint;                                      // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiPlayerStart");
		return ptr;
	}

};


// Class Nimbus.MultiResultBaseWidget
// 0x0040 (0x0520 - 0x04E0)
class UMultiResultBaseWidget : public UMultiMissionMenuBaseWidget
{
public:
	class UWidgetAnimation*                            AnimationAtoBTransition;                                  // 0x04E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            AnimationBtoATransition;                                  // 0x04E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x04F0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiResultBaseWidget");
		return ptr;
	}


	void ChangeScreen();
};


// Class Nimbus.MultiResultDetailAWidget
// 0x0030 (0x0510 - 0x04E0)
class UMultiResultDetailAWidget : public UMultiMissionMenuBaseWidget
{
public:
	bool                                               bShowAllPlayers;                                          // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04E1(0x0003) MISSED OFFSET
	float                                              InactivePeriodAfterAnimationCompletion;                   // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x04E8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiResultDetailAWidget");
		return ptr;
	}

};


// Class Nimbus.MultiQuickMatchWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMultiQuickMatchWidget : public UMultiMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiQuickMatchWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiResultDetailBWidget
// 0x0020 (0x0500 - 0x04E0)
class UMultiResultDetailBWidget : public UMultiMissionMenuBaseWidget
{
public:
	bool                                               bShowAllPlayers;                                          // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1F];                                      // 0x04E1(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiResultDetailBWidget");
		return ptr;
	}

};


// Class Nimbus.MultiResultWinLoseWidget
// 0x00A0 (0x0580 - 0x04E0)
class UMultiResultWinLoseWidget : public UMultiMissionMenuBaseWidget
{
public:
	int                                                ScoreRollingSpeed;                                        // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScoreRollingTime;                                      // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04E8(0x0008) MISSED OFFSET
	class UWidgetAnimation*                            AnimationResult;                                          // 0x04F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            AnimationMVP;                                             // 0x04F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            AnimationNextScreen;                                      // 0x0500(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bShowAllPlayers;                                          // 0x0508(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0509(0x0003) MISSED OFFSET
	float                                              InactivePeriodAfterAnimationCompletion;                   // 0x050C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x70];                                      // 0x0510(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiResultWinLoseWidget");
		return ptr;
	}


	void ProceedToNextAnimationPhase();
};


// Class Nimbus.MultiReviveWidget
// 0x0200 (0x06E0 - 0x04E0)
class UMultiReviveWidget : public UMultiMissionMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x04E0(0x0018) MISSED OFFSET
	class UClass*                                      EmblemListClass;                                          // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RepairDurationInSeconds;                                  // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceSortieDurationInSeconds;                             // 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AdditionalRepairDurationInSeconds;                        // 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UWidgetAnimation*                            FullRingAnimation;                                        // 0x0510(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                HUDColor;                                                 // 0x0518(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                HUDGlowColor;                                             // 0x0528(0x0010) (Edit, IsPlainOldData)
	bool                                               bShowAllRows;                                             // 0x0538(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1A7];                                     // 0x0539(0x01A7) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiReviveWidget");
		return ptr;
	}


	void OnReparCompleteAnimationFinished();
};


// Class Nimbus.MultiRewardItemWidget
// 0x0030 (0x0510 - 0x04E0)
class UMultiRewardItemWidget : public UMultiMissionMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04E0(0x0020) MISSED OFFSET
	float                                              MinTimeLeftToShowNextButtonSeconds;                       // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0504(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiRewardItemWidget");
		return ptr;
	}

};


// Class Nimbus.MultiSessionCommonWidget
// 0x04A0 (0x0790 - 0x02F0)
class UMultiSessionCommonWidget : public UUIBaseWidget
{
public:
	TArray<class UMaterialInstance*>                   VoiceChatImages;                                          // 0x02F0(0x0010) (Edit, ZeroConstructor)
	float                                              MinVCLightUpTime;                                         // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HostMigrationDialogAdditionalDisplayTime;                 // 0x0304(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x318];                                     // 0x0308(0x0318) MISSED OFFSET
	class UPopUpWidget*                                HostMigrationPopup;                                       // 0x0620(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  HostMigrationCountdown;                                   // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            HostMigrationCountdownAnimation;                          // 0x0630(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMultiSimpleVoiceChatWidget*                 SimpleVoiceChatPanel;                                     // 0x0638(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMultiDetailedPlayerListWidget*              MultiDetailedPlayerListWidget;                            // 0x0640(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x148];                                     // 0x0648(0x0148) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSessionCommonWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiSessionConfirmWidget
// 0x0000 (0x04D0 - 0x04D0)
class UMultiSessionConfirmWidget : public UMultiMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSessionConfirmWidget");
		return ptr;
	}


	void OnSelectAcceptButton(bool bAccepted);
	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiSessionResultWidget
// 0x00B0 (0x0580 - 0x04D0)
class UMultiSessionResultWidget : public UMultiMenuBaseWidget
{
public:
	struct FLinearColor                                NormalColor;                                              // 0x04D0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                HighlightColor;                                           // 0x04E0(0x0010) (Edit, IsPlainOldData)
	TArray<class UMaterialInstance*>                   AntennaImages;                                            // 0x04F0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x80];                                      // 0x0500(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSessionResultWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiSessionWidget
// 0x0080 (0x0550 - 0x04D0)
class UMultiSessionWidget : public UMultiMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x04D0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSessionWidget");
		return ptr;
	}


	void OnDialogItemAccepted(const struct FDialogData& DialogData);
};


// Class Nimbus.MultiSimpleVoiceChatWidget
// 0x0220 (0x0450 - 0x0230)
class UMultiSimpleVoiceChatWidget : public UNimbusUserWidget
{
public:
	class UMaterialInstance*                           MaterialInstances_InGame[0x8];                            // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           MaterialInstances_OutGame[0x8];                           // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorMenu;                                                // 0x02B0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorInGame;                                              // 0x02C0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorMissileAlert;                                        // 0x02D0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorLoading;                                             // 0x02E0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                GlowMenu;                                                 // 0x02F0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                GlowInGame;                                               // 0x0300(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                GlowMissileAlert;                                         // 0x0310(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                GlowLoading;                                              // 0x0320(0x0010) (Edit, IsPlainOldData)
	float                                              BaseOpacity_InGame;                                       // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseOpacity_OutGame;                                      // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OpacityLowered;                                           // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinLightupTime;                                           // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x110];                                     // 0x0340(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSimpleVoiceChatWidget");
		return ptr;
	}


	void OnHUDEnabled();
	void OnHUDDisabled();
};


// Class Nimbus.MultiStatsTestWidget
// 0x0120 (0x0328 - 0x0208)
class UMultiStatsTestWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x120];                                     // 0x0208(0x0120) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiStatsTestWidget");
		return ptr;
	}

};


// Class Nimbus.MultiSteamIDViewerWidget
// 0x00D0 (0x0300 - 0x0230)
class UMultiSteamIDViewerWidget : public UNimbusUserWidget
{
public:
	TArray<struct FLinearColor>                        NameSteamIDColors;                                        // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0240(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiSteamIDViewerWidget");
		return ptr;
	}

};


// Class Nimbus.NetworkDummyController
// 0x0000 (0x03D0 - 0x03D0)
class ANetworkDummyController : public AController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NetworkDummyController");
		return ptr;
	}

};


// Class Nimbus.MusicMapDotsActor
// 0x0098 (0x0400 - 0x0368)
class AMusicMapDotsActor : public AActor
{
public:
	int                                                UpdateInterval;                                           // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                X_Size;                                                   // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Y_Size;                                                   // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              X_Length;                                                 // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Y_Length;                                                 // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpectrumVal;                                              // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxDSP;                                                   // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CamTargetDepth;                                           // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CamTargetHeight;                                          // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CamTargetWidth;                                           // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LookPitch;                                                // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LookDistance;                                             // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraFov;                                                // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DotsDegRee;                                               // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             MusicDotPositions;                                        // 0x03A0(0x0010) (ZeroConstructor)
	TArray<float>                                      MusicDotOldHeights;                                       // 0x03B0(0x0010) (ZeroConstructor)
	TArray<class UMaterialBillboardComponent*>         MusicDotBillboards;                                       // 0x03C0(0x0010) (ExportObject, ZeroConstructor)
	class UClass*                                      BillboardDot;                                             // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x03D8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MusicMapDotsActor");
		return ptr;
	}

};


// Class Nimbus.NimbusAirShowGameMode
// 0x0000 (0x0468 - 0x0468)
class ANimbusAirShowGameMode : public ANimbusGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusAirShowGameMode");
		return ptr;
	}

};


// Class Nimbus.NimbusAssetLoader
// 0x0308 (0x0330 - 0x0028)
class UNimbusAssetLoader : public UObject
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0028(0x00D0) MISSED OFFSET
	class UNimbusTextureManager*                       TextureManager;                                           // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	TMap<struct FString, class UObject*>               HangarObjectCache;                                        // 0x0110(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xD0];                                      // 0x0160(0x00D0) MISSED OFFSET
	TMap<class UNimbusBundleDataAsset*, unsigned char> ResidentAssets;                                           // 0x0230(0x0050) (ZeroConstructor, Transient)
	TArray<struct FNimbusAssetLoaderRequestLoadInfo>   RequestLoadInfoBuffer;                                    // 0x0280(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0xA0];                                      // 0x0290(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusAssetLoader");
		return ptr;
	}


	void OnPostWorldCleanupHandler(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnPostGarbageCollectHandler();
};


// Class Nimbus.NimbusBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UNimbusBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusBlueprintLibrary");
		return ptr;
	}


	void STATIC_WaitSpecialActionEnd(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAIPlane* AIPlane);
	void STATIC_WaitImpactCameraCompletion(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	float STATIC_UUToMeter(float Value);
	float STATIC_UUpsToMps(float Value);
	float STATIC_UUpsToKmph(float Value);
	void STATIC_UpdateMaterialAnimation(class USkeletalMeshComponent* SkeletalMeshComp, TArray<int> MaterialIndexArray, TArray<struct FName> ParamNames, TArray<float> ParamValues);
	void STATIC_UpdateBGM(class UAkAudioEvent* BGMUpdateEvent, class UObject* WorldContextObject);
	void STATIC_ToggleVisibilityForEngineer(class USceneComponent* Target, bool bPropagateToChildren);
	void STATIC_TestStopNimbusMatinee(class AMatineeActor* MatineeActor);
	void STATIC_TestPlayNimbusMatinee(class AMatineeActor* MatineeActor);
	void STATIC_TerminateNimbusMatinee(class AMatineeActor* MatineeActor);
	void STATIC_SwitchRadar(EMiniMapType MiniMapType);
	void STATIC_StopRailgunAiming(class UObject* WorldContextObject, class URailgunControliComponent* InRailgunControliComponent);
	void STATIC_StopNimbusCameraShakeAll(class UObject* WorldContextObject);
	void STATIC_StopNimbusCameraShake(class UObject* WorldContextObject, ENimbusCameraShakeType InType);
	void STATIC_StopImpactCamera(class UObject* WorldContextObject);
	void STATIC_StopBGMImmediately(class UObject* WorldContextObject);
	void STATIC_StopBGM(class UObject* WorldContextObject, class UAkAudioEvent* OverrideBGMStopEvent);
	void STATIC_StereoStartFadingBackground(class UObject* WorldContextObject, bool bFadeIn, float Duration);
	void STATIC_StereoRemoveWidgetFromViewport(class UUserWidget* InWidget);
	void STATIC_StereoAddWidgetToViewport(class UUserWidget* InWidget, int ZOrder, bool bInEnableBg);
	void STATIC_StartRemainingDistance(class UObject* WorldContextObject, class AActor* ApproachTarget, TArray<class AGameObject*> ApproachGameObjects, float GoalRadiusMeter);
	class AActor* STATIC_StartRailgunAiming(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class URailgunControliComponent* InRailgunControliComponent, class AGameObject* InTarget, class UClass* RailgunTargetClass);
	void STATIC_StartMissionPhase(const struct FString& Arg, EMissionPhaseProceedStatus* OutputBranch);
	void STATIC_StartMagneticAnomalyDetectorByClassBP(class UObject* WorldContextObject, class UClass* MADComponentClassBP);
	void STATIC_StartMagneticAnomalyDetector(class UObject* WorldContextObject, bool bDebugDisplay, float SearchDistance, float SearchDownwardAngle, float MaxSearchRadius, class UCurveFloat* SearchDistanceRange, class UCurveFloat* ObservationRange, EMADObservationOption ObservationOption, EMADObservationWaveDirectionOption ObservationWaveDirectionOption, float MaxVibrationScale, class UCurveFloat* WaveNumRange, class UCurveFloat* WaveOffsetRange, class UCurveFloat* WaveMinRatioRange, class UCurveFloat* WaveMaxRatioRange, class UCurveFloat* WaveMaxIntervalRange, class UCurveFloat* WaveMaxTimeRange, EMADObservationWaveReferenceOption WaveScaleReference, EMADObservationWaveReferenceOption WaveNumReference, EMADObservationWaveReferenceOption WaveOffsetReference, EMADObservationWaveReferenceOption WaveMinReference, EMADObservationWaveReferenceOption WaveMaxReference, bool bSearchUnderMode);
	void STATIC_StartDisplayTimer(float TotalTime, bool bIsEmergency, const struct FName& TriggerEventWhenEnd);
	class AWeaponBase* STATIC_SpawnExplosionWeapon(class AGameObject* OwnerGameObject, class UClass* WeaponClass, const struct FVector& SpawnLocation);
	void STATIC_SetVisibilityForEngineer(class USceneComponent* Target, bool bNewVisibility, bool bPropagateToChildren);
	void STATIC_SetNearClipDistance(float NewDistance);
	void STATIC_SetComponentTickEnabledForEngineer(class UActorComponent* Target, bool bEnabled);
	void STATIC_SetActorHiddenInGameForEngineerToArray(TArray<class AActor*> Target, bool bNewHidden);
	void STATIC_SetActorHiddenInGameForEngineer(class AActor* Target, bool bNewHidden);
	void STATIC_SaveAndUseIGCCamera(class AMatineeActor* MatineeActor);
	void STATIC_ResetTutorialMessage();
	void STATIC_ResetParticlesCall(class UParticleSystemComponent* ParticleSystem, bool bEmptyInstances);
	void STATIC_ResetNearClipDistance();
	void STATIC_ReplaceTextureReference(class UTexture* OriginalTexture, class UTexture* NewTexture);
	struct FVector2D STATIC_Project(const struct FVector& Pos, const struct FMatrix& ViewProjMtx, const struct FVector2D& ViewSize);
	void STATIC_PostEvent2D(class UAkAudioEvent* akevent);
	void STATIC_PlayRadioText(class APlayerController* InPlayerController, class UTexture2D* InComWindowImage, const struct FString& InSpeakerName, const struct FString& InMessage, bool bHasWarning, const struct FSlateColor& InSpeakerColor, const struct FSlateColor& InMessageColor);
	void STATIC_PlayNimbusMatinee(class AMatineeActor* MatineeActor);
	void STATIC_PlayNimbusCameraShake_DistanceLocation(class UObject* WorldContextObject, ENimbusCameraShakeType InType, const struct FVector& InLocation, class UCurveFloat* OverrideDistanceScaleCurve, class UCurveFloat* OverrideFovScaleCurve);
	void STATIC_PlayNimbusCameraShake(class UObject* WorldContextObject, ENimbusCameraShakeType InType, float InDistanceMeter);
	bool STATIC_PlayImpactCamera(class AActor* FocusObject1, class AActor* FocusObject2, EImpactCameraPlayCategory InPlayCategory, const struct FName& CameraName, bool bInAutoEnd, bool bEnemyDestruction);
	void STATIC_PlayBGM(class UAkAudioEvent* BGMPlayEvent, class UAkAudioEvent* BGMStopEvent, class UObject* WorldContextObject);
	void STATIC_PingPositionOnRadar(class APlayerController* InPlayerController, const struct FVector& PingPosition, ENimbusPingType InPingType);
	void STATIC_PingObjectsOnRadar(class APlayerController* InPlayerController, TArray<class AGameObject*> ObjectsToPing, ENimbusPingType InPingType, bool ShowContainerName);
	void STATIC_PingObjectOnRadar(class APlayerController* InPlayerController, class AGameObject* ObjectToPing, ENimbusPingType InPingType, bool ShowContainerName);
	void STATIC_OverridePostProcessSettingForIGCCockpitView(class ACameraActor* InCameraActor);
	void STATIC_OverridePostProcessMaterialBlendWeightForIGC(class ACameraActor* InCameraActor, float BlendWeight);
	void STATIC_NimbusUnLoadLevelInstance(class UObject* WorldContextObject, class ULevelStreamingKismet* UnloadLevel, bool* bOutSuccess);
	void STATIC_NimbusSetDrawTypeLocalToView(class USceneComponent* SceneComponent, bool bUseLTV, bool bForceUpdateTransform, bool* bOutLTVFlag);
	void STATIC_NimbusOpenLevel(class UObject* WorldContextObject, const struct FName& LevelName);
	class ULevelStreamingKismet* STATIC_NimbusLoadLevelInstance(class UObject* WorldContextObject, const struct FString& LevelName, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess);
	void STATIC_NimbusDrawLine(const struct FVector2D& PositionA, const struct FVector2D& PositionB, int Layer, const struct FLinearColor& Tint, bool bAntiAlias, struct FPaintContext* Context);
	void STATIC_NimbusDrawBox(const struct FVector2D& Position, const struct FVector2D& Size, class USlateBrushAsset* Brush, int Layer, const struct FLinearColor& Tint, struct FPaintContext* Context);
	float STATIC_MpsToUUps(float Value);
	float STATIC_MpsToKmph(float Value);
	float STATIC_MeterToUU(float Value);
	float STATIC_KmphToUUps(float Value);
	float STATIC_KmphToMps(float Value);
	bool STATIC_IsWithEditorOnlyData();
	bool STATIC_IsThisObjectInClouds(class AGameObject* GameObject);
	bool STATIC_IsReplaying();
	bool STATIC_IsPlaykillCameraWithImpactCamera(class UObject* WorldContextObject);
	bool STATIC_IsPlacedInIGCLevel(class AActor* Actor);
	bool STATIC_IsLastInputDeviceGamepad();
	bool STATIC_IsInHangar();
	bool STATIC_IsGamepadConnected();
	bool STATIC_IsDebugMode(bool bAllowTestBuild);
	bool STATIC_IsDebug();
	void STATIC_HideAllActorsForSceneCapture(class USceneCaptureComponent2D* CaptureComp, class AActor* ExceptActor);
	struct FString STATIC_GetRevision();
	class UApproachDistObservationComponent* STATIC_GetRemainingDistanceComponent(class UObject* WorldContextObject);
	class APlayerPlane* STATIC_GetPlayerPlane(class UObject* WorldContextObject, int PlayerIndex);
	class AGameObject* STATIC_GetPlayerKillObject(class UObject* WorldContextObject);
	float STATIC_GetNearestPointDistance(const struct FVector& LineSegmentA, const struct FVector& LineSegmentB, const struct FVector& CheckLocation);
	struct FVector STATIC_GetNearestPoint(const struct FVector& LineSegmentA, const struct FVector& LineSegmentB, const struct FVector& CheckLocation);
	bool STATIC_GetMissionClearFlag(class UObject* WorldContextObject);
	class UMagneticAnomalyDetectorComponent* STATIC_GetMADComponent(class UObject* WorldContextObject);
	EPlatforms STATIC_GetGamePlatform(class UObject* WorldContextObject);
	EGameDifficulty STATIC_GetGameDifficulty(class UObject* WorldContextObject);
	EOptionsDistanceUnits STATIC_GetDistanceUnit(class UObject* WorldContextObject);
	bool STATIC_GetCampaignClearFlag(class UObject* WorldContextObject);
	struct FString STATIC_GetBuildDate();
	float STATIC_GetAnimationSequenceLength(class UAnimSequenceBase* Sequence);
	class AActor* STATIC_GetActiveTrueSkySequenceActor(class UObject* WorldContextObject);
	class ANimbusPlayerCameraManager* STATIC_GetActiveNimbusCameraManager(class UObject* WorldContextObject);
	void STATIC_GetAcceptCancelConfigKeys(TArray<struct FKey>* OutAcceptKeys, TArray<struct FKey>* OutCancelKeys);
	class UIntComparator* STATIC_GenerateIntComparator(int Property, EComparatorType Type, int Value);
	class UCompositeComparator* STATIC_GenerateCompositeComparator(ELogicalType Type, class UVariableComparator* Child1, class UVariableComparator* Child2);
	class UBoolComparator* STATIC_GenerateBoolComparator(bool Property, bool IsEqual, bool Value);
	void STATIC_EndRemainingDistance(class UObject* WorldContextObject);
	void STATIC_EndMagneticAnomalyDetector(class UObject* WorldContextObject);
	void STATIC_EnableHMDBlackOverlay(bool bIsEnabled);
	void STATIC_DrawPredictedWeaponTrajectoryOnRadar(class UObject* WorldContextObject, class AGameObject* FiringObject, float Duration);
	void STATIC_DisplayTutorialMessage(const struct FString& TextId, float Duration);
	void STATIC_DisplayMissionUpdated();
	void STATIC_DisplayMissionStart();
	void STATIC_Deproject(const struct FVector2D& ScreenPos, const struct FMatrix& InvViewProjMtx, const struct FVector2D& ViewSize, struct FVector* OutRayOrigin, struct FVector* OutRayDir);
	float STATIC_ConvertEngineThrustToEngineSoundRTPC(float EngineThrust);
	void STATIC_ClearAllTimersAndLatentActionForObject(class UObject* WorldContextObject);
	void STATIC_CancelDisplayTimer();
	void STATIC_BindMissionPhaseEvents(class AActor* MissionPhaseActor, const struct FScriptDelegate& StartEvent, const struct FScriptDelegate& RetryEvent);
	void STATIC_BattleNavigationUnitList(TArray<class AUnit*> UnitsToPing, bool bForciblySWitchToBattleMap, int BattleNavigationID);
	void STATIC_BattleNavigationUnit(class AUnit* UnitToPing, bool bForciblySWitchToBattleMap, int BattleNavigationID);
	void STATIC_BattleNavigationList(TArray<class AAIGameObject*> AIObjectsToPing, bool bForciblySWitchToBattleMap, int BattleNavigationID);
	void STATIC_BattleNavigation(class AAIGameObject* AIObjectToPing, bool bForciblySWitchToBattleMap, int BattleNavigationID);
	void STATIC_AddMissionWarningMessage(const struct FString& Message);
	class UCompositeComparator* STATIC_AddComparatorIntoComposite(class UCompositeComparator* Composite, class UVariableComparator* Child);
	void STATIC_ActivateConditionActionEntry(class UObject* WorldContextObject, int EventID);
};


// Class Nimbus.NimbusBlueprintLibraryVR
// 0x0000 (0x0028 - 0x0028)
class UNimbusBlueprintLibraryVR : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusBlueprintLibraryVR");
		return ptr;
	}


	void STATIC_SubTitleAutoBind(class USubtitleWidget* SubtitleWidget, class ARadioManager* RadioManager, bool bBind);
	void STATIC_StopPlayingID(int in_playingID);
	void STATIC_StopPlayerPlaneVibrations(class APlayerPlane* PlayerPlane);
	void STATIC_StopPlayerPlaneSounds(class APlayerPlane* PlayerPlane);
	void STATIC_StopAllLoopingSound(class ANimbusHUD* NimbusHUD);
	void STATIC_StartFading(class UNimbusGameInstance* GameInstance, bool bIsFadingIn, float InDuration);
	void STATIC_ShowCanopyEffect(class APlayerPlane* PlayerPlane, bool bShouldShow, float DropletIntensityScalar, float RainIntensityScalar, float IceBlendScalar, float IceIntensityScalar);
	void STATIC_SetWorldBlackFade(bool IsClear);
	bool STATIC_SetVRFlatCaptureMode(bool bCaptureEnable);
	void STATIC_SetRainSpeedScalarParameterValue(class APlayerPlane* PlayerPlane, float Value);
	void STATIC_SetRainScalarParameterValue(class APlayerPlane* PlayerPlane, float Value);
	void STATIC_SetNimbusVFXComponentParam(int Index, float Value);
	void STATIC_SetNimbusStereoLayers(bool bEnable);
	void STATIC_SetNimbusStereoLayerCurve(float Distance, float curve0to1);
	void STATIC_SetNimbusDefaultGravityZ(float gravityZ, float* prevGravityZ);
	void STATIC_SetEnableHUDTestMode(bool Flag);
	void STATIC_SetDropletScalarParameterValue(class APlayerPlane* PlayerPlane, float Value);
	void STATIC_SetCurrentGraphicsSetteingsForDevelop(EGraphicsSettings Preset);
	void STATIC_SetAutoDeactive(class AGameObject* GameObject, bool Value);
	int STATIC_PostEventVR(const struct FString& EventName, class AActor* Actor);
	int STATIC_PostEventAtLocationVR(class UNimbusGameInstance* pGameInstance, const struct FString& EventName, const struct FVector& Location, const struct FRotator& Orientation);
	void STATIC_NimbusDelayGarbageCollection();
	bool STATIC_IsVRDLCOwned();
	void STATIC_IsSuperMode(bool* bSuper);
	bool STATIC_IsNimbusDialogOpen();
	bool STATIC_IsFreeFlight();
	bool STATIC_IsEnableNimbusOverlay();
	bool STATIC_IsEnableLocalToViewForCockpit(class APlayerPlane* PlayerPlane);
	bool STATIC_GetVRFlatCaptureMode();
	void STATIC_GetPhaseNoAndElapsedTime(bool* bValid, int* PhaseNo, float* PhaseElapsedTime);
	float STATIC_GetNoInputElapsedTime(bool* bValid);
	EMFDColorType STATIC_GetMFDColorType(class UNimbusUserWidget* Widget, class ANimbusHUD* nimbus_hud);
	class AActor* STATIC_GetHitActor(class APlayerPlane* PlayerPlane);
	class UMenuBaseWidget* STATIC_GetFocusedMenuWidget();
	EMenuIDs STATIC_GetFocusedMenuID();
	EPlayerSystemDamageType STATIC_GetEnvironmentDamageType(class APlayerPlane* PlayerPlane);
	void STATIC_GetDefaultCameraRelativeTransform(class APlayerPlane* PlayerPlane, struct FTransform* Transform);
	void STATIC_GetCurrentScene(bool* bMission, bool* bHangar, bool* bAirshow);
	void STATIC_GetConsoleVariable(const struct FString& consoleName, bool* bEnable, int* valueInt, float* valueFloat);
	bool STATIC_GetChildSceneComponents(class AActor* Actor, TArray<class USceneComponent*>* ComponentList);
	void STATIC_EnablePostEventVR(bool bEnable);
	void STATIC_EnableLocalToViewForCockpit(class APlayerPlane* PlayerPlane, bool bInEnabled);
	void STATIC_EnableIGCSkipModeVR(bool bSkip);
	void STATIC_DrawWidgetToTarget(class UTextureRenderTarget2D* Target, class UUserWidget* WidgetToRender, const struct FVector2D& DrawSize, bool UseGamma, TEnumAsByte<ETextureFilter> Filter, float DeltaTime);
	class UTextureRenderTarget2D* STATIC_CreateRenderTarget2DVR(class UObject* WorldContextObject, int Width, int Height, const struct FLinearColor& ClearColor);
	class UStaticMeshComponent* STATIC_CreateAndCopyStaticMeshForVR(class AActor* Target, class UStaticMeshComponent* Base);
	void STATIC_ClearStereoLayerBuffer();
	void STATIC_ClearMiniMapData(class UMiniMapLayerWidget* TargetMiniMap);
	void STATIC_ClearHUDMessage(class ANimbusHUD* NimbusHUD);
	void STATIC_CheckAndApplyVrRenderSetting();
};


// Class Nimbus.NimbusBundleDataAsset
// 0x0010 (0x0040 - 0x0030)
class UNimbusBundleDataAsset : public UDataAsset
{
public:
	TArray<class UObject*>                             Objects;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusBundleDataAsset");
		return ptr;
	}

};


// Class Nimbus.NimbusCachedWorldContainer
// 0x0020 (0x0048 - 0x0028)
class UNimbusCachedWorldContainer : public UObject
{
public:
	TArray<class UWorld*>                              CachedWorlds;                                             // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusCachedWorldContainer");
		return ptr;
	}


	void OnPostWorldCleanupHandler(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnPostGarbageCollectHandler();
};


// Class Nimbus.NimbusGCTestObject
// 0x0010 (0x0038 - 0x0028)
class UNimbusGCTestObject : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGCTestObject");
		return ptr;
	}

};


// Class Nimbus.NimbusCheatManager
// 0x0288 (0x0300 - 0x0078)
class UNimbusCheatManager : public UCheatManager
{
public:
	unsigned char                                      UnknownData00[0x288];                                     // 0x0078(0x0288) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusCheatManager");
		return ptr;
	}


	void ViewSelf();
	void ViewActor(const struct FName& ActorName);
	void UpdateDebugCondition(uint32_t ConditionId, bool IsValid);
	void UpdateConditionAction();
	void UnlockVRAircraftTree();
	void UnlockSceneViewer(int ID);
	void UnlockPilotData(int PilotDataID);
	void UnlockParts(int PartsID);
	void UnlockOnlineNicknameByID(int ID, int NewID);
	void UnlockNickname(int NicknameID);
	void UnlockMultiplayAircraftTree();
	void UnlockMedal(int MedalID);
	void UnlockFeatures();
	void UnlockEntry(int EntryId);
	void UnlockEmblem(int EmblemID);
	void UnlockDLC(const struct FString& DLCID);
	void UnlockAllWithMaxData();
	void UnlockAllSceneViewer();
	void UnlockAllPilotData();
	void UnlockAllParts();
	void UnlockAllNicknames();
	void UnlockAllMedals();
	void UnlockAllEmblems();
	void UnlockAllDLCs();
	void UnlockAllAircraftSkins();
	void UnlockAllAchievements();
	void UnlockAll();
	void UnlockAircraftTree();
	void UnlockAircraftSkin(int SkinID);
	void UnlockAircraft(const struct FString& PlaneStringID, int WeaponNo);
	void UnlockAchievement(const struct FString& AchievementID);
	void ToggleWeaponProcess();
	void ToggleWeaponMovingLocus();
	void ToggleWeaponDebugContainer();
	void ToggleWeaponCollision();
	void ToggleWeaponAxis();
	void ToggleWeaponAalysis();
	void ToggleVRTestMissionMenu();
	void ToggleVREquipGunTrackingParts();
	void ToggleUnlockLogOnScreen();
	void ToggleUnlockDLC();
	void ToggleUnitDebugContainer();
	void ToggleUnitAalysis();
	void ToggleUI();
	void ToggleTimeOutTravelMap();
	void ToggleTimeOutTransitionMap();
	void ToggleSurroundPursietTargetPoint();
	void ToggleSoundViewerDebugInfo();
	void ToggleSoundEventRequestInfo();
	void ToggleSoundEventInfo();
	void ToggleSonobuoyProgressIcon();
	void ToggleSkipScenarioRadio();
	void ToggleSkipPlayByPlayRadio();
	void ToggleSkipChatterRadio();
	void ToggleShowUnitRange();
	void ToggleShowSoundPauseInfo();
	void ToggleShowSoundManagerInfo();
	void ToggleShowRibbonCollectionInfo();
	void ToggleShowReplayInfo();
	void ToggleShowRaycastTest();
	void ToggleShowRadioPortrait();
	void ToggleShowPlayerLandingAOA();
	void ToggleShowPlayerEnvCollisionLines();
	void ToggleShowPlayByPlayRadioConditionLog();
	void ToggleShowPauseInfo();
	void ToggleShowMissionObjectInfoUsually();
	void ToggleShowMissionHitchInfo();
	void ToggleShowMissionDebugInfo();
	void ToggleShowMiniGameRadioGuideCourse();
	void ToggleShowMapChangeInfo();
	void ToggleShowLevelDebugInfo();
	void ToggleShowAssetLoaderInfo();
	void ToggleShowAnalyzedNodes();
	void ToggleShortMapChangeTimeOut();
	void ToggleScenarioRadioEnabled();
	void ToggleSaveReplayFile();
	void ToggleSaveLoadUIIgnore();
	void ToggleSaveLoadSingleThread();
	void ToggleSaveLoadSimulatedMode();
	void ToggleReplayRecording();
	void ToggleRecordRadioReport();
	void ToggleRadioSkipEnabled();
	void ToggleRadioSilentGroup(int GroupIndex);
	void ToggleRadioRequeueingWaitGroupInfo();
	void ToggleRadioPotentializeAllTables();
	void ToggleRadioPlayLimitOneTime();
	void ToggleRadioForceOfflineEnabled();
	void ToggleRadioEnemyTensionEnabled(int Tension);
	void ToggleRadioDebugInfo();
	void ToggleRadioContinuousPlay();
	void ToggleRadioAlwaysPlay();
	void ToggleRadioAllyTensionEnabled(int Tension);
	void TogglePlayerWeaponUnlimited();
	void TogglePlayerWeaponQuickReload();
	void TogglePlayerUpgradePartsInfo();
	void TogglePlayerInvincible();
	void TogglePlayerDebugInfo();
	void TogglePlayerAttackTargetsException();
	void TogglePlayByPlayRadioEnabled();
	void TogglePassSoundDebugInfo();
	void ToggleParticleSystemDebugInfo();
	void ToggleOutOfCockpitWarning();
	void ToggleObjectAxis();
	void ToggleNimbusUserDebugMode();
	void ToggleMultiplayerDebugMode();
	void ToggleMissileCloudWavering();
	void ToggleMiniGameAllDemoCamera();
	void ToggleLogStreamingTexture();
	void ToggleInvisibleFade();
	void ToggleGameObjectProcess();
	void ToggleForceSkipMiniGame();
	void ToggleForceSkipIGC();
	void ToggleForcePlayerPlaneInSand();
	void ToggleForcePlayerPlaneInJamming();
	void ToggleForcePlayerPlaneInCloud();
	void ToggleEquipUpgardParts(int PartsID);
	void ToggleDisableVibration();
	void ToggleDisableUnlimitedGunDueToDifficulty();
	void ToggleDisableReplayPassCameraMultiTargets();
	void ToggleDisableReplayPassCameraMissile();
	void ToggleDisableReplayPassCameraHorizon();
	void ToggleDisableRadioRequeueingWait();
	void ToggleDisableRadioQueueLimitLife();
	void ToggleDisableMiniGameSkip();
	void ToggleDisableEventTrigger();
	void ToggleDisableDrawVapor();
	void ToggleDisableDrawMissileTrail();
	void ToggleDisabledPreloadTransitionMap();
	void ToggleDebugShowBreakConstraint();
	void ToggleDebugObjectMapRadioSearchEnemyRange();
	void ToggleDebugObjectMap();
	void ToggleDebugMenu();
	void ToggleDebugLog();
	void ToggleDebugDisableWeaponDisabling();
	void ToggleDebugContainer();
	void ToggleDebugCanopyState();
	void ToggleDamageStateDebugMode();
	void ToggleCooldownDebugDisplay();
	void ToggleCollectLoadedTexturePhase();
	void ToggleCollectLoadedTextureIGC();
	void ToggleCollectLoadedTexture();
	void ToggleChatterRadioEnabled();
	void ToggleBuildInformationPeak();
	void ToggleBuildInformation();
	void ToggleBGMEventRequestInfo();
	void ToggleAutoDumpReplayDataBuffer();
	void ToggleApplyMultiplayerParametersToCampaign();
	void ToggleAllExtraMeshVisibility();
	void ToggleAircraftLoadingTest();
	void ToggleAIPlaneDebugInfo();
	void ToggleAIDebugInfo();
	void ToggleAheadLoadIGCPlane();
	void ThreeTimesFaster(float Multiplier);
	void TeleportToTarget();
	void SuperF5(bool bEnable);
	void StopImpactCamera();
	void StartConditions();
	void SoftReset();
	void SNL_UnlockLocalSkin(int SkinID);
	void SNL_UnlockLocalNickname(int NicknameID);
	void SNL_UnlockLocalMedal(int MedalID);
	void SNL_UnlockLocalEmblem(int EmblemID);
	void SNL_UnlockAndEquipLocalNickname(int NicknameID);
	void SNL_UnlockAllNicknames();
	void SNL_ToggleForceHostMigrationFailure();
	void SNL_TestProgressionDataCheat();
	void SNL_TestMRPDataTableCheat();
	void SNL_TestMissionScoreDataTableCheat();
	void SNL_TestMedalEvaluationResultCheat();
	void SNL_TestGameSettingsCheat();
	void SNL_TestGameRulesCheat();
	void SNL_TestGameResultCheat();
	void SNL_TestCheatWeaponDamage(bool bEnableCheating);
	void SNL_TestCheatPlaneLocation(int ClientIndex);
	void SNL_TestCheatPlaneHealth();
	void SNL_TestCheatPlaneAmmoCount();
	void SNL_TestCheatOnCheatingProperty();
	void SNL_TestCheatLocalPlaneLocation();
	void SNL_TeleportToHost();
	void SNL_TeleportToAirCurrentVolume(int AirCurrentVolumeIndex);
	void SNL_SimulateNetworkLibInitFailure(bool bEnabled);
	void SNL_ShowVCMemberList(bool bShow);
	void SNL_ShowSimpleVoiceChatPanel(bool bShow);
	void SNL_SetVoiceChatMinLightUpTime(float TimeInSeconds);
	void SNL_SetRoomMMRValue(int NewMMRValue);
	void SNL_SetRetrySaveAutoKickDurationInSeconds(float TimeInSeconds);
	void SNL_SetRedBootShowTime(int Seconds);
	void SNL_SetRedBootKickedPlayersThreshold(int Players);
	void SNL_SetRedBootExpiryTime(int Seconds);
	void SNL_SetPreventRejoinSessionTime(int Seconds);
	void SNL_SetPlaneModel(int PlaneID, int WeaponNo);
	void SNL_SetMinimumRequiredBandwidthBPS(float MinimumRequiredBandwidthBPS);
	void SNL_SetLocalRankExp(uint32_t RankExperience);
	void SNL_SetLocalRank(unsigned char RankID);
	void SNL_SetLocalPlayerScore(int Score);
	void SNL_SetLocalOnlineCreditValue(int MMRP);
	void SNL_SetLocalMMRValue(int MMRValue);
	void SNL_SetFlightFormation(int FlightFormationType);
	void SNL_SetErrorDelayDuration(float DurationInSeconds);
	void SNL_SetCustomFlightFormation(const struct FString& FlightFormation);
	void SNL_SetAutoKickThreshold(int Seconds);
	void SNL_SendTestMessage();
	void SNL_SendAircraftSetsToAllClients();
	void SNL_ResetLocalMMRValue();
	void SNL_KillLocalPlayer();
	void SNL_KickPlayerByID(int KickedClientID);
	void SNL_KickManagerDebugToggle();
	void SNL_InitializeNetworkEmulator();
	void SNL_ForceCompleteMission(int SecondToWait);
	void SNL_ForceAbortMission(bool bShouldAbortMission);
	void SNL_EnableUAVLaserPE(bool bEnabled);
	void SNL_EnableSessionTimeoutDetection(bool bEnabled);
	void SNL_EnableResetPlayerControllerOnPause(bool bEnabled);
	void SNL_EnableProgressionDebug(bool bEnabled);
	void SNL_EnablePlaneSync(bool bEnablePlaneSync);
	void SNL_EnableNetworkLOD(bool bEnabled);
	void SNL_EnableNetworkGodMode(bool bEnabled);
	void SNL_EnableFlightEngine(bool bEnableFlightEngine);
	void SNL_EnableDebugFakeSession(bool bEnabled);
	void SNL_EnableAutoWeapon(bool bMGEnabled, bool bMainWeaponEnabled, bool bUseSpecialWeapon);
	void SNL_EnableAirCurrentReplication(bool bEnabled);
	void SNL_DisplayStats(bool bEnabled);
	void SNL_DisplayLocalAircraftCost();
	void SNL_DisplayDebugBox(bool bEnabled);
	void SNL_DisplayAllHUDElements();
	bool SNL_CheckOnlineDataStatus();
	void SNL_CheckOnlineCreditValue();
	void SNL_CheckLocalRankInfo();
	void SNL_CheckLocalPlayerScore();
	void SNL_CheckLocalMMRValue();
	void SNL_CameraSideTargetFollow(int ClientIndex);
	void SNL_CameraSideSetOffset(float Right, float Forward, float Up);
	void SNL_CameraSide(int ClientIndex);
	void SNL_CameraMovePlayer(int ClientIndex);
	void SNL_CameraFree();
	void SNL_CameraFollowClient(int ClientIndex);
	void SNL_CameraDisable();
	void SNL_ArrangeWindows();
	void SkipToPhase(int PhaseNo);
	void SimulateSaveDataMinSizeKB(int KiloByteSize);
	void SimulateSaveDataMinSize(int ByteSize);
	void SimulateMissileDeath();
	void SimulateCorruptedSaveDataInMemory(bool bIsCorruptedSave);
	void ShutdownAutomationTest();
	void ShowWeatherParticleLocation();
	void ShowTunnelInfo();
	void ShowSnapPositionDebug();
	void ShowSearchLightDebug();
	void ShowImpactCameraInfo();
	void ShowDialogStack();
	void ShowAIASSeaExplosionDebug();
	void SetWeaponDebugContainerDisplayMode(int Mode);
	void SetVRWidgetDistance(float DistanceOffset);
	void SetVRWeaponInfoYaw(float Yaw);
	void SetVRWeaponInfoScale(float X, float Y);
	void SetVRWeaponInfoPosition(float X, float Y, float Z);
	void SetVRWeaponInfoPitch(float Pitch);
	void SetVRVelocityVectorScale(float Scale);
	void SetVRTextInfoYaw(float Yaw);
	void SetVRTextInfoScale(float X, float Y);
	void SetVRTextInfoPosition(float X, float Y, float Z);
	void SetVRTextInfoPitch(float Pitch);
	void SetVRSubtitlePosition(float X, float Y);
	void SetVRRadarYaw(float Yaw);
	void SetVRRadarScale(float X, float Y);
	void SetVRRadarPosition(float X, float Y, float Z);
	void SetVRRadarPitch(float Pitch);
	void SetVRPlaneInfoYaw(float Yaw);
	void SetVRPlaneInfoScale(float X, float Y);
	void SetVRPlaneInfoPosition(float X, float Y, float Z);
	void SetVRPlaneInfoPitch(float Pitch);
	void SetVRPitchMeterScale(float X, float Y);
	void SetVRPitchMeterDepth(float Depth);
	void SetVROverlayGlow(float R, float G, float B, float A);
	void SetVROverlayCurve(float Distance, float curveParam);
	void SetVRHangarCameraRotationYaw(float Yaw);
	void SetVRHangarCameraRotationRoll(float Roll);
	void SetVRHangarCameraRotationPitch(float Pitch);
	void SetVRHangarCameraRotation(const struct FRotator& Rotation);
	void SetVRHangarCameraPositionZ(float Z);
	void SetVRHangarCameraPositionY(float Y);
	void SetVRHangarCameraPositionX(float X);
	void SetVRHangarCameraPosition(const struct FVector& Position);
	void SetVRCompassScale(float X, float Y);
	void SetVRCompassHeight(float Depth);
	void SetVRCompassDepth(float Depth);
	void SetVRCampaignMRP(uint64_t NewMRP);
	void SetVRCameraPositionZ(float Z);
	void SetVRCameraPositionY(float Y);
	void SetVRCameraPositionX(float X);
	void SetVoiceLanguage(int Languange);
	void SetVibrationScalar(float Scalar);
	void SetTrueSkyEnabled(bool Value);
	void SetTransitionAsyncLoadingTimeLimit(float TimeLimit);
	void SetTeleportDistance(float DistanceUU);
	void SetTargetSelectionWideMode(bool bWideMode);
	void SetTargetSelectionAngleFirst(bool bAngleFirst);
	void SetSubtitleLanguage(int Languange);
	void SetStreamingInstallProgress(int Percentage, int Seconds);
	void SetStreamingInstallChunk(int FinishedChunkNo);
	void SetStereoDepthDirectly(float Depth);
	void SetStereoDepth(float Depth);
	void SetSearchEnemyRangeDisplayMode(int DisplayMode);
	void SetSaveLoadThreadMinDelay(float Duration);
	void SetSaveLoadSimulatedStatus(int StatusValue);
	void SetSaveLoadDialogMinDelay(float Duration);
	void SetReplaySlowMotionSpeed(float Speed);
	void SetReplayFastForwardSpeed(float Speed);
	void SetPlayerTickRate(float Rate);
	void SetPlayerSpecialWeapon(int Number);
	void SetPlayerSkin(int Number);
	void SetPlayerMissilePowerCoefficient(float Coefficient);
	void SetPlayerJamming(bool bIsJamming);
	void SetPlayerEmblem(int EmblemID);
	void SetPlayerControlType(int Type);
	void SetPlayerBrakingForce(float Force);
	void SetNimbusUserState(int StateIndex);
	void SetMissionSetupPauseFrame(int frame);
	void SetMissionPhaseTimeLeft(float TimeLeftSeconds);
	void SetLoadingTips(int TipsID);
	void SetLanguage(int Languange);
	void SetIsInJammingArea(bool bIsJamming);
	void SetIdleIconWaitingTime(float Seconds);
	void SetHudMADParameter(float Peak, float Scale, float WaveNum, float WaveOffset);
	void SetHUDDistortionScale(float NewScale);
	void SetHealthPercentage(float Percentage);
	void SetGamma(int OptionsValue);
	void SetForceSandDensity(float Density);
	void SetForceEquipUpgradeParts(const struct FString& PartsIDs);
	void SetForceEmblemID(int EmblemID);
	void SetForceCloudDensity(float Density);
	void SetDistanceUnit(int UnitType);
	void SetDisableRadioGroupFilter(const struct FString& RadioGroups);
	void SetDebugObjectMapMode(int Mode);
	void SetDebugContainerVisibilityDistance(float DistanceUU);
	void SetDebugContainerDisplayMode(int DisplayMode);
	void SetDebugAssistAngleForRemotePlayer(float AssistAngle);
	void SetCollectLoadedTextureIncreaseInMipLevel(int InMipLevel);
	void SetCollectLoadedTextureIGCNo(int InIGCNo);
	void SetCampaignMRP(uint64_t NewMRP);
	void SetAllAttackTargetsException(bool bEnable);
	void SetAIWeaponFilter(const struct FString& WeaponLabel);
	void SetAIPlaneTickRateDuringMission(float Rate);
	void SetAIPlaneTickRate(float Rate);
	void SelectRandomMenuItem();
	void SelectNextMenuItem();
	void SaveSigmaData();
	void SaveAllGameData();
	void ReturnToBoot();
	void RestockEquipment();
	void ResetUserSetting();
	void ResetSigmaSaveData();
	void ResetRadioPlayCounts();
	void ResetFPSTracking();
	void ResetAutomaticSpeakerIDs();
	void ResetAllSaveData();
	void ResetAchievements();
	void ReplayRandomCameraCondition(int Mode);
	void ReloadSoundBank();
	void ReloadLevel();
	void RadioSuspendToMiniGame();
	void RadioResumeFromMiniGame();
	void QueryUIStatus();
	void QueryStorageInfo();
	void PrintVRSubtitlePosition();
	void PrintConditionActionMap();
	void PlaySavedReplay(const struct FString& ReplayName);
	void PlayRadioTable(const struct FString& RadioTableName);
	void PlayImpactCamera(const struct FName& CameraName);
	void PlayIGC(int IGCNumber);
	void PlayerStruckByLightning();
	void PingTargettedEnemyInRadar();
	void PingHelpInRadar();
	void OpenDialog(int DialogID);
	void NearClip_NotTouch();
	void NearClip_AlwaysReset();
	void MoreFireworksPlease(int Count);
	void MissionTimeLeftToExpire(float RemainingTimeInSeconds);
	void LockVRAircraftTree();
	void LockMultiplayAircraftTree();
	void LockAircraftTree();
	void LockAircraft(const struct FString& PlaneStringID);
	void LoadSigmaSaveData();
	void LoadAllSaveData();
	void KillTGT();
	void KillTarget();
	void KillSelf();
	void KillNonTGT();
	void KillNextTarget();
	void KillLockedOnTargets();
	void KillCameraChangeMode();
	void KillAllies();
	void ItsOver9000(float Multiplier, bool bEnable);
	void IsConnectedToOnlineService(bool bForceCheck);
	void IsConnectedToNetwork(bool bForceCheck);
	void ImpactCameraForcedPlayCameraName(const struct FName& CameraName);
	void ImpactCameraForcedEmergencyMode();
	void ImpactCameraChangeMode();
	void ImpactCameraChangeDebugSphereMode();
	void HideStaticMesh(const struct FString& FilterStr, bool bHide);
	void HideDebugInfo(bool bHide);
	void GundariumUpgrade(bool bEnable);
	void GodAI(bool bEnable);
	void GetOnlineConnectivity(bool bForceCheck);
	void ForceStaticMeshLOD(const struct FString& FilterStr, int InForcedLOD);
	void ForceMultiplayerSortie();
	void ForceMapChange(const struct FString& MapName);
	void ForceFailSave(bool bFail);
	void ForceDisableHUD(bool bDisable);
	void FindDevelopersAssetReference();
	void FillVRCampaignMissionRecords(const struct FString& DifficultyLevel, EMissionRank ClearRank, uint32_t Score, float TimeSec, bool bSkipLastMission);
	void FillMissionRecord(const struct FString& MissionStringID, const struct FString& DifficultyLevel, EMissionRank ClearRank, uint32_t Score, float TimeSec);
	void FillCampaignMissionRecords(const struct FString& DifficultyLevel, EMissionRank ClearRank, uint32_t Score, float TimeSec, bool bSkipLastMission);
	void FadeOut(float Duration);
	void FadeIn(float Duration);
	void EULAFlow(bool bEnabled);
	void EnableWeaponExtrapolation(bool bEnable);
	void EnableWeaponDebugPath(bool bEnable);
	void EnableNimbusUserManagerListeningEvent();
	void EnableNewTargetSelectionAlgorithm(bool bEnable);
	void EnableMiniMapRadar(bool bEnable);
	void EnableHudMAD(bool bEnable);
	void EnableHUDDistortion();
	void DumpReplayDataBuffer();
	void DumpMemoryStats();
	void DumpDependencedPackages(const struct FString& ObjectName);
	void DisableSound();
	void DisableReplayExit(bool Disabled);
	void DisableProhibitionBlock(const struct FString& BlockType, bool bShouldDisable);
	void DisablePlayerAirCurrent();
	void DisableHUDDistortion();
	void DisableAIAttack(bool bDisable);
	void DeleteSigmaSaveFile();
	void DeleteDebugSaveFile();
	void DeleteAllSaveFiles();
	void DebugShowTLSLength();
	void DebugShowRainLineParameter();
	void DebugShowPathPointTimeout();
	void DebugShowImageEffectParameter();
	void DebugShowAirCurrent();
	void DebugDummyAirCurrent();
	void DataviewerSortieRandomAircraft(int Mode);
	void DataviewerSortieMPAircraft(int PlaneID, int Sortie, int StageNum, int SWPNo, int KillSWP, uint32_t Aircraft, uint32_t UAV, uint32_t ground, uint32_t Vessel, uint64_t FlightTimeMS, uint64_t FlightDistanceMeters, int Score, int MRP, bool bIsBestPlayer, int PerformanceEvaluID, int PerformanceEvaluIDCount, int Mode);
	void DataviewerSortieAircraft(int PlaneID, int Sortie, int MissionID, int SWPNo, int KillSWP, uint32_t Aircraft, uint32_t UAV, uint32_t ground, uint32_t Vessel, uint64_t FlightTimeMS, uint64_t FlightDistanceMeters, int Score, int MRP, int Mode);
	void CreateGarbageUObject(int ObjectSize, int ObjectNum);
	void CrashDump();
	void CompleteVRCampaign();
	void CompleteSaveLoadSimulatedTask();
	void CompleteMission();
	void CompleteCampaign();
	void CloseDialog(int DialogID);
	void CloseAllDialogs();
	void ClearPhase();
	void CheatPause(int ChannelIndex);
	void ChangeMenuByIndex(int MenuIDIndex);
	void ChangeMenu(const struct FString& MenuIDStringName);
	void CameraShakeIntermittent();
	void BowToSlimForAmmo(int WeaponNumber, int WeaponCount);
	void BowToPPForAmmo();
	void AUTOM_StopRecording();
	void AUTOM_StopPlaying();
	void AUTOM_StopLoopingPlayback();
	void AUTOM_StartRecording(const struct FString& InSaveFileName);
	void AUTOM_SetSaveFileType(bool bBinary);
	void AUTOM_SetPaused(bool bIsPaused);
	void AUTOM_SetLoopCountLimit(int LoopCountLimist);
	void AUTOM_SetDisplayLog(bool bShow);
	void AUTOM_SaveToFile(const struct FString& InSaveFileName);
	void AUTOM_PlayFilesInSubFolderRandom(const struct FString& SubDirectoryName);
	void AUTOM_PlayFilesInSubFolder(const struct FString& SubDirectoryName);
	void AUTOM_PlaybackFileLoop(const struct FString& InLoadFileName);
	void AUTOM_PlaybackFile(const struct FString& InLoadFileName);
	void AUTOM_PlaybackCurrentLoop();
	void AUTOM_PlaybackCurrent();
	void AUTOM_PlayAllFilesRandom();
	void AUTOM_PlayAllFiles();
	void AUTOM_OutputLog();
	void AUTOM_MemReport(bool bFull);
	void AUTOM_ListPlaybackFiles();
	void ApplyDamageToPlayer(float DamageAmount);
	void AddFlightDistanceAndKillCount(EMissionCategory MissionCategory, uint32_t FlightDistance, uint32_t KillCount);
	void AddCompletedMission(int CompletedMission);
	void ActivateDebugMenuMode();
	void ActivateDebugCondition(uint32_t ConditionId);
	void ActivateAllConditionActionEntries();
};


// Class Nimbus.NimbusChildActorComponent
// 0x0000 (0x0320 - 0x0320)
class UNimbusChildActorComponent : public UChildActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusChildActorComponent");
		return ptr;
	}

};


// Class Nimbus.NimbusControllerVibration
// 0x06A0 (0x06C8 - 0x0028)
class UNimbusControllerVibration : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET
	class APlayerPlane*                                PlayerPlane;                                              // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	struct FControllerVibrationType                    ControllerVibrationTypes[0x2E];                           // 0x0060(0x0020) (Edit)
	float                                              AfterburnerVibrationFadeTimeSeconds;                      // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PSVibrationScalar;                                        // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              XBoxVibrationScalar;                                      // 0x0628(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PSGunFireVibrationInterval;                               // 0x062C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              XBoxGunFireVibrationInterval;                             // 0x0630(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EControllerVibrationSimulationMode                 ControllerVibrationSimulationMode;                        // 0x0634(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x93];                                      // 0x0635(0x0093) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusControllerVibration");
		return ptr;
	}


	void SetXBoxControllerVibrationScalar(float Scalar);
	void SetPSControllerVibrationScalar(float Scalar);
	void OnStopControllerVibration__DelegateSignature();
	void OnStartControllerVibration__DelegateSignature(float intensity, float Duration);
};


// Class Nimbus.NimbusActorManager
// 0x0128 (0x0150 - 0x0028)
class UNimbusActorManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UWorld*                                      World;                                                    // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AUnit*>                               CachedUnits;                                              // 0x0050(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedGameObjects;                                        // 0x0060(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedSpawnedGameObjects;                                 // 0x0070(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedUnidentifiedGameObjects;                            // 0x0080(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedWingmen;                                            // 0x0090(0x0010) (ZeroConstructor, Transient)
	TArray<class ASystemObjectLightning*>              CachedLightningObjects;                                   // 0x00A0(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedImportantAllies;                                    // 0x00B0(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         CachedNeedDetectionGameObjects;                           // 0x00C0(0x0010) (ZeroConstructor, Transient)
	TArray<class ANimbusTriggerBase*>                  CachedNimbusTriggerActors;                                // 0x00D0(0x0010) (ZeroConstructor, Transient)
	class AActor*                                      TrueSkyActor;                                             // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusObjectPool*                           WeaponPool;                                               // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<uint32_t, class AActor*>                      CrossLevelActorMap;                                       // 0x00F0(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0140(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusActorManager");
		return ptr;
	}

};


// Class Nimbus.NimbusDebugInfoLayerWidget
// 0x00F0 (0x02F8 - 0x0208)
class UNimbusDebugInfoLayerWidget : public UUserWidget
{
public:
	class UFont*                                       FontObject;                                               // 0x0208(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFont*                                       AIDebugFontObject;                                        // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DebugContainerIcon;                                       // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSlateFontInfo                              DebugFont;                                                // 0x0220(0x0058) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0278(0x0030) MISSED OFFSET
	class UClass*                                      TargetContainerWidgetClass;                               // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02B0(0x0008) MISSED OFFSET
	class AAIGameObject*                               PickedTarget;                                             // 0x02B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x38];                                      // 0x02C0(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusDebugInfoLayerWidget");
		return ptr;
	}


	void OnEnableHud();
	void OnDisableHud();
	void OnDetectedMissionHitch(const struct FMissionHitchInfo& InMissionHitchInfo);
};


// Class Nimbus.NimbusDebugMenuHUD
// 0x0108 (0x0470 - 0x0368)
class ANimbusDebugMenuHUD : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	class UFont*                                       FontObject;                                               // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UDebugMenuWidget*>                    DebugMenuStack;                                           // 0x0378(0x0010) (ZeroConstructor, Transient)
	TArray<class UDebugMenuWidget*>                    DebugMenu;                                                // 0x0388(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0xD8];                                      // 0x0398(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusDebugMenuHUD");
		return ptr;
	}

};


// Class Nimbus.NimbusDLCInformation
// 0x0128 (0x0150 - 0x0028)
class UNimbusDLCInformation : public UObject
{
public:
	class UDataTable*                                  DLCDataTable;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET
	struct FString                                     DLCBaseStringID;                                          // 0x0040(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x0050(0x00D0) MISSED OFFSET
	struct FScriptMulticastDelegate                    DLCsUpdatedDelegate;                                      // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0130(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusDLCInformation");
		return ptr;
	}


	bool IsDLCOwned(const struct FString& DLCID);
	void DLCsUpdatedDelegate__DelegateSignature();
};


// Class Nimbus.NimbusEventParser
// 0x02B0 (0x0618 - 0x0368)
class ANimbusEventParser : public AActor
{
public:
	unsigned char                                      UnknownData00[0x2B0];                                     // 0x0368(0x02B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusEventParser");
		return ptr;
	}


	void OnPreRestartPhaseEvent();
	void OnIGCEnableEvent(bool bEnabled);
	void MultiAbort__DelegateSignature();
};


// Class Nimbus.NimbusGameEngine
// 0x0000 (0x0E40 - 0x0E40)
class UNimbusGameEngine : public UGameEngine
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameEngine");
		return ptr;
	}

};


// Class Nimbus.NimbusGameInformation
// 0x0688 (0x06B0 - 0x0028)
class UNimbusGameInformation : public UObject
{
public:
	class UDataTable*                                  MissionDataTable;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PlaneDataTable;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  WeaponDataTable;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  EmblemDataTable;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MedalDataTable;                                           // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  NicknameDataTable;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  NicknameCategoryDataTable;                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PartsDataTable;                                           // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PartsGraphDataTable;                                      // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SkinDataTable;                                            // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SceneDataTable;                                           // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerRankingTable;                                  // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerMedalTable;                                    // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerPerformanceEvaluationDataTable;                // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerMedalCreditTable;                              // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerLoadingScreenTable;                            // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerInstantRadioTable;                             // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerInstantRadioCategoryTable;                     // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerLobbyChatTable;                                // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerLobbyChatCategoryTable;                        // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerKickDataTable;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerTimeLimitDataTable;                            // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerVictoryPointDataTable;                         // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MultiplayerAircraftRegulationTable;                       // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  GenericLoadingScreenTable;                                // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PilotDataDataTable;                                       // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AircraftViewerDataTable;                                  // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  VrAircraftViewerDataTable;                                // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AntiPlayerStealthDataTable;                               // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AntiAIStealthDataTable;                                   // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  CallsignDataTable;                                        // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  GuideImageDataTable;                                      // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  ViewerMusicDataTable;                                     // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  VRHangarWeaponPlacementDataTable;                         // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  StaffCreditsDataTable;                                    // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  OptionSoundDataTable;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  LocalizeTextIdDataTable;                                  // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x560];                                     // 0x0150(0x0560) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameInformation");
		return ptr;
	}


	int STATIC_PlaneStringIDToPlaneID(const struct FString& PlaneStringID);
	struct FString STATIC_PlaneIDToPlaneStringID(int PlaneID);
};


// Class Nimbus.NimbusGameInstanceTickObject
// 0x0010 (0x0038 - 0x0028)
class UNimbusGameInstanceTickObject : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameInstanceTickObject");
		return ptr;
	}

};


// Class Nimbus.NimbusGameInstance
// 0x06F0 (0x07E0 - 0x00F0)
class UNimbusGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0xF4];                                      // 0x00F0(0x00F4) MISSED OFFSET
	float                                              HMDOverlayCutoffPitch;                                    // 0x01E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET
	class UTextureRenderTarget2D*                      HUDWidgetRenderTexture;                                   // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      StereoUIRenderTexture;                                    // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  MenuDecoTexture;                                          // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseMenuDecoTexture;                                      // 0x0208(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class UTextureCube*                                SkyLightAboveCloudCubeMap;                                // 0x0210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UTextureCube*                                SkyLightBelowCloudCubeMap;                                // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusAssetLoader*                          AssetLoader;                                              // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusTextureManager*                       TextureManager;                                           // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSoftObjectPath                             ResidentAssetReference;                                   // 0x0230(0x0018) (Edit)
	struct FName                                       MainMenuMapName;                                          // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       BootMenuMapName;                                          // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CampaignMissionClearMapName;                              // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       TransitionMapName;                                        // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UNimbusStreamingInstallManager*              StreamingInstallManager;                                  // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      AIWingTipRibbonCollectionClass;                           // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissileRibbonCollectionClass;                             // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DebriefingRibbonCollectionClass;                          // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AIWingTipRibbonCollectionClassVR;                         // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissileRibbonCollectionClassVR;                           // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C8];                                     // 0x0298(0x01C8) MISSED OFFSET
	class UNimbusLoadingScreenManager*                 LoadingScreenManager;                                     // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UConditionActionManager*                     ConditionActionManager;                                   // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGameInstanceTickObject*               TickObject;                                               // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusMapChangeManager*                     MapChangeManager;                                         // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusFadeManager*                          FadeManager;                                              // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UNimbusSubLevelManager*                      SubLevelManager;                                          // 0x0488(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusPauseManager*                         PauseManager;                                             // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNimbusSoundReverbManager*                   SoundReverbManager;                                       // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNimbusGarbageCollectManager*                GarbageCollectManager;                                    // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNimbusSoundPauseManager*                    SoundPauseManager;                                        // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNimbusSystemUserPause*                      SystemUserPause;                                          // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNimbusMusicPlayer*                          MusicPlayer;                                              // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGameInformation*                      GameInformation;                                          // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UNimbusDLCInformation*                       DLCInformation;                                           // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMenuSequenceManager*                        MenuSequenseManager;                                      // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1F8];                                     // 0x04D8(0x01F8) MISSED OFFSET
	struct FScriptMulticastDelegate                    MapLoadedEvent;                                           // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UPhysicalMaterial*                           SeaMaterial;                                              // 0x06E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           GroundMaterial;                                           // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           ConcreteMaterial;                                         // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           GlassMaterial;                                            // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           IceMaterial;                                              // 0x0700(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           BossMaterial;                                             // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           MetalMaterial;                                            // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAkAudioBank*>                        SoundBanks;                                               // 0x0718(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0728(0x0018) MISSED OFFSET
	class UFont*                                       DebugFontObject;                                          // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0748(0x0050) MISSED OFFSET
	class UDebugLog*                                   DebugLog;                                                 // 0x0798(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  TempScreenshot;                                           // 0x07A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x07A8(0x0008) MISSED OFFSET
	class UEULAHelper*                                 EULAHelper;                                               // 0x07B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusSoundManager*                         SoundManager;                                             // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayDataManager*                    ReplayDataManager;                                        // 0x07C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDebugMissionHitchChecker*                   DebugMissionHitchChecker;                                 // 0x07C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x07D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameInstance");
		return ptr;
	}


	void SetShowWeaponsInHangar(bool bShouldShowWeaponsInHangar);
	void SetShowWeaponOnPlaneInHangar(bool bShouldShowWeaponOnPlaneInHangar);
	void SetShowPlaneInHangar(bool bShouldShowPlaneInHangar);
	void SetShowPilotInHangar(bool bShouldShowPilotInHangar);
	void SetShowHangar(bool bShouldShowHangar);
	void SetSelectedPlaneSkinNo(int SelectedPlaneSkinNo);
	void SetSelectedPlaneEmblemID(int SelectedPlaneEmblemID);
	void SetSelectedHangarCameraType(EHangarCameraType HangarCameraType);
	void SetPlaneAndSWP(int SelectedPlaneType, int SelectedPlaneSWP);
	void SetMissionID(int MissionID);
	void SetCurrentGameSaveSlot(EGameSaveSlot NewGameSaveSlot);
	bool STATIC_IsVRUIMode();
	bool STATIC_IsVRMode();
	bool STATIC_IsVRGameMode();
	bool STATIC_IsStereoMode();
	bool STATIC_IsShippingMode();
	bool GetShowWeaponsInHangar();
	bool GetShowWeaponOnPlaneInHangar();
	bool GetShowPlaneInHangar();
	bool GetShowPilotInHangar();
	bool GetShowHangar();
	int GetSelectedPlaneSWP();
	int GetSelectedPlaneSkinNo();
	int GetSelectedPlaneID();
	int GetSelectedPlaneEmblemID();
	EHangarCameraType GetSelectedHangarCameraType();
	struct FString GetPhysicalMaterialName(EPhysicalMaterialType MaterialType);
	int GetMissionID();
	EGameSaveSlot GetCurrentGameSaveSlot();
	bool AsyncSaveOnlineData();
	bool AsyncSaveGameplaySettings(EGameSaveSlot GameSaveSlot);
	bool AsyncSaveAccountSettings();
	bool AsyncLoadOnlineData();
	bool AsyncLoadGameplaySettings(EGameSaveSlot GameSaveSlot);
	bool AsyncLoadAccountSettings();
};


// Class Nimbus.NimbusConsole
// 0x0000 (0x0130 - 0x0130)
class UNimbusConsole : public UConsole
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusConsole");
		return ptr;
	}

};


// Class Nimbus.NimbusGameState
// 0x0000 (0x03C8 - 0x03C8)
class ANimbusGameState : public AGameState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameState");
		return ptr;
	}

};


// Class Nimbus.NimbusGameUserSettings
// 0x0030 (0x0058 - 0x0028)
class UNimbusGameUserSettings : public UBlueprintFunctionLibrary
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGameUserSettings");
		return ptr;
	}


	bool STATIC_IsShowPlayByPlayRadioConditionLog();
};


// Class Nimbus.NimbusGarbageCollectManager
// 0x0028 (0x0050 - 0x0028)
class UNimbusGarbageCollectManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusGarbageCollectManager");
		return ptr;
	}

};


// Class Nimbus.NimbusFadeManager
// 0x0080 (0x00A8 - 0x0028)
class UNimbusFadeManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET
	class UClass*                                      FadeWidget;                                               // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFadeWidget*                                 FadeWidgetObject;                                         // 0x0070(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusMapChangeManager*                     MapChangeManager;                                         // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusLoadingScreenManager*                 LoadingScreenManager;                                     // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0090(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusFadeManager");
		return ptr;
	}


	void OnStartFadingDelegate__DelegateSignature(float Duration);
	void OnPreLoadMap(const struct FString& MapName);
	void OnPostLoadMap(class UWorld* LoadedWorld);
	void OnLoadingScreenShowHandler();
	void OnLoadingScreenHideHandler();
	void OnFadeOutHandler(float Duration);
	void OnFadeInHandler(float Duration);
	void OnFadedOutHandler();
	void OnFadedInHandler();
	void OnFadedDelegate__DelegateSignature();
};


// Class Nimbus.NimbusHangarGameMode
// 0x0000 (0x0438 - 0x0438)
class ANimbusHangarGameMode : public AGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusHangarGameMode");
		return ptr;
	}

};


// Class Nimbus.NimbusHangarMeshManager
// 0x0428 (0x0790 - 0x0368)
class ANimbusHangarMeshManager : public AActor
{
public:
	bool                                               SubLevelProcessRunning;                                   // 0x0368(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCurrentShowHangarMesh;                                   // 0x0369(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x036A(0x0006) MISSED OFFSET
	class USkeletalMeshComponent*                      PlaneBodyMesh;                                            // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PlaneLandingGearMesh;                                     // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PlaneRefuelMesh;                                          // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             WeaponRootComponent;                                      // 0x0388(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Weapon1BaseComponent;                                     // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Weapon2BaseComponent;                                     // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Weapon3BaseComponent;                                     // 0x03A0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon1RackMesh;                                          // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon2RackMesh;                                          // 0x03B0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon3RackMesh;                                          // 0x03B8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon1Mesh;                                              // 0x03C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon2Mesh;                                              // 0x03C8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Weapon3Mesh;                                              // 0x03D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             VRWeaponRootComponent;                                    // 0x03D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	TArray<class USceneComponent*>                     VRWeaponBaseComponents;                                   // 0x03E0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst)
	TArray<class UStaticMeshComponent*>                VRWeaponRackMeshes;                                       // 0x03F0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst)
	TArray<class UStaticMeshComponent*>                VRWeaponMeshes;                                           // 0x0400(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst)
	class USpringArmComponent*                         SpringArmComponent;                                       // 0x0410(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            CameraComponent;                                          // 0x0418(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UCameraAnim*                                 PlaneCameras[0x8];                                        // 0x0420(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 ReviewCameras[0x8];                                       // 0x0460(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 SortieCameras[0x8];                                       // 0x04A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FHangarCameraNonAnimSettings                WeaponCameraSettings;                                     // 0x04E0(0x0020) (Edit, DisableEditOnInstance)
	class UCameraAnim*                                 EmptySetCamera;                                           // 0x0500(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0508(0x0008) MISSED OFFSET
	struct FTransform                                  StaticCameraTransform;                                    // 0x0510(0x0030) (Edit, IsPlainOldData)
	float                                              CameraBlendTimeSeconds;                                   // 0x0540(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PlaneSpawnOffset;                                         // 0x0544(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0550(0x0030) MISSED OFFSET
	class UCameraAnim*                                 CurrentLoadingCameraAnimation;                            // 0x0580(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 CurrentCameraAnimation;                                   // 0x0588(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xB0];                                      // 0x0590(0x00B0) MISSED OFFSET
	class APlayerPlane*                                LoadedPlayerPlane;                                        // 0x0640(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CurrentBodySkinMaterial;                                  // 0x0648(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CurrentPartsSkinMaterial;                                 // 0x0650(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0658(0x0010) MISSED OFFSET
	TArray<class UTexture*>                            PlaneBodyTextures;                                        // 0x0668(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x118];                                     // 0x0678(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusHangarMeshManager");
		return ptr;
	}


	void OnHangarVisibilityChanged();
	void OnHangarChanged();
	void HangarLevelsStreamComplete();
	void GetHangarSubLevels(struct FHangarSubLevelSettings* PreviousSublevels, struct FHangarSubLevelSettings* CurrentSublevels);
};


// Class Nimbus.NimbusHangarPawn
// 0x0030 (0x03F8 - 0x03C8)
class ANimbusHangarPawn : public APawn
{
public:
	class UCameraComponent*                            CameraComponent;                                          // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      UIManagerClass;                                           // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UNimbusUILayerManager*                       UIManager;                                                // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x03E0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusHangarPawn");
		return ptr;
	}

};


// Class Nimbus.NimbusHangarPlaneSelector
// 0x0020 (0x0388 - 0x0368)
class ANimbusHangarPlaneSelector : public AActor
{
public:
	class UWidgetComponent*                            InfoWidget;                                               // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PlaneMesh;                                                // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0378(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusHangarPlaneSelector");
		return ptr;
	}

};


// Class Nimbus.NimbusHUD
// 0x0860 (0x0CB0 - 0x0450)
class ANimbusHUD : public AHUD
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0450(0x0008) MISSED OFFSET
	class UClass*                                      HudWidgetClass;                                           // 0x0458(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HudWidgetVRClass;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 HudWidget;                                                // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWidgetToTextureConverter*                   HudWidgetConverter;                                       // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWidgetToTextureConverter*                   HudPostProcessConverter;                                  // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUI3DWidgetActor*                            HudWidgetVRActor;                                         // 0x0480(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StereoCentralUIMID;                                       // 0x0488(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      StereoHudWidgetClass;                                     // 0x0490(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          StereoCentralUIMaterial;                                  // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStereoWidget*                               StereoHudWidget;                                          // 0x04A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHUD3DUIManager*                             HUD3DUIMgr;                                               // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateFontInfo                              HudFont;                                                  // 0x04B0(0x0058) (Edit, BlueprintVisible)
	float                                              VRHudFontSize;                                            // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UTexture2D*                                  GunReticleTextureVR;                                      // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceToShowGunReticle;                              // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GunReticleEffectiveRangeRatio;                            // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          GunReticleBarMaterial;                                    // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          GunReticleBarMaterialVR;                                  // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    GunReticleBarMID;                                         // 0x0530(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ShowGroupAppearInterval;                                  // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShowGroupAppearDelay;                                     // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VelocityVectorShowGroup;                                  // 0x0540(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VelocityVectorDrawDepth;                                  // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  VelocityVectorTexture;                                    // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0550(0x0010) MISSED OFFSET
	class UTexture2D*                                  ExplosiveWeaponReticleTexture;                            // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  EscortOutOfScreenTexture;                                 // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LeftTextOffset;                                           // 0x0570(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   RightTextOffset;                                          // 0x0578(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   TopTextOffset;                                            // 0x0580(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   BottomTextOffset;                                         // 0x0588(0x0008) (Edit, IsPlainOldData)
	float                                              EscortDisplayScreenOffsetRatio;                           // 0x0590(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0594(0x000C) MISSED OFFSET
	class UClass*                                      PaperPlaneSceneCaptureActor;                              // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    PaperPlaneRotation;                                       // 0x05A8(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05B4(0x0004) MISSED OFFSET
	class UClass*                                      PaperArrowSceneCaptureActor;                              // 0x05B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    PaperArrowRotation;                                       // 0x05C0(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                HUDColorMain;                                             // 0x05CC(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorHostile;                                          // 0x05DC(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                MultiplayerHUDColorFriendly;                              // 0x05EC(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorFriendly;                                         // 0x05FC(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorText;                                             // 0x060C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorOther;                                            // 0x061C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorContainer;                                        // 0x062C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                MultiplayerHUDColorFriendlyCloud;                         // 0x063C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorFriendlyCloud;                                    // 0x064C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorHostileCloud;                                     // 0x065C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorUnidentified;                                     // 0x066C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HUDColorWeaponDisabled;                                   // 0x067C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                OverlayGlowColor;                                         // 0x068C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	class UClass*                                      TargetContainerWidgetClass;                               // 0x06A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MovieSubtitleWidgetClass;                                 // 0x06A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMovieSubtitleWidget*                        MovieSubtitleWidget;                                      // 0x06B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      MiniMapLayerWidgetClass;                                  // 0x06B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DebugInfoLayerWidgetClass;                                // 0x06C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistortionEffectScale;                                    // 0x06C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x06CC(0x0004) MISSED OFFSET
	class UTexture2D*                                  LandingGuideHorizontalTexture;                            // 0x06D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LandingGuideVerticalTexture;                              // 0x06D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          LandingGuideMaterial;                                     // 0x06E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    LandingGuideHorizontalInst;                               // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    LandingGuideVerticalInst;                                 // 0x06F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ATexture3DUIActor*                           LandingGuideBillboardActor;                               // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LandingGuideSlopeLength;                                  // 0x0700(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingGuideSlopeHeight;                                  // 0x0704(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingGuideTextureScale;                                 // 0x0708(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingGuideVRTextureScale;                               // 0x070C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LandingGuideRelativePositionToPlane;                      // 0x0710(0x000C) (Edit, IsPlainOldData)
	float                                              TGTPLineMaxLengthMeters;                                  // 0x071C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TGTPLineThickness;                                        // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class AAerialRefuel3DUIActor*                      AerialRefuelBillboardActor;                               // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              GlowIntensityOnEnabled;                                   // 0x0730(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GlowFadeDuration;                                         // 0x0734(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PaperArrowNearDistanceMeters;                             // 0x0738(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PaperArrowFarDistanceMeters;                              // 0x073C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PaperArrowNearDistanceScale;                              // 0x0740(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PaperArrowFarDistanceScale;                               // 0x0744(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0748(0x0008) MISSED OFFSET
	struct FVector2D                                   TargetTextOffSet;                                         // 0x0750(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   TargetObjectTypeTextOffSet;                               // 0x0758(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   TargetCallSignTextOffSet;                                 // 0x0760(0x0008) (Edit, IsPlainOldData)
	class UMaterialInterface*                          StarStatusImageMaterial;                                  // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MultiStarImageSize;                                       // 0x0770(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   MultiStarImageOffSet;                                     // 0x0778(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   MultiGamerTagTextOffSet;                                  // 0x0780(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   MultiObjectTypeTextOffSet;                                // 0x0788(0x0008) (Edit, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StarStatusMaterialInst;                                   // 0x0790(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              OverlayTargetContainerOpacity;                            // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BattleNavigationPingDuration;                             // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingDistortionDecayRate;                               // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingDistortionMinScale;                                // 0x07A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JammingDistortionMaxScale;                                // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StrongJammingDistortionDefaultScale;                      // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0xF0];                                      // 0x07B0(0x00F0) MISSED OFFSET
	class UClass*                                      Texture3DUIActorClass;                                    // 0x08A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TargetContainer3DUIActorClass;                            // 0x08A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AerialRefuel3DUIActorClass;                               // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnHUDEnabled;                                             // 0x08B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHUDDisabled;                                            // 0x08C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHUDAlertBegin;                                          // 0x08D8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDAlertEnd;                                            // 0x08E8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDShowGroup;                                           // 0x08F8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDDamagedEvent;                                        // 0x0908(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDDamagedEventReset;                                   // 0x0918(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDShowGuideMessageEvent;                               // 0x0928(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDHideGuideMessageEvent;                               // 0x0938(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDFadeOutEvent;                                        // 0x0948(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnSpecialWeaponChanged;                                   // 0x0958(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnCurrentAlertColorUpdated;                               // 0x0968(0x0010) (ZeroConstructor, InstancedReference)
	class APlayerPlane*                                PlayerPlane;                                              // 0x0978(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x18];                                      // 0x0980(0x0018) MISSED OFFSET
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0998(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x108];                                     // 0x09A0(0x0108) MISSED OFFSET
	class UMaterialInstanceDynamic*                    MADIndicatorImageMID;                                     // 0x0AA8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x70];                                      // 0x0AB0(0x0070) MISSED OFFSET
	class AVolume*                                     LandingVolume;                                            // 0x0B20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x188];                                     // 0x0B28(0x0188) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusHUD");
		return ptr;
	}


	void ShowMovieEmblem(TArray<class UTexture2D*> ImageTextures);
	void SetHUDDistortionScale(float NewDistortionScale);
	void ResetCameraSensitivePosition(bool bIsPlaneBodyVisible);
	void PlayMiniMapScanningEffect();
	bool OpenDebugMenu();
	void OnEndLanding();
	void OnEndAerialRefueling();
	void OnBeginLanding();
	void OnBeginAerialRefueling();
	bool IsDebugMode();
	bool IsBehindMiniMap(const struct FVector2D& InScreenPosition);
	void HideMovieEmblem();
	void HideGuideMessage();
	struct FVector2D GetScreenSize();
	struct FVector2D GetMiniMapSize();
	class UFont* GetHUDFont();
	bool GetHUDEnabled();
	EMiniMapType GetCurrentMiniMapType();
	void EndHUDDistortion();
	void DrawWidgetTextWorldSpace(const struct FString& Text, const struct FLinearColor& TextColor, const struct FVector& WldPos, const struct FVector2D& ScreenOffset, float Scale, bool bScalePosition, int ZOrder);
	void DrawWidgetTextureWorldSpace(class UTexture2D* InTexture, const struct FVector& WldPos, const struct FVector2D& ScreenOffset, const struct FVector2D& Size, float Rotation, const struct FLinearColor& Color, int ZOrder, bool bNeedDrawAccurately, float inScale);
	void DrawWidgetTexture(class UTexture2D* InTexture, const struct FVector2D& Pos, const struct FVector2D& Size, float Rotation, const struct FLinearColor& Color, int ZOrder);
	void DrawWidgetText(const struct FString& Text, const struct FLinearColor& TextColor, const struct FVector2D& Pos, float Scale, bool bScalePosition, int ZOrder, const struct FVector2D& Alignment);
	void DrawWidgetMaterialWorldSpace(class UMaterialInterface* InMaterial, const struct FVector& WldPos, const struct FVector2D& ScreenOffset, const struct FVector2D& Size, float Rotation, const struct FLinearColor& Color, int ZOrder, bool bNeedDrawAccurately, float inScale);
	void DrawWidgetMaterial(class UMaterialInterface* InMaterial, const struct FVector2D& Pos, const struct FVector2D& Size, float Rotation, const struct FLinearColor& Color, int ZOrder);
	void DrawWidgetLineWorldSpace(const struct FVector& StartWldPos, const struct FVector& EndWldPos, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetLineVectorWorldSpace(const struct FVector& StartWldPos, const struct FVector& Extent, float LengthOnScreen, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetLine(const struct FVector2D& StartPos, const struct FVector2D& EndPos, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetEllipseWorldSpace(const struct FVector& Center, const struct FVector& HorizontalExtent, const struct FVector& VerticalExtent, const struct FVector& SegmentXAxis, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetEllipse(const struct FVector2D& Center, float HorizontalRadius, float VerticalRadius, float Rotation, float SegmentOrientation, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetCircleWorldSpace(const struct FVector& Center, const struct FVector& Normal, float Radius, const struct FVector& SegmentXAxis, int SegmentCount, const struct FLinearColor& InColor);
	void DrawWidgetCircle(const struct FVector2D& Center, float Radius, float SegmentOrientation, int SegmentCount, const struct FLinearColor& InColor);
	void DrawSimpleWidgetCircleWorldSpace(const struct FVector& Center, const struct FVector& Up, const struct FVector& Normal, float Radius, int SegmentCount, const struct FLinearColor& InColor, bool bDottedLine);
	void DisplayGuideMessage(EGuideMessageType MessageType);
	bool CloseDebugMenu();
	void ChangeHUDMode(ENimbusHUDMode NewMode);
	void BeginHUDDistortion(float MinDistortionScale, float MaxDistortionScale, float HideContainerDuration, float ShowContainerDuration);
	class UCanvasPanelSlot* AddChildToHudWidget(class UWidget* Content);
};


// Class Nimbus.NimbusIGCPlane
// 0x0030 (0x0398 - 0x0368)
class ANimbusIGCPlane : public AActor
{
public:
	float                                              WingTipVaporIntensity;                                    // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShoulderVaporIntensity;                                   // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WingSurfaceVaporIntensity;                                // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WingOverVaporIntensity;                                   // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WingOverVaporHighGTurnIntensity;                          // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AfterburnerIntensity;                                     // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         VFXSocketTable;                                           // 0x0380(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0390(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusIGCPlane");
		return ptr;
	}

};


// Class Nimbus.NimbusLevelSleepManager
// 0x00B0 (0x00D8 - 0x0028)
class UNimbusLevelSleepManager : public UObject
{
public:
	class UWorld*                                      World;                                                    // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0030(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusLevelSleepManager");
		return ptr;
	}

};


// Class Nimbus.NimbusLoadingScreenManager
// 0x0048 (0x0070 - 0x0028)
class UNimbusLoadingScreenManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UUserWidget*                                 LoadingScreenWidget;                                      // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0050(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusLoadingScreenManager");
		return ptr;
	}

};


// Class Nimbus.NimbusLevelScriptActor
// 0x0038 (0x03A8 - 0x0370)
class ANimbusLevelScriptActor : public ALevelScriptActor
{
public:
	class ANimbusRibbonCollectionActor*                AIWingTipRibbonCollectionActor;                           // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusRibbonCollectionActor*                MissileRibbonCollectionActor;                             // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	TArray<class UAsyncTaskActivateUnit*>              UnitActivateTasks;                                        // 0x0388(0x0010) (ZeroConstructor, Transient)
	TArray<class UAsyncTaskActivateUnit*>              AddedUnitActivateTasks;                                   // 0x0398(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusLevelScriptActor");
		return ptr;
	}


	void StopAllLatentTask();
	void OnReadyToPlay();
	void OnIntroAnimationStart();
	void OnBattleNavigationComplete(int OutBattleNavigationID);
};


// Class Nimbus.NimbusMapChangeTransitionLoader
// 0x0030 (0x0058 - 0x0028)
class UNimbusMapChangeTransitionLoader : public UObject
{
public:
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FNimbusMapChangeTransitionCache             Cache;                                                    // 0x0030(0x0008) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0038(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusMapChangeTransitionLoader");
		return ptr;
	}

};


// Class Nimbus.NimbusMapChangeManager
// 0x01B8 (0x01E0 - 0x0028)
class UNimbusMapChangeManager : public UObject
{
public:
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusMapChangeTransitionLoader*            TransitionLoader;                                         // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusMapChangeTravelLoader*                TravelLoader;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMapChangeTransitionDelayObject*             DefaultTransitionDelay;                                   // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FNimbusMapChangeLongevityCache              LongevityCache;                                           // 0x0048(0x0010) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	struct FNimbusMapChangeRequestInfo                 CurrentRequestInfo;                                       // 0x0060(0x0090) (Transient)
	struct FNimbusMapChangeRequestInfo                 PendingRequestInfo;                                       // 0x00F0(0x0090) (Transient)
	class UNimbusCachedWorldContainer*                 LeakedCleanupWorldContainer;                              // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusCachedWorldContainer*                 CurrentCachedWorldContainer;                              // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0190(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusMapChangeManager");
		return ptr;
	}


	void OnWorldCleanupHandler(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnPostWorldCleanupHandler(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
};


// Class Nimbus.NimbusMusicPlayer
// 0x0030 (0x0058 - 0x0028)
class UNimbusMusicPlayer : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnEndOfMusicEventDispather;                               // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDurationEventDispather;                                 // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusMusicPlayer");
		return ptr;
	}


	void STATIC_Stop();
	bool STATIC_Play(const struct FString& in_EventName);
	bool STATIC_Pause(bool Pause);
	void MusicPlayerOnEndOfMusic__DelegateSignature();
	void MusicPlayerOnDuration__DelegateSignature();
	bool STATIC_IsPlaying();
	bool STATIC_IsPause();
	bool STATIC_IsEndPlay();
	int STATIC_GetPlayPosition();
	int STATIC_GetDuration();
	void STATIC_GetAudioSpectrum(TArray<float>* arry);
};


// Class Nimbus.NimbusObjectPool
// 0x0060 (0x0088 - 0x0028)
class UNimbusObjectPool : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET
	TArray<class UDecalComponent*>                     DecalComponents;                                          // 0x0078(0x0010) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusObjectPool");
		return ptr;
	}

};


// Class Nimbus.NimbusObjectTimerManager
// 0x0038 (0x0060 - 0x0028)
class UNimbusObjectTimerManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusObjectTimerManager");
		return ptr;
	}

};


// Class Nimbus.NimbusParticleSystemManager
// 0x00C8 (0x00F0 - 0x0028)
class UNimbusParticleSystemManager : public UObject
{
public:
	class UWorld*                                      World;                                                    // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<TWeakObjectPtr<class AActor>, struct FActiveCollisionParticleInfo> ActiveCollisionParticlesMap;                              // 0x0030(0x0050) (ZeroConstructor, Transient)
	TMap<TWeakObjectPtr<class AGameObject>, int>       MultiTargetCount;                                         // 0x0080(0x0050) (ZeroConstructor, Transient)
	TArray<float>                                      LastRequestTime;                                          // 0x00D0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusParticleSystemManager");
		return ptr;
	}

};


// Class Nimbus.NimbusMapChangeTravelLoader
// 0x0080 (0x00A8 - 0x0028)
class UNimbusMapChangeTravelLoader : public UObject
{
public:
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FNimbusMapChangeTravelCache                 Cache;                                                    // 0x0030(0x0038) (Transient)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0068(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusMapChangeTravelLoader");
		return ptr;
	}

};


// Class Nimbus.NimbusCameraShakeParameter
// 0x0218 (0x0240 - 0x0028)
class UNimbusCameraShakeParameter : public UObject
{
public:
	TArray<struct FNimbusCameraShakeData>              EnterAirCurrentCameraShakeDataList;                       // 0x0028(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              EnterCloudCameraShakeDataList;                            // 0x0038(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              ExitCloudCameraShakeDataList;                             // 0x0048(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              EnterSandCameraShakeDataList;                             // 0x0058(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              ExitSandCameraShakeDataList;                              // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              InAirCurrentCameraShakeDataList;                          // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              InCloudCurrentCameraShakeDataList;                        // 0x0088(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              InSandCurrentCameraShakeDataList;                         // 0x0098(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              LightningCameraShakeDataList;                             // 0x00A8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              BulletDamageCameraShakeDataList;                          // 0x00B8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              LaserDamageCameraShakeDataList;                           // 0x00C8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              MissileDamageCameraShakeDataList;                         // 0x00D8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              EMLBulletDamageCameraShakeDataList;                       // 0x00E8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              RectennaBarrierDamageCameraShakeDataList;                 // 0x00F8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              HeliosDamageCameraShakeDataList;                          // 0x0108(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              PlaneCrashedCameraShakeDataList;                          // 0x0118(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              LandingBaseDataList;                                      // 0x0128(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              TakeOffCarrierDataList;                                   // 0x0138(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              LandingCarrierDataList;                                   // 0x0148(0x0010) (Edit, ZeroConstructor)
	class UCurveFloat*                                 DelayCurve;                                               // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FNimbusCameraShakeData>              BombImpactCameraShakeDataList;                            // 0x0160(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              SmallBombImpactCameraShakeDataList;                       // 0x0170(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              EnemyExplosionCameraShakeDataList;                        // 0x0180(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              ExplosionCameraShakeDataList;                             // 0x0190(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              GeneralPurposeS_ShakeDataList;                            // 0x01A0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              GeneralPurposeM_ShakeDataList;                            // 0x01B0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              GeneralPurposeL_ShakeDataList;                            // 0x01C0(0x0010) (Edit, ZeroConstructor)
	class UCurveFloat*                                 DelayCurve_Large;                                         // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FNimbusCameraShakeData>              HeliosBombImpactCameraShakeDataList;                      // 0x01D8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              HeliosBombImpactLoopCameraShakeDataList;                  // 0x01E8(0x0010) (Edit, ZeroConstructor)
	float                                              HeliosBombTask_FirstScale;                                // 0x01F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeliosBombTask_DecayScale;                                // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeliosBombTask_PlaybackInterval;                          // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	TArray<struct FNimbusCameraShakeData>              WeaponTrackingCameraShakeDataList;                        // 0x0208(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNimbusCameraShakeData>              ReplayCameraShakeLoopingDataList;                         // 0x0218(0x0010) (Edit, ZeroConstructor)
	bool                                               bDefaultControllerShakeSetting;                           // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0229(0x0007) MISSED OFFSET
	TArray<struct FNimbusCameraShakeData>              TestCameraShakeLoopingDataList;                           // 0x0230(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusCameraShakeParameter");
		return ptr;
	}

};


// Class Nimbus.NimbusPauseManager
// 0x0108 (0x0130 - 0x0028)
class UNimbusPauseManager : public UObject
{
public:
	class UNimbusSoundPauseManager*                    SoundPauseManager;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusGarbageCollectManager*                GarbageCollectManager;                                    // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0038(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusPauseManager");
		return ptr;
	}

};


// Class Nimbus.NimbusPlayerCameraManager
// 0x00B0 (0x1D70 - 0x1CC0)
class ANimbusPlayerCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1CC0(0x0008) MISSED OFFSET
	class UClass*                                      NimbusCameraShakeClass;                                   // 0x1CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 RestrictionNearClipByDistanceCurve;                       // 0x1CD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 AdjustNearClipByFovCurve;                                 // 0x1CD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNotTouchNearClip;                                        // 0x1CE0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysResetNearClip;                                     // 0x1CE1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x1CE2(0x0002) MISSED OFFSET
	struct FVector                                     ParticleFrontOffset;                                      // 0x1CE4(0x000C) (Edit, IsPlainOldData)
	bool                                               bDebugIntermittentCameraShake;                            // 0x1CF0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ENimbusCameraShakeType                             DebugIntermittentCameraShakeType;                         // 0x1CF1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x1CF2(0x0002) MISSED OFFSET
	float                                              DebugIntermittentCameraShakeInterval;                     // 0x1CF4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x1CF8(0x0008) MISSED OFFSET
	class UNimbusCameraShakeParameter*                 NimbusCameraShakeParameter;                               // 0x1D00(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x1D08(0x0020) MISSED OFFSET
	class USceneComponent*                             ParticleAttachComponent;                                  // 0x1D28(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FNimbusActiveCameraShakeData>        PlayShakeList;                                            // 0x1D30(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x30];                                      // 0x1D40(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusPlayerCameraManager");
		return ptr;
	}


	void TestLoopCameraShakePlayAddScale(float inScale);
	void TestLoopCameraShakePlay();
};


// Class Nimbus.NimbusPlayerController
// 0x0028 (0x06E8 - 0x06C0)
class ANimbusPlayerController : public APlayerController
{
public:
	bool                                               bDisplayDebugInfo;                                        // 0x06C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x06C1(0x0007) MISSED OFFSET
	class UClass*                                      ControllerVibrationClass;                                 // 0x06C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNimbusControllerVibration*                  ControllerVibration;                                      // 0x06D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x06D8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusPlayerController");
		return ptr;
	}


	void UnpauseAllControllerVibrations();
	void TogglePlayerDebugInfo();
	void ToggleHUD();
	void StopControllerVibrationTypes(EControllerVibrationType Type1, EControllerVibrationType Type2);
	void StopControllerVibrationType(EControllerVibrationType Type);
	void StopAllControllerVibrationImmediately();
	void StartControllerVibration(float intensity, float Duration);
	void SetXBoxControllerVibrationScalar(float Scalar);
	void SetPSControllerVibrationScalar(float Scalar);
	void SetIsSkipIGC(bool bSkipIGC);
	void SetControllerVibrationScales(EControllerVibrationType Type1, EControllerVibrationType Type2, float Scale);
	void SetControllerVibrationScale(EControllerVibrationType Type, float Scale);
	void PauseAllControllerVibrations();
	void ForceStopControllerVibration();
	void ControllerVibrationNotify_OnIGC(EControllerVibrationType Type, float Scale);
	void ControllerVibrationNotify(EControllerVibrationType Type, float Scale);
};


// Class Nimbus.NimbusPlayerState
// 0x0000 (0x03F8 - 0x03F8)
class ANimbusPlayerState : public APlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusPlayerState");
		return ptr;
	}

};


// Class Nimbus.NimbusProceduralRibbonActor
// 0x00A0 (0x0408 - 0x0368)
class ANimbusProceduralRibbonActor : public AActor
{
public:
	int                                                WayPointCount;                                            // 0x0368(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Width;                                                    // 0x036C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UVDistance;                                               // 0x0370(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinDistance;                                              // 0x0374(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoUpdateDistance;                                         // 0x037C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UProceduralMeshComponent*                    Mesh;                                                     // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FRibbonWaypointData>                 Waypoints;                                                // 0x0388(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x70];                                      // 0x0398(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusProceduralRibbonActor");
		return ptr;
	}

};


// Class Nimbus.NimbusRadioPreviewGameMode
// 0x0020 (0x0488 - 0x0468)
class ANimbusRadioPreviewGameMode : public ANimbusGameMode
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0468(0x0010) MISSED OFFSET
	class UNimbusCheatManager*                         NimbusCheatManager;                                       // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0480(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusRadioPreviewGameMode");
		return ptr;
	}

};


// Class Nimbus.NimbusRailgunTarget
// 0x0040 (0x0B80 - 0x0B40)
class ANimbusRailgunTarget : public AGameObject
{
public:
	bool                                               bDebugDraw;                                               // 0x0B40(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0B41(0x0007) MISSED OFFSET
	class AGameObject*                                 TargetActor;                                              // 0x0B48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIGameObject*                               OwningAIGameObject;                                       // 0x0B50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0B58(0x0010) MISSED OFFSET
	class UCurveFloat*                                 SpeedDelayCurves;                                         // 0x0B68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 SpeedDelayDistanceRateCurves;                             // 0x0B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ShakeMoveTimeCurves;                                      // 0x0B78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusRailgunTarget");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayDataBuffer
// 0x0038 (0x0060 - 0x0028)
class UNimbusReplayDataBuffer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayDataBuffer");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayDataManager
// 0x81F8 (0x8220 - 0x0028)
class UNimbusReplayDataManager : public UObject
{
public:
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayDataBuffer*                     DataBuffer;                                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x81E8];                                    // 0x0038(0x81E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayDataManager");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayDecodeManager
// 0x00B8 (0x00E0 - 0x0028)
class UNimbusReplayDecodeManager : public UObject
{
public:
	class UNimbusReplayDataManager*                    DataManager;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayDecodeTimeManager*              TimeManager;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0038(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayDecodeManager");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayDecodeTimeManager
// 0x0010 (0x0038 - 0x0028)
class UNimbusReplayDecodeTimeManager : public UObject
{
public:
	class UNimbusReplayDataManager*                    DataManager;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayPlayTimeManager*                PlayTimeManager;                                          // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayDecodeTimeManager");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayEncodeManager
// 0x0168 (0x0190 - 0x0028)
class UNimbusReplayEncodeManager : public UObject
{
public:
	class UNimbusReplayDataManager*                    DataManager;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayEncodeTimeManager*              TimeManager;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x158];                                     // 0x0038(0x0158) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayEncodeManager");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayEncodeTimeManager
// 0x0010 (0x0038 - 0x0028)
class UNimbusReplayEncodeTimeManager : public UObject
{
public:
	class UNimbusReplayPlayTimeManager*                PlayTimeManager;                                          // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayEncodeTimeManager");
		return ptr;
	}

};


// Class Nimbus.NimbusReplayPlayTimeManager
// 0x0028 (0x0050 - 0x0028)
class UNimbusReplayPlayTimeManager : public UObject
{
public:
	class UNimbusPauseManager*                         PauseManager;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusWorldSettings*                        WorldSettings;                                            // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0038(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayPlayTimeManager");
		return ptr;
	}


	void OnSystemStartFrameHandler(float DeltaTime);
};


// Class Nimbus.NimbusReplayServiceActor
// 0x0040 (0x03A8 - 0x0368)
class ANimbusReplayServiceActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0368(0x0010) MISSED OFFSET
	class UNimbusReplayDataManager*                    DataManager;                                              // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayPlayTimeManager*                PlayTimeManager;                                          // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayEncodeManager*                  EncodeManager;                                            // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusReplayDecodeManager*                  DecodeManager;                                            // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusWorldSettings*                        WorldSettings;                                            // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayServiceActor");
		return ptr;
	}

};


// Class Nimbus.NimbusRibbonCollectionActor
// 0x0028 (0x0390 - 0x0368)
class ANimbusRibbonCollectionActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0368(0x0004) MISSED OFFSET
	ERibbonCollectionType                              RibbonType;                                               // 0x036C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x036D(0x0003) MISSED OFFSET
	class UParticleSystemComponent*                    PSComponent;                                              // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FNimbusRibbonSource>                 ActiveSources;                                            // 0x0378(0x0010) (ZeroConstructor, Transient)
	int                                                MaxActiveSources;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x038C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusRibbonCollectionActor");
		return ptr;
	}


	void OnPreRestartPhaseEvent();
	void OnIGCEnableEvent(bool bEnabled);
};


// Class Nimbus.NimbusSaveGame
// 0x0008 (0x0030 - 0x0028)
class UNimbusSaveGame : public USaveGame
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	uint32_t                                           SavedVersionNumber;                                       // 0x002C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSaveGame");
		return ptr;
	}

};


// Class Nimbus.MultiplayerDebugCameraActor
// 0x0010 (0x0930 - 0x0920)
class AMultiplayerDebugCameraActor : public ACameraActor
{
public:
	class APlayerPlane*                                PlaneToFollow;                                            // 0x0920(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0928(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiplayerDebugCameraActor");
		return ptr;
	}

};


// Class Nimbus.NimbusSoundManager
// 0x0160 (0x0188 - 0x0028)
class UNimbusSoundManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x160];                                     // 0x0028(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSoundManager");
		return ptr;
	}


	void STATIC_UnloadBank(class UAkAudioBank* Bank, const struct FString& BankName);
	void STATIC_StopAll();
	void STATIC_StopActor(class AActor* Actor);
	void STATIC_SetSwitch(const struct FName& SwitchGroup, const struct FName& SwitchState, class AActor* Actor);
	void STATIC_SetState(const struct FName& StateGroup, const struct FName& State);
	void STATIC_SetRTPCValue(const struct FName& RTPC, float Value, int InterpolationTimeMs, class AActor* Actor);
	void STATIC_SetOutputMode(ENimbusSoundOutputMode OutputMode);
	void STATIC_SetOcclusionRefreshInterval(float RefreshInterval, class AActor* Actor);
	int STATIC_PostEventAtLocation(class UAkAudioEvent* akevent, const struct FVector& Location, const struct FRotator& Orientation, const struct FString& EventName, class UObject* WorldContextObject, ENimbusSoundType SoundType);
	int STATIC_PostEvent(class UAkAudioEvent* akevent, class AActor* Actor, bool bStopWhenAttachedToDestroyed, const struct FString& EventName, ENimbusSoundType SoundType);
	void STATIC_LoadInitBank();
	void STATIC_LoadBanks(TArray<class UAkAudioBank*> SoundBanks, bool SynchronizeSoundBanks);
	void STATIC_LoadBank(class UAkAudioBank* Bank, const struct FString& BankName);
	bool STATIC_LoadAllFilePackages();
	ENimbusSoundOutputMode STATIC_GetOutputMode();
	void STATIC_ClearBanks();
};


// Class Nimbus.NimbusSoundPauseManager
// 0x0018 (0x0040 - 0x0028)
class UNimbusSoundPauseManager : public UObject
{
public:
	class UNimbusSoundReverbManager*                   ReverbManager;                                            // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSoundPauseManager");
		return ptr;
	}

};


// Class Nimbus.NimbusSoundReverbManager
// 0x0008 (0x0030 - 0x0028)
class UNimbusSoundReverbManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSoundReverbManager");
		return ptr;
	}

};


// Class Nimbus.StreamingInstallManager
// 0x0008 (0x0030 - 0x0028)
class UStreamingInstallManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StreamingInstallManager");
		return ptr;
	}

};


// Class Nimbus.NimbusStreamingInstallManager
// 0x0000 (0x0030 - 0x0030)
class UNimbusStreamingInstallManager : public UStreamingInstallManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusStreamingInstallManager");
		return ptr;
	}

};


// Class Nimbus.NimbusSubLevelManager
// 0x0168 (0x0190 - 0x0028)
class UNimbusSubLevelManager : public UObject
{
public:
	class UNimbusGameInstance*                         GameInstance;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x158];                                     // 0x0030(0x0158) MISSED OFFSET
	class UNimbusCachedWorldContainer*                 CachedWorldContainer;                                     // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSubLevelManager");
		return ptr;
	}


	void OnLoadedSubLevel();
};


// Class Nimbus.NimbusSystemUserPause
// 0x0018 (0x0040 - 0x0028)
class UNimbusSystemUserPause : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusSystemUserPause");
		return ptr;
	}

};


// Class Nimbus.NimbusTextureManager
// 0x0148 (0x0170 - 0x0028)
class UNimbusTextureManager : public UObject
{
public:
	TMap<class UClass*, struct FNimbusTextureManagerBundleAssetInfo> HangarPlayerTextures;                                     // 0x0028(0x0050) (ZeroConstructor, Transient)
	TMap<class UClass*, struct FNimbusTextureManagerBundleAssetInfo> MissionPlayerTextures;                                    // 0x0078(0x0050) (ZeroConstructor, Transient)
	TMap<class UClass*, struct FNimbusTextureManagerBundleAssetInfo> MissionAIPlaneTextures;                                   // 0x00C8(0x0050) (ZeroConstructor, Transient)
	TMap<class UTexture2D*, struct FNimbusTextureManagerTextureState> TextureStates;                                            // 0x0118(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0168(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusTextureManager");
		return ptr;
	}

};


// Class Nimbus.NimbusTextureRenderTargetVR
// 0x0000 (0x0100 - 0x0100)
class UNimbusTextureRenderTargetVR : public UTextureRenderTarget2D
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusTextureRenderTargetVR");
		return ptr;
	}

};


// Class Nimbus.NimbusTriggerBase
// 0x0068 (0x03D8 - 0x0370)
class ANimbusTriggerBase : public ATriggerBase
{
public:
	struct FScriptMulticastDelegate                    OnNimbusBeginOverlap;                                     // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNimbusEndOverlap;                                       // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0390(0x0010) UNKNOWN PROPERTY: ArrayProperty Nimbus.NimbusTriggerBase.CandidateGameObjects
	bool                                               bCheckPlayer;                                             // 0x03A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckAlly;                                               // 0x03A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckEnemy;                                              // 0x03A2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x03A3(0x0005) MISSED OFFSET
	class ANimbusGameMode*                             GameMode;                                                 // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AGameObject*>                         CandidateGameObjectCache;                                 // 0x03B0(0x0010) (ZeroConstructor, Transient)
	TArray<class AGameObject*>                         OverlappedGameObjects;                                    // 0x03C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusTriggerBase");
		return ptr;
	}


	bool IsNimbusOverlappingActor(class AActor* Other);
	void GetNimbusOverlappingActors(class UClass* ClassFilter, TArray<class AActor*>* OverlappingActors);
	void EnableTriggerVolume(bool bEnable);
};


// Class Nimbus.NimbusTriggerSphere
// 0x0000 (0x03D8 - 0x03D8)
class ANimbusTriggerSphere : public ANimbusTriggerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusTriggerSphere");
		return ptr;
	}

};


// Class Nimbus.NimbusUILayerActor
// 0x0008 (0x0370 - 0x0368)
class ANimbusUILayerActor : public AActor
{
public:
	class UWidgetComponent*                            WidgetComponent;                                          // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusUILayerActor");
		return ptr;
	}

};


// Class Nimbus.NimbusUILayer
// 0x0040 (0x0248 - 0x0208)
class UNimbusUILayer : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0208(0x0010) MISSED OFFSET
	TArray<class UUILayerLinkButton*>                  NextUILayerLinks;                                         // 0x0218(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UUILayerLinkButton*                          CurrentFocusedButton;                                     // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	ENimbusUIId                                        DefaultNextLayerUIId;                                     // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	struct FName                                       LevelName;                                                // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableLayerNavigation;                                   // 0x0240(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedBackground;                                          // 0x0241(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0242(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusUILayer");
		return ptr;
	}


	void OnTransitionOutStart();
	void OnTransitionOutEnd();
	void OnTransitionInStart();
	void OnTransitionInEnd();
	void OnPushButtonCancel();
	void OnPushButtonAccept();
	void OnLayerLinkButtonUnfocused(class UUILayerLinkButton* Btn);
	void OnLayerLinkButtonFocused(class UUILayerLinkButton* Btn);
	bool IsCurrentLayer();
	void GotoPreviousLayer();
	void GotoNextLayer();
	class UNimbusUILayerManager* GetUILayerManager();
};


// Class Nimbus.NimbusUILayerManager
// 0x00C8 (0x00F0 - 0x0028)
class UNimbusUILayerManager : public UObject
{
public:
	TArray<struct FUIIdItem>                           UIIdMap;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0038(0x0004) MISSED OFFSET
	float                                              TransitionDuration;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxDisplayLayerCount;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x34];                                      // 0x0044(0x0034) MISSED OFFSET
	TArray<class UWidgetComponent*>                    AllUIs;                                                   // 0x0078(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x68];                                      // 0x0088(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusUILayerManager");
		return ptr;
	}


	void OnLevelUnloded();
	void OnLevelLoaded();
};


// Class Nimbus.NimbusVRDebugGameMode
// 0x0000 (0x0468 - 0x0468)
class ANimbusVRDebugGameMode : public ANimbusGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusVRDebugGameMode");
		return ptr;
	}


	void SetNextPlayerPawnClass(const struct FString& nextPawnClass);
};


// Class Nimbus.NimbusWidgetComponent
// 0x0000 (0x08A0 - 0x08A0)
class UNimbusWidgetComponent : public UWidgetComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusWidgetComponent");
		return ptr;
	}


	void FitToCamera(float FOVAngle);
};


// Class Nimbus.NimbusWorldSettings
// 0x03E8 (0x0900 - 0x0518)
class ANimbusWorldSettings : public AWorldSettings
{
public:
	float                                              MaxWorldSize;                                             // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinWorldAltitude;                                         // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWorldAltitude;                                         // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWorldSand;                                             // 0x0524(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWorldRainLine;                                         // 0x0525(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWorldRainPillar;                                       // 0x0526(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0527(0x0001) MISSED OFFSET
	float                                              RainVFXBrightness;                                        // 0x0528(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 AutoExposureBiasCurveForLightningOverwrite;               // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ClockTime;                                                // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsNightFlight;                                           // 0x053C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x053D(0x0003) MISSED OFFSET
	struct FVector2D                                   WindDirection;                                            // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0548(0x0004) MISSED OFFSET
	ENimbusUIId                                        UILayerStartId;                                           // 0x054C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPlayPlayerPlaneSound;                                  // 0x054D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEmitterObjectRayCheck;                                   // 0x054E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x71];                                      // 0x054F(0x0071) MISSED OFFSET
	class UNimbusGameInstance*                         GameInstance;                                             // 0x05C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusLevelSleepManager*                    LevelSleepManager;                                        // 0x05C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusActorManager*                         ActorManager;                                             // 0x05D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusObjectTimerManager*                   ObjectTimerManager;                                       // 0x05D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UNimbusParticleSystemManager*                ParticleSystemManager;                                    // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x318];                                     // 0x05E8(0x0318) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusWorldSettings");
		return ptr;
	}

};


// Class Nimbus.ObjectMapper
// 0x00E8 (0x0450 - 0x0368)
class AObjectMapper : public AActor
{
public:
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0368(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ObjectMapper");
		return ptr;
	}


	void OnPreRestartPhaseEvent();
	void OnCombatZoneUpdatedEvent();
};


// Class Nimbus.OfflineCapture
// 0x0000 (0x0370 - 0x0370)
class AOfflineCapture : public ASceneCapture
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OfflineCapture");
		return ptr;
	}

};


// Class Nimbus.MultiResultRewardsWidget
// 0x0190 (0x0670 - 0x04E0)
class UMultiResultRewardsWidget : public UMultiMissionMenuBaseWidget
{
public:
	class UWidgetAnimation*                            UmgRankUpAnimation;                                       // 0x04E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            UmgPerformanceEvaluation;                                 // 0x04E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            UmgRankAppearAnimation;                                   // 0x04F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            UmgMRPEndAnimation;                                       // 0x04F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                RankScorePlaySpeed;                                       // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	uint64_t                                           MMRPScorePlaySpeed;                                       // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MedalItemClass;                                           // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterSectionAnimationDelay;                               // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MRPShowAcquisitionDelay;                                  // 0x051C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MRPRollingDelay;                                          // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RankRollingDelay;                                         // 0x0524(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MaxRankGoldColor;                                         // 0x0528(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MaxRankGoldGlowColor;                                     // 0x0538(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x0548(0x0080) MISSED OFFSET
	bool                                               bShowAllMedals;                                           // 0x05C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05C9(0x0003) MISSED OFFSET
	float                                              InactivePeriodAfterAnimationCompletion;                   // 0x05CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA0];                                      // 0x05D0(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MultiResultRewardsWidget");
		return ptr;
	}


	void ProceedToNextAnimationPhase();
	void OnRankUpAnimationFinished();
};


// Class Nimbus.OfflineCaptureCube
// 0x0008 (0x0378 - 0x0370)
class AOfflineCaptureCube : public AOfflineCapture
{
public:
	class UTextureCube*                                OutputTextureCube;                                        // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OfflineCaptureCube");
		return ptr;
	}

};


// Class Nimbus.OptionsFlightStickWidget
// 0x01F0 (0x06C0 - 0x04D0)
class UOptionsFlightStickWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x1F0];                                     // 0x04D0(0x01F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsFlightStickWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsFlightSystemWidget
// 0x0000 (0x04D0 - 0x04D0)
class UOptionsFlightSystemWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsFlightSystemWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsGraphicsAdvancedWidget
// 0x0000 (0x04D0 - 0x04D0)
class UOptionsGraphicsAdvancedWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsGraphicsAdvancedWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsGraphicsScreenWidget
// 0x0010 (0x04E0 - 0x04D0)
class UOptionsGraphicsScreenWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsGraphicsScreenWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsGraphicsSteamWidget
// 0x0060 (0x0530 - 0x04D0)
class UOptionsGraphicsSteamWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x04D0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsGraphicsSteamWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsGraphicsResolutionWidget
// 0x0040 (0x0510 - 0x04D0)
class UOptionsGraphicsResolutionWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x04D0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsGraphicsResolutionWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsKeyboardWidget
// 0x0030 (0x0500 - 0x04D0)
class UOptionsKeyboardWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x04D0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsKeyboardWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsLanguageWidget
// 0x0010 (0x04E0 - 0x04D0)
class UOptionsLanguageWidget : public UMenuBaseWidget
{
public:
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsLanguageWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsMenuWidget
// 0x0000 (0x04D0 - 0x04D0)
class UOptionsMenuWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsMenuWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsScreenWidget
// 0x0040 (0x0510 - 0x04D0)
class UOptionsScreenWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x04D0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsScreenWidget");
		return ptr;
	}

};


// Class Nimbus.OptionsMouseWidget
// 0x0000 (0x04D0 - 0x04D0)
class UOptionsMouseWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsMouseWidget");
		return ptr;
	}

};


// Class Nimbus.OrbitalCameraComponent
// 0x0090 (0x09E0 - 0x0950)
class UOrbitalCameraComponent : public UCameraComponent
{
public:
	bool                                               bStartOnBeginPlay;                                        // 0x0950(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0951(0x0003) MISSED OFFSET
	float                                              RevolvingSpeed;                                           // 0x0954(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      TargetActor;                                              // 0x0958(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x0960(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OrbitalCameraComponent");
		return ptr;
	}

};


// Class Nimbus.OptionsSoundWidget
// 0x0020 (0x04F0 - 0x04D0)
class UOptionsSoundWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsSoundWidget");
		return ptr;
	}

};


// Class Nimbus.PersistentUserWidget
// 0x04F8 (0x0728 - 0x0230)
class UPersistentUserWidget : public UNimbusUserWidget
{
public:
	float                                              MissionPhaseSecondsLeftToStartBlinking;                   // 0x0230(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimerBlinkRate;                                           // 0x0234(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchMeterAngleInterval;                                  // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	class UTexture2D*                                  PitchMeterPositiveTexture;                                // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterHalfPositiveTexture;                            // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterNegativeTexture;                                // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterHalfNegativeTexture;                            // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterNeutralTexture;                                 // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TimeScoreTargetInfoShowGroup;                             // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlaneIconInfoShowGroup;                                   // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlaneTextInfoShowGroup;                                   // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x0274(0x003C) MISSED OFFSET
	class UPlayerWeaponActivator*                      PlayerWeaponActivator;                                    // 0x02B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x428];                                     // 0x02B8(0x0428) MISSED OFFSET
	struct FLinearColor                                PlaneLightDamageColor;                                    // 0x06E0(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                PlaneHeavyDamageColor;                                    // 0x06F0(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	TArray<int>                                        WeaponDisplaySequence;                                    // 0x0700(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UTargetSelectionComponent*                   TargetSelectionComp;                                      // 0x0710(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0718(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PersistentUserWidget");
		return ptr;
	}


	void OnWeaponActivatorInitialize();
	void OnSpecialWeaponChanged();
	void OnHUDEnabled();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.OptionsControllerWidget
// 0x02E0 (0x07B0 - 0x04D0)
class UOptionsControllerWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x2E0];                                     // 0x04D0(0x02E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OptionsControllerWidget");
		return ptr;
	}

};


// Class Nimbus.PilotDataWidget
// 0x0020 (0x0228 - 0x0208)
class UPilotDataWidget : public UUserWidget
{
public:
	class UWidgetAnimation*                            UmgUnlockAnimation;                                       // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0210(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PilotDataWidget");
		return ptr;
	}

};


// Class Nimbus.PitchMeterWidget
// 0x0058 (0x0288 - 0x0230)
class UPitchMeterWidget : public UNimbusUserWidget
{
public:
	float                                              PitchMeterAngleInterval;                                  // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class UTexture2D*                                  PitchMeterPositiveTexture;                                // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterHalfPositiveTexture;                            // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterNegativeTexture;                                // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterHalfNegativeTexture;                            // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PitchMeterNeutralTexture;                                 // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0260(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PitchMeterWidget");
		return ptr;
	}


	void CurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.PlaneVFXComponent
// 0x0248 (0x0338 - 0x00F0)
class UPlaneVFXComponent : public UNimbusGameObjectComponent
{
public:
	struct FString                                     PlaneMeshName;                                            // 0x00F0(0x0010) (Edit, ZeroConstructor)
	struct FString                                     CockpitMeshName;                                          // 0x0100(0x0010) (Edit, ZeroConstructor)
	struct FString                                     CockpitMeshVRName;                                        // 0x0110(0x0010) (Edit, ZeroConstructor)
	float                                              VFXTickMinDistanceUU;                                     // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VFXTickMaxIntervalSeconds;                                // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VFXFadeTime;                                              // 0x0128(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FDataTableRowHandle                         VFXSocketTableOverride;                                   // 0x0130(0x0010) (Transient)
	float                                              WingTipVaporFadeInOutTime;                                // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WingTipVaporDefaultInitialSize;                           // 0x0144(0x000C) (Edit, IsPlainOldData)
	float                                              WingTipVaporMaxSize;                                      // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WingTipVaporMinDistanceUU;                                // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WingTipVaporMaxSpawnPerUnit;                              // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WingTipVaporMinSpawnPerUnit;                              // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatDistortionEmissionRateMin;                            // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatDistortionEmissionRateMax;                            // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatDistortionIntensityMin;                               // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatDistortionIntensityMax;                               // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedRatioThresholdToDisplayAfterburnerForAI;             // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseRibbonCollectionForAIWingTip;                         // 0x0174(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2B];                                      // 0x0175(0x002B) MISSED OFFSET
	TArray<struct FVFXInstance>                        WingTipVaporInstances;                                    // 0x01A0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        WingOverVaporInstances;                                   // 0x01B0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        AfterburnerInstances;                                     // 0x01C0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        ShoulderVaporInstances;                                   // 0x01D0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        WingSurfaceVaporInstances;                                // 0x01E0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        WingOverVaporHighGTurnInstances;                          // 0x01F0(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        HeatDistortionInstances;                                  // 0x0200(0x0010) (ZeroConstructor)
	TArray<struct FVFXInstance>                        LowAltitudeTrailInstances;                                // 0x0210(0x0010) (ZeroConstructor)
	class UParticleSystem*                             LowAltitudeTrail;                                         // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x108];                                     // 0x0228(0x0108) MISSED OFFSET
	class ANimbusRibbonCollectionActor*                WingTipRibbonCollectionActor;                             // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlaneVFXComponent");
		return ptr;
	}


	void ResetParameters();
	void OnRestored();
	void OnReposition();
	void OnOwnerVisibilityChanged(bool bVisibility);
	void IGCUpdateParams(float WingTipVapor, float ShoulderVapor, float WingSurfaceVapor, float WingOverVapor, float WingOverVaporHighGTurn, float AfterBurner);
};


// Class Nimbus.PlayerBlockingVolume
// 0x0000 (0x03A0 - 0x03A0)
class APlayerBlockingVolume : public AVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerBlockingVolume");
		return ptr;
	}

};


// Class Nimbus.PlayerHUDModeManager
// 0x0058 (0x0080 - 0x0028)
class UPlayerHUDModeManager : public UObject
{
public:
	class ANimbusWorldSettings*                        WorldSettings;                                            // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusHUD*                                  NimbusHUD;                                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AMission*                                    Mission;                                                  // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusEventParser*                          EventParser;                                              // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0048(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerHUDModeManager");
		return ptr;
	}


	void OnTransitionToMiniGameHandler(bool bIsTransitingIn);
	void OnReferencedActorEndPlayHandler(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
	void OnPreStartMiniGamePhaseHandler(bool bIsRetry);
	void OnPreRestartPhaseHandler();
	void OnMultiAbortHandler();
	void OnDebugStateChangeHandler(EDebugModeState State);
};


// Class Nimbus.PlayerPlane
// 0x0EE0 (0x1A20 - 0x0B40)
class APlayerPlane : public AGameObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0B40(0x0008) MISSED OFFSET
	int                                                PlaneTypeID;                                              // 0x0B48(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                PlaneSWP;                                                 // 0x0B4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCarrierBasedPlane;                                     // 0x0B50(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFlyingBoom;                                            // 0x0B51(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVRPlane;                                               // 0x0B52(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlaysNozzleSound;                                        // 0x0B53(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMS17ExceptionPlane;                                    // 0x0B54(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0B55(0x0003) MISSED OFFSET
	float                                              InputThrottle;                                            // 0x0B58(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputBrake;                                               // 0x0B5C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputLeftYaw;                                             // 0x0B60(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputRightYaw;                                            // 0x0B64(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputRoll;                                                // 0x0B68(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputPitch;                                               // 0x0B6C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputLeftYaw_forAnimVR;                                   // 0x0B70(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputRightYaw_forAnimVR;                                  // 0x0B74(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputRoll_forAnimVR;                                      // 0x0B78(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InputPitch_forAnimVR;                                     // 0x0B7C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsChangingView;                                          // 0x0B80(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsChangingViewReleased;                                  // 0x0B81(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bActivateFlareL;                                          // 0x0B82(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bActivateFlareR;                                          // 0x0B83(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ChangingViewTimer;                                        // 0x0B84(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              HangarPartsAnim_Vwgn;                                     // 0x0B88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HangarPartsAnim_Vct;                                      // 0x0B8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HangarPartsAnim_Nzln;                                     // 0x0B90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForceHangarWeaponMeshVisible;                            // 0x0B94(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0B95(0x0003) MISSED OFFSET
	int                                                MaxPlaneAttackerMissiles;                                 // 0x0B98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxPursuitAttackers;                                      // 0x0B9C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxNonPlaneAttackerMissiles;                              // 0x0BA0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCrashEnvironmentAlert;                                   // 0x0BA4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanAfterburn;                                            // 0x0BA5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD];                                       // 0x0BA6(0x000D) MISSED OFFSET
	bool                                               bForceDisableCockpitWeatherMeshLocalToViewProcess;        // 0x0BB3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0BB4(0x000C) MISSED OFFSET
	class UMaterialParameterCollection*                CloudMaterialParams;                                      // 0x0BC0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsInCloud;                                               // 0x0BC8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInSand;                                                // 0x0BC9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2E];                                      // 0x0BCA(0x002E) MISSED OFFSET
	float                                              CurrentCloudDensity;                                      // 0x0BF8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0BFC(0x0004) MISSED OFFSET
	float                                              SmoothCloudDensity;                                       // 0x0C00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3C];                                      // 0x0C04(0x003C) MISSED OFFSET
	float                                              CanopyEffectChangeDuration;                               // 0x0C40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CanopyIceAppearDuration;                                  // 0x0C44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CanopyIceChangeDuration;                                  // 0x0C48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CanopyEffectDecayMultiplier;                              // 0x0C4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WingTipEffectExitCloudDuration;                           // 0x0C50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IceTriggerCloudDensity;                                   // 0x0C54(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0C58(0x0004) MISSED OFFSET
	float                                              InCloudMovementDegradePercent;                            // 0x0C5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InCloudMovementDegradeDuration;                           // 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InCloudStallSpeed;                                        // 0x0C64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InCloudBuffetSpeed;                                       // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0C6C(0x0008) MISSED OFFSET
	float                                              InCloudMovementDegradePercent2;                           // 0x0C74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InAirCurrentMovementDegradePercent;                       // 0x0C78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirCurrentStrengthThreshold;                              // 0x0C7C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UParticleSystem*                             AirCurrentParticleSystem;                                 // 0x0C80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirCurrentVFXVelocityMultiplier;                          // 0x0C88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudDensity_ShowAirCurrentFX;                            // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudDensity_HideAirCurrentFX;                            // 0x0C90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirCurrentVFXVelocityFadeInTime;                          // 0x0C94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirCurrentVFXVelocityFadeOutTime;                         // 0x0C98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirCurrentVFXInitialSpeed;                                // 0x0C9C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AirCurrentVFXSpeedThreshold;                              // 0x0CA0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bShowAirCurrentVFXOnlyInCloud;                            // 0x0CA4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1F];                                      // 0x0CA5(0x001F) MISSED OFFSET
	float                                              HeavyDamageHealthPercentage;                              // 0x0CC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LightDamageHealthPercentage;                              // 0x0CC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     VRLandingGuideRelativePosition;                           // 0x0CCC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     VRAerialRefuelGuideRelativePosition;                      // 0x0CD8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              AltitudeWarningThreshold;                                 // 0x0CE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x10];                                      // 0x0CE8(0x0010) MISSED OFFSET
	float                                              StealthMissileFarAlertPlayingTimeMin;                     // 0x0CF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StealthMissileFarAlertPlayingTimeMax;                     // 0x0CFC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StealthMissileFarAlertIntervalTimeMin;                    // 0x0D00(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StealthMissileFarAlertIntervalTimeMax;                    // 0x0D04(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             StruckByLightningVFX_OtherPlayer;                         // 0x0D08(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x60];                                      // 0x0D10(0x0060) MISSED OFFSET
	float                                              PostStallManuverNeutralLengthTime;                        // 0x0D70(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2C];                                      // 0x0D74(0x002C) MISSED OFFSET
	class AActor*                                      VRSoundActors[0x3];                                       // 0x0DA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CockpitFiringSwitchRefActor;                              // 0x0DB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              NozzleSoundActors;                                        // 0x0DC0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData14[0x28];                                      // 0x0DD0(0x0028) MISSED OFFSET
	float                                              JammingEffectFadePerSeconds;                              // 0x0DF8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrontDist;                                                // 0x0DFC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BackPointRadius;                                          // 0x0E00(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0E04(0x0004) MISSED OFFSET
	class USandwichBattle*                             KDSBattle;                                                // 0x0E08(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEnableMovmentInput;                                      // 0x0E10(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableWingInput;                                         // 0x0E11(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableCameraInput;                                       // 0x0E12(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableCameraViewChange;                                  // 0x0E13(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableWeaponInput;                                       // 0x0E14(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWeaponSystemDisabled;                                  // 0x0E15(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPitchAxisReversed;                                     // 0x0E16(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCameraUpAxisReversed;                                  // 0x0E17(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTrottleYawReversed;                                    // 0x0E18(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EOptionsRadarMapWeaponSwitchingTypes               RadarWeaponControlType;                                   // 0x0E19(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHighGTurnSingleButton;                                 // 0x0E1A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFlightAssistEnabled;                                   // 0x0E1B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0E1C(0x0004) MISSED OFFSET
	class UTexture2D*                                  IconBg;                                                   // 0x0E20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconFillTexture;                                          // 0x0E28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LegAnimKneeAngle;                                         // 0x0E30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LegAnimFootAngle;                                         // 0x0E34(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LegAnimScale;                                             // 0x0E38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0E3C(0x0004) MISSED OFFSET
	class UUpgradeParts*                               UpgradeParts;                                             // 0x0E40(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4C];                                      // 0x0E48(0x004C) MISSED OFFSET
	float                                              CockpitCameraBoundaryRadius;                              // 0x0E94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x38];                                      // 0x0E98(0x0038) MISSED OFFSET
	bool                                               bAllowCameraShakeInVR;                                    // 0x0ED0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x0ED1(0x0007) MISSED OFFSET
	class UDataTable*                                  PartsAnimationParamDataTable;                             // 0x0ED8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PlayerParamDataTable;                                     // 0x0EE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         VFXSocketTable;                                           // 0x0EE8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	class USkeletalMeshComponent*                      PlaneBodyMesh;                                            // 0x0EF8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      LandingGearOnMesh;                                        // 0x0F00(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LandingGearOffMesh;                                       // 0x0F08(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        RefuelOnMesh;                                             // 0x0F10(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        RefuelOffMesh;                                            // 0x0F18(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        CanopyWeatherMesh;                                        // 0x0F20(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       CanopyPostProcessComponent;                               // 0x0F28(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       IEWSPostProcessComponent;                                 // 0x0F30(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        VelocityVectorVRMesh;                                     // 0x0F38(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData21[0x8];                                       // 0x0F40(0x0008) MISSED OFFSET
	class UPlaneRadioStateComponent*                   RadioStateComp;                                           // 0x0F48(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          CanopyEffectMaterial;                                     // 0x0F50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedToAccelerateDroplet;                              // 0x0F58(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0F5C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          CanopyIEWSEffectMaterial;                                 // 0x0F60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      IEWSEffectECMColor;                                       // 0x0F68(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      IEWSEffectESMColor;                                       // 0x0F6C(0x0004) (Edit, IsPlainOldData)
	float                                              InitialRainSpeed;                                         // 0x0F70(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x0F74(0x0004) MISSED OFFSET
	class UDirectionalLightComponent*                  CachedCockpitDirectionalLight;                            // 0x0F78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              ThirdPersonDropletSplatRateMax;                           // 0x0F80(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CockpitDropletRainSpeedValue;                             // 0x0F84(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ThirdPersonDropletInitialSpeed;                           // 0x0F88(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0F8C(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    CanopyMID;                                                // 0x0F90(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CanopyIEWSMID;                                            // 0x0F98(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    BaseMID;                                                  // 0x0FA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    BaseDecalMID;                                             // 0x0FA8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CockpitAOAMID;                                            // 0x0FB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CockpitVVIMID;                                            // 0x0FB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CockpitCMPMID;                                            // 0x0FC0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRainLine                                   RainLine;                                                 // 0x0FC8(0x00D8) (Edit)
	struct FRainLine                                   SandLine;                                                 // 0x10A0(0x00D8) (Edit)
	float                                              AirCloudInRainLineDensityRate;                            // 0x1178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirCloudInSandLineDensityRate;                            // 0x117C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAirCurrentDirectionAdaptationRainSandLine;               // 0x1180(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAirCurrentDirectionAdaptationRainSandLineYawOnly;        // 0x1181(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAirCurrentSmallHandAvoidance;                            // 0x1182(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x1];                                       // 0x1183(0x0001) MISSED OFFSET
	float                                              AirMaximumAttenuation;                                    // 0x1184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirMaximumAcceleration;                                   // 0x1188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirRotationAdaptationRate;                                // 0x118C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirRotationInterpSpeed;                                   // 0x1190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x1194(0x0004) MISSED OFFSET
	class UEmblemDataAsset*                            EmblemAsset;                                              // 0x1198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  BlankEmblemTexture;                                       // 0x11A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPlayerWeaponActivator*                      PlayerWeaponActivator;                                    // 0x11A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              PauseBokehFocalDistance;                                  // 0x11B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PauseBokehScale;                                          // 0x11B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PauseMaxBokehSize;                                        // 0x11B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x14];                                      // 0x11BC(0x0014) MISSED OFFSET
	class UCurveVector*                                CatapultTakeoff_OffsetTransCurve;                         // 0x11D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                CatapultTakeoff_OffsetRotCurve;                           // 0x11D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 CatapultTakeoff_OffsetTrans_FSUS;                         // 0x11E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                CatapultTakeoff_OffsetTransCurveVR;                       // 0x11E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                CatapultTakeoff_OffsetRotCurveVR;                         // 0x11F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RespawnLightningInitialTime;                              // 0x11F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x11FC(0x0004) MISSED OFFSET
	TArray<struct FLightningStallStatus>               LightningStallData;                                       // 0x1200(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData29[0x5];                                       // 0x1210(0x0005) MISSED OFFSET
	EImpactCameraPlayCategory                          CurrentImpactCameraCategory;                              // 0x1215(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData30[0x2];                                       // 0x1216(0x0002) MISSED OFFSET
	class UClass*                                      CachedRemotePlayerPlaneClass;                             // 0x1218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMagneticAnomalyDetectorComponent*           MADComponent;                                             // 0x1220(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class APlayerPlane*>                        LockonAttackerPlayerPlanes;                               // 0x1228(0x0010) (ZeroConstructor, Transient)
	class UCameraViewComponent*                        CameraViewComponent;                                      // 0x1238(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            OldReplayCameraComponent;                                 // 0x1240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class AExplosiveWeapon*>                    FiredExplosiveWeapons;                                    // 0x1248(0x0010) (ZeroConstructor, Transient)
	float                                              EnvCollisionBottomLengthFromCenterInMeter;                // 0x1258(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EnvCollisionTopLengthFromPilotInMeter;                    // 0x125C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData31[0x130];                                     // 0x1260(0x0130) MISSED OFFSET
	float                                              TouchDownSpeedGraph[0x6];                                 // 0x1390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TouchDownSpeedCorrectingBase[0x6];                        // 0x13A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TouchDownSpeedCorrectingCarrier[0x6];                     // 0x13C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x10];                                      // 0x13D8(0x0010) MISSED OFFSET
	class UTexture2D*                                  GamerNameRenderTexture;                                   // 0x13E8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x330];                                     // 0x13F0(0x0330) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginTakeoff;                                           // 0x1720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndTakeoff;                                             // 0x1730(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeginCatapultTakeoff;                                   // 0x1740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeginLanding;                                           // 0x1750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndLanding;                                             // 0x1760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData34[0xE0];                                      // 0x1770(0x00E0) MISSED OFFSET
	class AActor*                                      CatapultShuttleActor;                                     // 0x1850(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CatapultTakeoffFrontGearAnimScale;                        // 0x1858(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData35[0x4C];                                      // 0x185C(0x004C) MISSED OFFSET
	class UPlayerHUDModeManager*                       PlayerHUDModeManager;                                     // 0x18A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData36[0x170];                                     // 0x18B0(0x0170) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerPlane");
		return ptr;
	}


	void UpdateThrusterAnimation(class UAnimInstance* AnimInst, const struct FName& CloseShapeName, const struct FName& OpenShapeName, float LoopMagnitude, float LoopFrequency);
	void ToggleMiniMapRadar();
	void TargetLostJammer();
	void StartTargetLostJammerCheck();
	void StartSeekerJammerCheck();
	void SetStallAltitude(float altStall);
	void SetSandVFXMaxTransparency(float TargetTransparency, float SwitchingTime);
	void SetSandVFXMaxDensity(float TargetDensity, float SwitchingTime);
	void STATIC_SetRestrictedAltitude(float AltitudeMeters);
	void STATIC_SetMaxPursuitAttackers(int NewMax, int NewMaxPursuitAttackers);
	void STATIC_SetMaxNonpursuitAttackers(int NewMax);
	void STATIC_SetMaxEnemyMissileNum(int PursuitAttackerMissileNum, int NonPursuitAttackerMissileNum);
	void SetHudWarningMessageDisplayTime(float DisplayTime);
	void SetFELocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation);
	void SetFakeGroundHeightOnlyForAirShow(float FakeHeight, bool bIsEnableFake);
	void SetEnableCheckCockpitCameraOutOfBound(bool IsEnable);
	void SetControlType(bool bIsExpert);
	void SetCatapultShuttleActor(class AActor* Actor);
	void SetCameraLocationAndOrientation(class UCameraComponent* CamComponent, class USkeletalMeshComponent* SkeletalMeshComp, const struct FName& BoneName);
	void SetCameraAndTargetLocation(class UCameraComponent* CamComponent, class USceneComponent* TargetComp, class USkeletalMeshComponent* SkeletalMeshComp, const struct FName& BoneName, const struct FName& TargetBoneName);
	void SetBattleMode(EBattleMode NewMode);
	void RestoreWeaponFromCheckpoint(int WeaponSet, int GunCount, int MainWeaponCount, int SpecialWeaponCount);
	void ResetTargetLostJammer();
	void ResetStallAltitude();
	int PlayVRSound(EVRSoundActor Type, const struct FString& EventName);
	void OnWeaponSwitch();
	void OnWeaponFireReleased();
	void OnWeaponFirePressed();
	void OnWeaponFireMissileReleased();
	void OnWeaponFireMissilePressed();
	void OnWeaponFireMissile(bool pressed);
	void OnWeaponFire(bool pressed);
	void OnUnpauseHandler();
	void OnTargetSelectReleased();
	void OnTargetSelectPressed();
	void OnReplayCameraChanged(unsigned char Type);
	void OnPlaneEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnPlaneBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnPauseHandler();
	void OnInputViewPressed();
	void OnFlareActivationRightReleased();
	void OnFlareActivationRightPressed();
	void OnFlareActivationLeftReleased();
	void OnFlareActivationLeftPressed();
	void OnFlareActivation(bool pressed);
	void OnExitCloud();
	void OnEnterCloud();
	void OnEndTakeoff__DelegateSignature();
	void OnEndLanding__DelegateSignature();
	void OnDeactivateMADComponent(class UActorComponent* Component);
	void OnCombatZoneUpdatedEvent();
	void OnChangeViewReleased();
	void OnChangeViewPressed();
	void OnCameraViewChanged(ECameraType CameraViewType);
	void OnBeginTakeoff__DelegateSignature();
	void OnBeginLanding__DelegateSignature();
	void OnBeginCatapultTakeoff__DelegateSignature();
	void OnActivateMADComponent(class UActorComponent* Component, bool bReset);
	bool IsWeaponSystemDisabled();
	bool IsSpecialWeaponTGTP();
	bool IsSpecialWeaponArmed();
	bool IsPulseGunArmed();
	bool IsOverRestrictedAltitude();
	bool IsOnGround();
	bool IsInTunnel();
	bool IsInSpaceElevator();
	bool IsInSearchLight();
	bool IsInRadarArea();
	bool IsInJammingArea();
	bool IsInImpactArea();
	bool IsInCloud();
	bool IsExpertControlType();
	bool IsBeyondPulloutLine();
	void InitializeWeaponSystem(int WeaponSet);
	void InitializeTargetLostJammer(TArray<class AAIGameObject*> InJammerTargets, float InMinLostTargetTime, float InMaxLostTargetTime, float InLostTargetWaveingTime);
	void InitializeSeekerJammer(TArray<class AAIGameObject*> InJammerTargets, float InSeekerJammerRangeInMeter);
	bool HitTest();
	float GetSpaceElevatorHeightRatio();
	class AGameObject* GetSelectedTarget();
	bool GetNimbusHUDEnabled();
	class ANimbusHUD* GetNimbusHUD();
	float GetMaxSpeedKmph();
	class AGameObject* GetLockedOnTarget();
	struct FVector GetFirstCameraLocation();
	struct FVector GetDirectionMove();
	struct FNimbusCockpitPartsAnim GetCockpitPartsAnimation();
	struct FNimbusBodyPartsAnim GetBodyPartsAnimation();
	TArray<class AGameObject*> GetAllLockedOnTargets();
	void FrameUpdate(float DeltaSeconds);
	void ForcedInvalidSeekers();
	void EndTargetLostJammerCheck();
	void EndSeekerJammerCheck();
	void EnableTakeoffInput(bool bInEnable);
	void EnablePullupWarning(bool bEnable);
	void EnablePlayerInput(bool bInEnable);
	void EnableAllExcludingCameraInput(bool bInEnable);
	void DisableWeaponSystem(bool bIsDisabled);
	void CameraViewChangedEvent(ECameraType CameraViewType);
	void BeginTakeoff(bool bCarrier, float AutoTakeoffDelay, float CatapultTakeoffEndTime, float GearUpTakeoffEndTime);
	void BeginLanding(bool bCarrier);
	float ApplySystemDamage(EPlayerSystemDamageType SystemDamageType, float Amount, class AActor* DamageCauser);
	void AddSeaSprayTrigger(const struct FVector& HitLocation, const struct FSeaExplosionInfo& SeaExplosionInfo);
	void AddKillBountyScore(class AGameObject* Target, bool bDisplayHUDMessage);
};


// Class Nimbus.OutOfCockpitWarningWidget
// 0x0078 (0x0280 - 0x0208)
class UOutOfCockpitWarningWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0208(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.OutOfCockpitWarningWidget");
		return ptr;
	}

};


// Class Nimbus.PlayerPlaneSoundComponent
// 0x0168 (0x0258 - 0x00F0)
class UPlayerPlaneSoundComponent : public UActorComponent
{
public:
	class UAkAudioEvent*                               EngineSoundPlay;                                          // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EngineSoundStop;                                          // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AirAmbientSoundPlay;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AirAmbientSoundStop;                                      // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CloudAmbientSoundPlay;                                    // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CloudAmbientSoundStop;                                    // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EngineStartFadeInSound;                                   // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AirResistanceHighGPlay;                                   // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AirResistanceHighGStop;                                   // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               GroundRefractionPlay;                                     // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               GroundRefractionStop;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ManeuverAirResistancePlay;                                // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ManeuverAirResistanceStop;                                // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               WindAmbientSoundEffectPlay;                               // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               WindAmbientSoundEffectStop;                               // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RainAmbientSoundEffectPlay;                               // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RainAmbientSoundEffectStop;                               // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SandAmbientSoundEffectPlay;                               // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SandAmbientSoundEffectStop;                               // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               JammingAmbientSoundEffectPlay;                            // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               JammingAmbientSoundEffectStop;                            // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ESMAmbientSoundEffectPlay;                                // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ESMAmbientSoundEffectStop;                                // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     NPC_JET_NORMAL;                                           // 0x01A8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     NPC_JET_NORMAL_Stop;                                      // 0x01B8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     NozzleOpenSoundEvent;                                     // 0x01C8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     NozzleCloseSoundEvent;                                    // 0x01D8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     NozzleCloseLongSoundEvent;                                // 0x01E8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     NozzleStopSoundEvent;                                     // 0x01F8(0x0010) (Edit, ZeroConstructor)
	class APlayerPlane*                                OwningPlayerPlane;                                        // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0210(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerPlaneSoundComponent");
		return ptr;
	}


	void SetPlayerSpeedKmph(float SpeedKmph);
	void SetPlayerObstacleDistance(float Value);
	void SetPlayerManeuver(float Value);
	void SetHighGTurn(float Value);
	void SetEnginePower(float EnginePower);
	void SetCloudDensity(float CloudDensity);
	void SetAltitudeMeters(float AltitudeMeters);
	void SetAirCurrentDirection(float Direction);
	void OnRestored();
};


// Class Nimbus.PlaneRadioStateComponent
// 0x0098 (0x0188 - 0x00F0)
class UPlaneRadioStateComponent : public UActorComponent
{
public:
	TArray<class ASystemObjectLine*>                   SystemObjectLines;                                        // 0x00F0(0x0010) (ZeroConstructor, Transient)
	class AGameObject*                                 OwingGameObject;                                          // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerPlane*                                Player;                                                   // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIPlane*                                    AIPlane;                                                  // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0118(0x0040) MISSED OFFSET
	class ATeamDeathMatchGameMode*                     TeamDeathMatchGameMode;                                   // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0160(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlaneRadioStateComponent");
		return ptr;
	}


	void Restore();
	void HandlerObjectFireWeapon(class AGameObject* Causer, class AGameObject* WeaponTarget, class AWeaponBase* Weapon, int WeaponNumber);
};


// Class Nimbus.PlayerWeaponActivator
// 0x03C0 (0x04B0 - 0x00F0)
class UPlayerWeaponActivator : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x00F0(0x0030) MISSED OFFSET
	class UClass*                                      MachineGunClass;                                          // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxGunCount;                                              // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class UClass*                                      MainWeaponClass;                                          // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxMainWeaponCount;                                       // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FreeRestockAmount;                                        // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreeRestockTimeMultiplier;                                // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreeRestockTime;                                          // 0x0144(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    MainWeaponShotAdjustRotation;                             // 0x0148(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	struct FPlayerSpecialWeaponConfig                  SpecialWeaponConfig1;                                     // 0x0158(0x0030) (Edit)
	struct FPlayerSpecialWeaponConfig                  SpecialWeaponConfig2;                                     // 0x0188(0x0030) (Edit)
	struct FPlayerSpecialWeaponConfig                  SpecialWeaponConfig3;                                     // 0x01B8(0x0030) (Edit)
	bool                                               bSpecialWeaponCoverTLSCheck;                              // 0x01E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01E9(0x0007) MISSED OFFSET
	class UClass*                                      UAV_ReturnMoveSpline;                                     // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpecialWeaponClass;                                       // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                MaxSpecialWeaponCount;                                    // 0x0200(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	class UClass*                                      FlareClass;                                               // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FlareParticlePerActivation;                               // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlareParticlePeriod;                                      // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlareParticleMaxSpawnAngle;                               // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FlareParticleSpawnPosition;                               // 0x021C(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    FlareParticleSpawnRotation;                               // 0x0228(0x000C) (Edit, IsPlainOldData)
	float                                              FlareEffectiveRangeSquared;                               // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FlareReloadTime;                                          // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxFlareCount;                                            // 0x023C(0x0004) (ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              ActiveSWPMeshComponent;                                   // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0248(0x0001) MISSED OFFSET
	bool                                               bCastInsetShadow;                                         // 0x0249(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x26];                                      // 0x024A(0x0026) MISSED OFFSET
	TArray<class AExplosiveWeapon*>                    ExplosiveWeaponsShot;                                     // 0x0270(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x48];                                      // 0x0280(0x0048) MISSED OFFSET
	TArray<class AGameObject*>                         HomingTargets;                                            // 0x02C8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData08[0x10];                                      // 0x02D8(0x0010) MISSED OFFSET
	TArray<class AWeaponBase*>                         SpawnedWeapons;                                           // 0x02E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData09[0x40];                                      // 0x02F8(0x0040) MISSED OFFSET
	TArray<class AWeaponBase*>                         ActiveWeapons;                                            // 0x0338(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData10[0x50];                                      // 0x0348(0x0050) MISSED OFFSET
	class AWeaponBase*                                 DummyPredictionWeapon;                                    // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x110];                                     // 0x03A0(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerWeaponActivator");
		return ptr;
	}


	bool ToggleSpecial();
	void ReleaseWeaponInput();
	void MainWeaponReleased();
	void MainWeaponPressed();
	void MachineGunReleased();
	void MachineGunPressed();
	struct FString GetWeaponNameString(EWeaponNumber WeaponNumber);
	struct FString GetSpecialWeaponNameString();
	int GetSpecialWeaponCount();
	struct FString GetMainWeaponNameString();
	int GetMainWeaponCount();
	struct FString GetGunWeaponNameString();
	int GetGunCount();
	int GetFlareCount();
	class UWeaponParameters* GetArmedWeaponParameters();
	class AWeaponBase* GetArmedWeapon();
	void FlareReleased();
	void FlarePressed();
};


// Class Nimbus.PlayGoWidget
// 0x0030 (0x0320 - 0x02F0)
class UPlayGoWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x02F0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayGoWidget");
		return ptr;
	}

};


// Class Nimbus.PlayerStructs
// 0x0000 (0x0028 - 0x0028)
class UPlayerStructs : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerStructs");
		return ptr;
	}

};


// Class Nimbus.PopUpWidget
// 0x0020 (0x0310 - 0x02F0)
class UPopUpWidget : public UUIBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x02F0(0x0018) MISSED OFFSET
	bool                                               bHasLoadingIcon;                                          // 0x0308(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0309(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PopUpWidget");
		return ptr;
	}

};


// Class Nimbus.RadarJammingZone
// 0x0000 (0x03C8 - 0x03C8)
class ARadarJammingZone : public AMultiplayerZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RadarJammingZone");
		return ptr;
	}

};


// Class Nimbus.ProgressBarWidget
// 0x0020 (0x0228 - 0x0208)
class UProgressBarWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0208(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ProgressBarWidget");
		return ptr;
	}

};


// Class Nimbus.Radio
// 0x0040 (0x03A8 - 0x0368)
class ARadio : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnMessageBegin;                                           // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageEnd;                                             // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageShow;                                            // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageHide;                                            // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Radio");
		return ptr;
	}


	void PlayMessage(const struct FString& MessageID);
	void OnMessageShow__DelegateSignature(const struct FString& MessageID);
	void OnMessageHide__DelegateSignature(const struct FString& MessageID);
	void OnMessageEnd__DelegateSignature(const struct FString& MessageID);
	void OnMessageBegin__DelegateSignature(const struct FString& MessageID);
	bool IsPlaying();
	struct FString GetCurrentSpeaker();
	struct FString GetCurrentMessageID();
	struct FString GetCurrentMessage();
	void ClearAllMessages(bool bFireCurrentMessageEndEvent);
};


// Class Nimbus.RadioChannelActor
// 0x00B0 (0x0418 - 0x0368)
class ARadioChannelActor : public AActor
{
public:
	class UAkComponent*                                AudioComponent;                                           // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0370(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RadioChannelActor");
		return ptr;
	}

};


// Class Nimbus.RadioManager
// 0x0490 (0x07F8 - 0x0368)
class ARadioManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    UpdateSubtitleEvent;                                      // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    RadioQueueUpdateEvent;                                    // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    RequeueingWaitTimeQueueUpdateEvent;                       // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    EditorRadioDataTableUpdateEvent;                          // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    EditorVolumeChangeEvent;                                  // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageBegin;                                           // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageEnd;                                             // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UDataTable*>                          RadioDataTables;                                          // 0x03D8(0x0010) (Edit, ZeroConstructor)
	class UDataTable*                                  RadioSpeakerTable;                                        // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  OverrideRadioSpeakerTable;                                // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  AutomaticSpeakerIDTable;                                  // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAkAudioEvent*>                       RadioEvents;                                              // 0x0400(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0410(0x0050) MISSED OFFSET
	TArray<struct FString>                             ForceAliveSpeakerIDs;                                     // 0x0460(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0xA8];                                      // 0x0470(0x00A8) MISSED OFFSET
	class ARadioChannelActor*                          RadioChannels[0x2];                                       // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE0];                                      // 0x0528(0x00E0) MISSED OFFSET
	bool                                               bShowRequestFailedReason;                                 // 0x0608(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideSubtitleOnVR;                                        // 0x0609(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x060A(0x0002) MISSED OFFSET
	float                                              SearchEnemyRadius;                                        // 0x060C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AllowRangeRadius;                                         // 0x0610(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1E4];                                     // 0x0614(0x01E4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RadioManager");
		return ptr;
	}


	void UpdateSubtitleEventDelegate__DelegateSignature(const struct FRadioText& Subtitle);
	void STATIC_SetSilentGroupEnabled_S(int SilentGroupIndex, bool bIsEnabled);
	void STATIC_SetRadioTypeEnabled_S(ERadioType RadioType, bool bEnabled);
	void SetRadioTypeEnabled(ERadioType RadioType, bool bEnabled);
	void STATIC_SetRadioSkipEnabled_S(bool bEnabled);
	void STATIC_SetPlayByPlayRadioGroupIDPostfixes_S(TArray<struct FRadioGroupIDPostfix> InRadioGroupIDPostfixes);
	void STATIC_SetPlayByPlayAllowRadius_S(float RadiusInMeters);
	void STATIC_SetForceOfflineEnabled_S(bool bEnabled);
	void STATIC_SetEnemyTensionEnabled_S(ERadioTension Tension, bool bIsEnabled);
	void STATIC_SetAllyTensionEnabled_S(ERadioTension Tension, bool bIsEnabled);
	void STATIC_ResetPlayCount_S(const struct FString& RadioGroupID);
	void STATIC_ResetPlayByPlayRadioGroupIDPostfixes_S();
	void RequeueingWaitTimeQueueUpdateEventDelegate__DelegateSignature(ERadioManagerChannel Channel);
	bool STATIC_RequestPlayRadioWithKeySpeaker_S(const struct FString& RadioGroupID, bool Condition, class AGameObject* KeySpeaker, int* RequestID);
	bool RequestPlayRadioWithKeySpeaker(const struct FString& RadioGroupID, bool Condition, class AGameObject* KeySpeaker, int* RequestID);
	bool STATIC_RequestPlayRadio_S(const struct FString& RadioGroupID, bool Condition, const struct FString& KeySpeakerID, int* RequestID);
	bool RequestPlayRadio(const struct FString& RadioGroupID, bool Condition, const struct FString& KeySpeakerID, int* RequestID);
	void STATIC_ReplaceRadioSpeakerName_S(const struct FString& SpeakerID, const struct FString& ReplaceSpeakerID);
	void STATIC_ReplaceEnvseID_S(const struct FString& EnvseID, const struct FString& ReplaceEnvseID);
	void STATIC_RemoveRadioRequest_S(const struct FString& RadioGroupID);
	void RemoveRadioRequest(const struct FString& RadioGroupID);
	void STATIC_RemoveAllRadioRequestAndRemainingRadio_S();
	void STATIC_RemoveAllRadioRequest_S();
	void RemoveAllRadioRequest();
	void RadioQueueUpdateEventDelegate__DelegateSignature(ERadioManagerChannel Channel, int Index);
	void STATIC_PushRequeueingWait_S(const struct FString& RadioGroupID, float Time, bool bShrink);
	void OnPreStopBusEvent(ENimbusSoundType BusType);
	void OnPreStartMiniGamePhaseEvent(bool bIsRetry);
	void OnPreRestartPhaseEvent();
	void OnPhaseEndEvent();
	void OnMessageEnd__DelegateSignature(const struct FString& GroupID, const struct FString& VoiceID, bool bGroupEnd);
	void OnMessageBegin__DelegateSignature(const struct FString& GroupID, const struct FString& VoiceID);
	void OnIGCEnableEvent(bool bEnabled);
	bool STATIC_IsRadioSkipEnabled_S();
	bool STATIC_IsChannelPlaying_S(ERadioManagerChannel Channel);
	bool IsChannelPlaying(ERadioManagerChannel Channel);
	bool STATIC_IsChannelEnabled_S(ERadioManagerChannel Channel);
	bool IsChannelEnabled(ERadioManagerChannel Channel);
	TArray<struct FString> GetRadioGroupIDs();
	void STATIC_EnableAllRadio_S();
	void EnableAllRadio();
	void EditorVolumeChangeEventDelegate__DelegateSignature();
	void EditorRadioDataTableUpdateEventDelegate__DelegateSignature();
	void STATIC_DisableRadioAfterRequest_S(int RequestID);
	void DisableRadioAfterRequest(int RequestID);
	void STATIC_ClearReplacedRadioSpeakerNames_S();
	void STATIC_ClearReplacedRadioSpeakerName_S(const struct FString& SpeakerID);
	void STATIC_ClearAllReplacedEnvseID_S();
	void STATIC_AddPlayByPlayRadioGroupIDPostfix_S(const struct FString& KeySpeakerID, const struct FString& RadioGroupIDPostfix);
};


// Class Nimbus.RailgunControliComponent
// 0x00C8 (0x01C0 - 0x00F8)
class URailgunControliComponent : public UAIComponentBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	float                                              Aim_RangeDistanceMeter;                                   // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Aim_Angle;                                                // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DummyTargetDistanceToTit;                                 // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Aim_HeadOnAngle;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Aim_OutRangeAngle;                                        // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Draw_Angle;                                               // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Draw_FadeTime;                                            // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Aim_Time;                                                 // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Aim_Start_Color;                                          // 0x0120(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                Aim_End_Color;                                            // 0x0130(0x0010) (Edit, IsPlainOldData)
	class UCurveFloat*                                 Aim_BlendRateCurves;                                      // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 Aim_AlphaCurves;                                          // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RailgunChargeRTPCName;                                    // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     RailgunChargeStartEventName;                              // 0x0158(0x0010) (Edit, ZeroConstructor)
	struct FString                                     RailgunChargeStopEventName;                               // 0x0168(0x0010) (Edit, ZeroConstructor)
	struct FString                                     RailgunChargeEndEventName;                                // 0x0178(0x0010) (Edit, ZeroConstructor)
	struct FString                                     RTPCResetEventName;                                       // 0x0188(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0198(0x0010) MISSED OFFSET
	class AGameObject*                                 Target;                                                   // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ANimbusRailgunTarget*                        DummyTarget;                                              // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RailgunControliComponent");
		return ptr;
	}


	void PlayChargeSound();
	ERailgunControliResult GetHitResult_AndReset();
	void EndChargeSound();
};


// Class Nimbus.RectennaBarrierEffect
// 0x0010 (0x0378 - 0x0368)
class ARectennaBarrierEffect : public AActor
{
public:
	float                                              Timeline_Ring_Length;                                     // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Timeline_BarrierIn_Length;                                // 0x036C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Timeline_BarrierOut_Length;                               // 0x0370(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RingRate;                                                 // 0x0374(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RectennaBarrierEffect");
		return ptr;
	}


	void OnRingMove();
	void OnBarrierIn();
	void OnBarrierFade();
	void OnBarrierActive();
};


// Class Nimbus.RectennaBarrier
// 0x0160 (0x0780 - 0x0620)
class ARectennaBarrier : public AWeaponBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0620(0x0010) MISSED OFFSET
	class UClass*                                      BarrierParticleActorClass;                                // 0x0630(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBarrierParticleActorNotAttach;                           // 0x0638(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0639(0x0007) MISSED OFFSET
	class UClass*                                      BarrierDamageParticleActorClass;                          // 0x0640(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      BarrierDamageParticleSmallActorClass;                     // 0x0648(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierDamageParticleSmallInterval;                       // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BarrierSpawnOffset;                                       // 0x0654(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierChargeDuration;                                    // 0x0660(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierChargeFinishSoundStartTime;                        // 0x0664(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierActiveDuration;                                    // 0x0668(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierDamageToPlayer;                                    // 0x066C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierDamageToOthers;                                    // 0x0670(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierFirstDamageInterval;                               // 0x0674(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierDamageInterval;                                    // 0x0678(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierDamageRadiusMeters;                                // 0x067C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierRippleSurfaceRadiusMeters;                         // 0x0680(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrierEndFadeTime;                                       // 0x0684(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPassBullets;                                             // 0x0688(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNotifyInterceptEvent;                                    // 0x0689(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUesRingDamage;                                           // 0x068A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x068B(0x0001) MISSED OFFSET
	float                                              RingDamage;                                               // 0x068C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RingDamageInterval;                                       // 0x0690(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RingDamageWidthThickness;                                 // 0x0694(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RingDamageVerticalWidthThickness;                         // 0x0698(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RingStartLength;                                          // 0x069C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RingEndLength;                                            // 0x06A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlayStruckByLightning;                                   // 0x06A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x06A5(0x0003) MISSED OFFSET
	struct FString                                     RectennaChargeSoundEventName;                             // 0x06A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RectennaChargeFinishSoundEventName;                       // 0x06B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RectennaExpansionSoundEventName;                          // 0x06C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RectennaBarrierSoundEventName;                            // 0x06D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RectennaBarrierStopSoundEventName;                        // 0x06E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RectennaDisappearedSoundEventName;                        // 0x06F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       RectennaBarrierRTPCName;                                  // 0x0708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESoundChannelType                                  RectennaBarrierHitSoundType;                              // 0x0710(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0711(0x0007) MISSED OFFSET
	TArray<struct FDamageObjectData>                   ActiveGameObjects;                                        // 0x0718(0x0010) (ZeroConstructor)
	class ARectennaBarrierEffect*                      BarrierParticleActor;                                     // 0x0728(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              BarrierDamageParticleActors;                              // 0x0730(0x0010) (ZeroConstructor)
	TArray<class AActor*>                              BarrierDamageParticleSmallActors;                         // 0x0740(0x0010) (ZeroConstructor)
	class AActor*                                      BarrierSoundActor;                                        // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x28];                                      // 0x0758(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RectennaBarrier");
		return ptr;
	}


	void OnReleaseBarrierWeapon__DelegateSignature();
	bool IsActiveBarrier();
	float GetBarrierRippleSurfaceRadiusMeters();
	float GetBarrierDamageRadiusMeters();
	float GetBarrierChargeDuration();
	float GetBarrierActiveDuration();
	float BarrierEndOpacity();
};


// Class Nimbus.ReplayCameraInfoWidget
// 0x0338 (0x0540 - 0x0208)
class UReplayCameraInfoWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x338];                                     // 0x0208(0x0338) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayCameraInfoWidget");
		return ptr;
	}


	void OnCameraSettingsUpdate(unsigned char CameraId, const struct FCameraSettings& CameraSettings);
};


// Class Nimbus.ReplayManager
// 0x0000 (0x0028 - 0x0028)
class UReplayManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayManager");
		return ptr;
	}


	bool STATIC_IsIGCPlaybackAllowed(class UWorld* World);
};


// Class Nimbus.ReplayPassCameraActor
// 0x0240 (0x0B60 - 0x0920)
class AReplayPassCameraActor : public ACameraActor
{
public:
	class ANimbusReplayPawn*                           ReplayPawn;                                               // 0x0920(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1F8];                                     // 0x0928(0x01F8) MISSED OFFSET
	class AAIGameObject*                               ConstraintObj;                                            // 0x0B20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0B28(0x0018) MISSED OFFSET
	class UReplayWidget*                               ReplayWidget;                                             // 0x0B40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UReplayCameraInfoWidget*                     CameraInfoWidget;                                         // 0x0B48(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0B50(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayPassCameraActor");
		return ptr;
	}

};


// Class Nimbus.ReplayPassCameraComponent
// 0x0020 (0x0970 - 0x0950)
class UReplayPassCameraComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0950(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayPassCameraComponent");
		return ptr;
	}


	void GetCameraView(float DeltaTime, struct FMinimalViewInfo* DesiredView);
	void Deactivate();
	void Activate(bool bReset);
};


// Class Nimbus.NimbusReplayPawn
// 0x0E00 (0x11F0 - 0x03F0)
class ANimbusReplayPawn : public ASpectatorPawn
{
public:
	class USkeletalMesh*                               PreviewMesh;                                              // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReplayWidgetClass;                                        // 0x03F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CameraInfoWidgetClass;                                    // 0x0400(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  PassCameraSettingsTable;                                  // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PassCameraDebugSettingsTable;                             // 0x0410(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  PassCameraDefaultSettingsTable;                           // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  CameraSettingsTable;                                      // 0x0420(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0428(0x0018) MISSED OFFSET
	class USkeletalMeshComponent*                      PreviewMeshComponent;                                     // 0x0440(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD40];                                     // 0x0448(0x0D40) MISSED OFFSET
	class APlayerPlane*                                PlayerPlane;                                              // 0x1188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x1190(0x0040) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCameraSettingsUpdated;                                  // 0x11D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCameraChanged;                                          // 0x11E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.NimbusReplayPawn");
		return ptr;
	}


	void OnPlayerReposition();
	void OnCameraSettingsUpdated__DelegateSignature(unsigned char CameraId, const struct FCameraSettings& CameraSettings);
	void OnCameraChanged__DelegateSignature(unsigned char CameraId);
};


// Class Nimbus.ThirdPersonCameraComponent
// 0x0080 (0x0AD0 - 0x0A50)
class UThirdPersonCameraComponent : public UAnimatedCameraComponent
{
public:
	class UAnimSequence*                               AnimDataExpert;                                           // 0x0A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollDelay;                                                // 0x0A58(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchDelay;                                               // 0x0A5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMagnitude;                                           // 0x0A60(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchReturnRatio;                                         // 0x0A64(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableYawAnimationBlend;                                 // 0x0A68(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0A69(0x000F) MISSED OFFSET
	class UCurveFloat*                                 AirModifyRateCurve;                                       // 0x0A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 AirStrengthMoveRateCurve;                                 // 0x0A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRatioLoseSpeed;                                       // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollRatiRreturnSpeed;                                     // 0x0A8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveSpeed;                                             // 0x0A90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x0A94(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ThirdPersonCameraComponent");
		return ptr;
	}

};


// Class Nimbus.ReplayThirdPersonCameraComponent
// 0x0000 (0x0AD0 - 0x0AD0)
class UReplayThirdPersonCameraComponent : public UThirdPersonCameraComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayThirdPersonCameraComponent");
		return ptr;
	}

};


// Class Nimbus.ReplayWidget
// 0x0150 (0x0620 - 0x04D0)
class UReplayWidget : public UMenuBaseWidget
{
public:
	class ANimbusReplayPawn*                           ReplayPawn;                                               // 0x04D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x120];                                     // 0x04D8(0x0120) MISSED OFFSET
	class UClass*                                      SkipButtonWidgetClass;                                    // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 SkipButton;                                               // 0x0600(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0608(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReplayWidget");
		return ptr;
	}

};


// Class Nimbus.ScrollboxMenuBaseWidget
// 0x0050 (0x0520 - 0x04D0)
class UScrollboxMenuBaseWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04D0(0x0028) MISSED OFFSET
	class UCanvasPanel*                                UmgScrollBar;                                             // 0x04F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgScrollBarImage;                                        // 0x0500(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0508(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ScrollboxMenuBaseWidget");
		return ptr;
	}

};


// Class Nimbus.RewardItemWidget
// 0x0070 (0x0590 - 0x0520)
class URewardItemWidget : public UScrollboxMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0520(0x0008) MISSED OFFSET
	float                                              MinTimeLeftToShowNextButtonSeconds;                       // 0x0528(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x64];                                      // 0x052C(0x0064) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RewardItemWidget");
		return ptr;
	}

};


// Class Nimbus.RewardMedalWidget
// 0x01A0 (0x06C0 - 0x0520)
class URewardMedalWidget : public UScrollboxMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0520(0x0008) MISSED OFFSET
	float                                              MinTimeLeftToShowNextButtonSeconds;                       // 0x0528(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD4];                                      // 0x052C(0x00D4) MISSED OFFSET
	TArray<class UMedalWidget*>                        MedalImageWidget;                                         // 0x0600(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0610(0x0040) MISSED OFFSET
	TArray<struct FStringAssetReferenceAsyncLoadRequest> AsyncLoadRequests;                                        // 0x0650(0x0010) (ZeroConstructor)
	TArray<struct FMedalTextureApplication>            LoadedTextures;                                           // 0x0660(0x0010) (ZeroConstructor)
	class UMaterialInterface*                          DynamicGlowMaterialTemplateRef;                           // 0x0670(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            GlowDynamicMaterials;                                     // 0x0678(0x0010) (ZeroConstructor)
	TArray<class UImage*>                              ImageForBGDots;                                           // 0x0688(0x0010) (ExportObject, ZeroConstructor)
	class UMaterialInterface*                          UsmMaterialToApply;                                       // 0x0698(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllAsyncLoadedTextureApplied;                            // 0x06A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1F];                                      // 0x06A1(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RewardMedalWidget");
		return ptr;
	}

};


// Class Nimbus.RewardScrollboxBaseWidget
// 0x0040 (0x0330 - 0x02F0)
class URewardScrollboxBaseWidget : public UUIBaseWidget
{
public:
	int                                                IncrFocusableItemStep;                                    // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x02F4(0x0014) MISSED OFFSET
	class UUIScrollBarWidget*                          UmgUIScrollBar;                                           // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0310(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RewardScrollboxBaseWidget");
		return ptr;
	}

};


// Class Nimbus.RewardScrollboxItemWidget
// 0x0040 (0x0370 - 0x0330)
class URewardScrollboxItemWidget : public URewardScrollboxBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0330(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RewardScrollboxItemWidget");
		return ptr;
	}

};


// Class Nimbus.RewardScrollboxMedalWidget
// 0x0140 (0x0470 - 0x0330)
class URewardScrollboxMedalWidget : public URewardScrollboxBaseWidget
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0330(0x00A0) MISSED OFFSET
	TArray<class UMedalWidget*>                        MedalImageWidget;                                         // 0x03D0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x30];                                      // 0x03E0(0x0030) MISSED OFFSET
	TArray<struct FStringAssetReferenceAsyncLoadRequestRewardMedal> AsyncLoadRequests;                                        // 0x0410(0x0010) (ZeroConstructor)
	TArray<struct FTextureApplicationRewardScrollboxMedal> LoadedTextures;                                           // 0x0420(0x0010) (ZeroConstructor)
	class UMaterialInterface*                          DynamicGlowMaterialTemplateRef;                           // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            GlowDynamicMaterials;                                     // 0x0438(0x0010) (ZeroConstructor)
	TArray<class UImage*>                              ImageForBGDots;                                           // 0x0448(0x0010) (ExportObject, ZeroConstructor)
	class UMaterialInterface*                          UsmMaterialToApply;                                       // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllAsyncLoadedTextureApplied;                            // 0x0460(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0461(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.RewardScrollboxMedalWidget");
		return ptr;
	}

};


// Class Nimbus.SandCloudManager
// 0x0000 (0x0028 - 0x0028)
class USandCloudManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SandCloudManager");
		return ptr;
	}

};


// Class Nimbus.SandCloudVolume
// 0x0008 (0x03A8 - 0x03A0)
class ASandCloudVolume : public AVolume
{
public:
	float                                              Density;                                                  // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SandCloudVolume");
		return ptr;
	}

};


// Class Nimbus.SandwichBattle
// 0x0038 (0x0060 - 0x0028)
class USandwichBattle : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SandwichBattle");
		return ptr;
	}

};


// Class Nimbus.ScrollableDialogWidget
// 0x0030 (0x03E0 - 0x03B0)
class UScrollableDialogWidget : public UScrollableDialogWidgetBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x03B0(0x0020) MISSED OFFSET
	class UTextBlock*                                  UmgTitleTextBlock;                                        // 0x03D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ScrollableDialogWidget");
		return ptr;
	}

};


// Class Nimbus.SetupMenuControlsWidget
// 0x0340 (0x0810 - 0x04D0)
class USetupMenuControlsWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x340];                                     // 0x04D0(0x0340) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SetupMenuControlsWidget");
		return ptr;
	}

};


// Class Nimbus.SetupMenuTextWidget
// 0x0000 (0x04D0 - 0x04D0)
class USetupMenuTextWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SetupMenuTextWidget");
		return ptr;
	}

};


// Class Nimbus.SetupMenuVoiceWidget
// 0x0000 (0x04D0 - 0x04D0)
class USetupMenuVoiceWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SetupMenuVoiceWidget");
		return ptr;
	}

};


// Class Nimbus.SFFSParameters
// 0x0018 (0x00F8 - 0x00E0)
class USFFSParameters : public UBombParameters
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00E0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SFFSParameters");
		return ptr;
	}

};


// Class Nimbus.SceneDataAsset
// 0x0050 (0x0080 - 0x0030)
class USceneDataAsset : public UDataAsset
{
public:
	struct FString                                     ThumbnailTexture;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FString                                     MovieMaterial;                                            // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FString                                     ManaTexturePath;                                          // 0x0050(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SubtitlePath;                                             // 0x0060(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SceneVoice;                                               // 0x0070(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SceneDataAsset");
		return ptr;
	}

};


// Class Nimbus.SFFSBomb
// 0x0038 (0x0788 - 0x0750)
class ASFFSBomb : public ABomb
{
public:
	class UChildSpawnerComponent*                      ChildSpawner;                                             // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      ChildClass;                                               // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScatterStart;                                             // 0x0760(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScatterInterval;                                          // 0x0764(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScatterAngle;                                             // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScatterCount;                                             // 0x076C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScatteringTtartTimeStartAngle;                            // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChildInitialSpeed;                                        // 0x0774(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0778(0x0008) MISSED OFFSET
	bool                                               bImpactPointPerfectPrediction;                            // 0x0780(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0781(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SFFSBomb");
		return ptr;
	}

};


// Class Nimbus.SFFSBombMovementComponent
// 0x0010 (0x02F8 - 0x02E8)
class USFFSBombMovementComponent : public UBombMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02E8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SFFSBombMovementComponent");
		return ptr;
	}

};


// Class Nimbus.SharePlayManager
// 0x0000 (0x0028 - 0x0028)
class USharePlayManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SharePlayManager");
		return ptr;
	}

};


// Class Nimbus.SigmaSaveGame
// 0x0608 (0x0638 - 0x0030)
class USigmaSaveGame : public UNimbusSaveGame
{
public:
	struct FSystemSaveData                             SystemData;                                               // 0x0030(0x0060) (SaveGame)
	struct FOptionsSaveData                            OptionsData;                                              // 0x0090(0x00C0) (SaveGame)
	struct FCommonSaveData                             CommonData;                                               // 0x0150(0x01C8) (SaveGame)
	struct FCampaignSaveData                           CampaignData;                                             // 0x0318(0x0120) (SaveGame)
	struct FCampaignSaveData                           VRCampaignData;                                           // 0x0438(0x0120) (SaveGame)
	struct FOnlineSaveData                             OnlineData;                                               // 0x0558(0x00E0) (SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SigmaSaveGame");
		return ptr;
	}

};


// Class Nimbus.SODParameters
// 0x0010 (0x0138 - 0x0128)
class USODParameters : public UMissileParameters
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0128(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SODParameters");
		return ptr;
	}

};


// Class Nimbus.SODBomb
// 0x0030 (0x08D0 - 0x08A0)
class ASODBomb : public AMissile
{
public:
	class UChildSpawnerComponent*                      ChildSpawner;                                             // 0x08A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      ChildClass;                                               // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DispersionStartSquared;                                   // 0x08B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DispersionIntervalSquared;                                // 0x08B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DispersionAngle;                                          // 0x08B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DispersionCount;                                          // 0x08BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x08C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SODBomb");
		return ptr;
	}

};


// Class Nimbus.SODMovementParameters
// 0x0000 (0x0078 - 0x0078)
class USODMovementParameters : public UMissileMovementParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SODMovementParameters");
		return ptr;
	}

};


// Class Nimbus.SODHomingParameters
// 0x0000 (0x0078 - 0x0078)
class USODHomingParameters : public UMissileHomingParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SODHomingParameters");
		return ptr;
	}

};


// Class Nimbus.SODMovementComponent
// 0x0010 (0x0358 - 0x0348)
class USODMovementComponent : public UMissileMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0348(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SODMovementComponent");
		return ptr;
	}

};


// Class Nimbus.SoundChannelActor
// 0x0020 (0x0388 - 0x0368)
class ASoundChannelActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	class AActor*                                      AttachActor;                                              // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0378(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SoundChannelActor");
		return ptr;
	}


	struct FAdditionalSoundChannelParams STATIC_MakeAdditionalSoundParams(float InCloudDensity);
	bool GetIsPlaying();
};


// Class Nimbus.SoundChannelManager
// 0x0010 (0x0378 - 0x0368)
class ASoundChannelManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0368(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SoundChannelManager");
		return ptr;
	}


	void PlaySoundAttached(ESoundChannelType Type, class AActor* AttachActor, const struct FVector& RelativeLocation, const struct FAdditionalSoundChannelParams& Params);
	void PlaySoundAtLocationWithSwitch(ESoundChannelType Type, const struct FVector& Location, const struct FAdditionalSoundChannelParams& Params, const struct FName& SwitchGroup, const struct FName& SwitchState);
	void PlaySoundAtLocation(ESoundChannelType Type, const struct FVector& Location, const struct FAdditionalSoundChannelParams& Params);
	void OnPreRestartPhaseEvent();
	class ASoundChannelManager* STATIC_GetSoundChannelManager();
};


// Class Nimbus.SSMParameters
// 0x0008 (0x0130 - 0x0128)
class USSMParameters : public UMissileParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SSMParameters");
		return ptr;
	}

};


// Class Nimbus.SoundDummyBullet
// 0x0028 (0x0050 - 0x0028)
class USoundDummyBullet : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SoundDummyBullet");
		return ptr;
	}

};


// Class Nimbus.SSMissile
// 0x0008 (0x08A8 - 0x08A0)
class ASSMissile : public AMissile
{
public:
	float                                              AltitudeFromLaunch;                                       // 0x08A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x08A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SSMissile");
		return ptr;
	}

};


// Class Nimbus.SSMissileMovementParameters
// 0x0000 (0x0078 - 0x0078)
class USSMissileMovementParameters : public UMissileMovementParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SSMissileMovementParameters");
		return ptr;
	}

};


// Class Nimbus.SSMissileHomingParameters
// 0x0008 (0x0080 - 0x0078)
class USSMissileHomingParameters : public UMissileHomingParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SSMissileHomingParameters");
		return ptr;
	}

};


// Class Nimbus.SSMissileMovementComponent
// 0x0010 (0x0358 - 0x0348)
class USSMissileMovementComponent : public UMissileMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0348(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SSMissileMovementComponent");
		return ptr;
	}

};


// Class Nimbus.SFFSBombMovementParameters
// 0x0008 (0x0090 - 0x0088)
class USFFSBombMovementParameters : public UBombMovementParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0088(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SFFSBombMovementParameters");
		return ptr;
	}

};


// Class Nimbus.StaffCreditsWidget
// 0x0140 (0x0610 - 0x04D0)
class UStaffCreditsWidget : public UMenuBaseWidget
{
public:
	float                                              OptionsMenuModeTime;                                      // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_FirstSpace;                                          // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsAce7;                                         // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsTitle;                                        // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsJobpart;                                      // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsPostandName;                                  // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsDescription;                                  // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsCompany;                                      // 0x04EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsNameDouble;                                   // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsNameQuintuple;                                // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Size_CreditsLicenseL;                                     // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04FC(0x0008) MISSED OFFSET
	float                                              Size_CreditsSpace;                                        // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayFastSpeed;                                            // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SkipDisplayDuration;                                      // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     MovieMaterialPath;                                        // 0x0510(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     ManaTexturePath;                                          // 0x0520(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0xE0];                                      // 0x0530(0x00E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StaffCreditsWidget");
		return ptr;
	}

};


// Class Nimbus.StandaloneTextStatWidget
// 0x00D8 (0x0308 - 0x0230)
class UStandaloneTextStatWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0230(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StandaloneTextStatWidget");
		return ptr;
	}


	void OnWeaponActivatorInitialize();
};


// Class Nimbus.StereoWidget
// 0x02E8 (0x04F0 - 0x0208)
class UStereoWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	float                                              CentralDepth;                                             // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2DC];                                     // 0x0214(0x02DC) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StereoWidget");
		return ptr;
	}

};


// Class Nimbus.StereoWidgetActor
// 0x0070 (0x03D8 - 0x0368)
class AStereoWidgetActor : public AActor
{
public:
	class UClass*                                      RootUserWidgetClass;                                      // 0x0368(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWidgetToTextureConverter*                   StereoWidgetConverter;                                    // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWidgetToTextureConverter*                   OverlayTextureConverter;                                  // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStereoWidget*                               StereoWidget;                                             // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      StereoWidgetClass;                                        // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          StereoUIMaterial;                                         // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OutOfCockpitWanringWidget;                                // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                OverlayGlowColor;                                         // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              OutOfCockpitWarningFadeTime;                              // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutOfCockpitMiniOpacity;                                  // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UOutOfCockpitWarningWidget*                  OutOfCockpitWanringWidgetObject;                          // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                RootWidget;                                               // 0x03C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StereoWidgetActor");
		return ptr;
	}

};


// Class Nimbus.StringComparator
// 0x0028 (0x0050 - 0x0028)
class UStringComparator : public UVariableComparator
{
public:
	class UStrProperty*                                Property;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.StringComparator");
		return ptr;
	}

};


// Class Nimbus.SubmarineDamagedState
// 0x0210 (0x0300 - 0x00F0)
class USubmarineDamagedState : public UNimbusGameObjectComponent
{
public:
	struct FString                                     StaticMeshComponentName;                                  // 0x00F0(0x0010) (Edit, ZeroConstructor)
	struct FString                                     BridgeMeshComponentName;                                  // 0x0100(0x0010) (Edit, ZeroConstructor)
	bool                                               bApplyExplosionPhysics;                                   // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class USkeletalMesh*                               PhysicsMesh;                                              // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             PartsDestroyedVFX;                                        // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayDeathAnimation;                                      // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	class USkeletalMesh*                               AnimationMesh;                                            // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeathAnimationDelay;                                      // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TArray<class UAnimSequence*>                       DeathAnimations;                                          // 0x0140(0x0010) (Edit, ZeroConstructor)
	bool                                               bApplySeaSprayForPhysicsMesh;                             // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	struct FSeaExplosionInfo                           SeaExplosionInfoForPhysicsMesh;                           // 0x0154(0x0008) (Edit)
	bool                                               bIsHorizontalPitch;                                       // 0x015C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x015D(0x0003) MISSED OFFSET
	float                                              PitchRotationPerSec;                                      // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MainBodyDestructionDelayTime;                             // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSubmarineDamagedVFXInfo>            ExtraVfxInfo;                                             // 0x0168(0x0010) (Edit, ZeroConstructor)
	class AAIGroundVehicle*                            OwnerGameObject;                                          // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        OwnerMeshComponent;                                       // 0x0180(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        OwnerBridgeMeshComponent;                                 // 0x0188(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PhysicsMeshComponent;                                     // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      AnimationMeshComponent;                                   // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              VfxAttachedComponent;                                     // 0x01A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x50];                                      // 0x01A8(0x0050) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            PartsDestroyedPSCs;                                       // 0x01F8(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0xB8];                                      // 0x0208(0x00B8) MISSED OFFSET
	TArray<class AGameObject*>                         ChildGameObjects;                                         // 0x02C0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FSubmarineDamagedStateInstance>      DamagedStateInstances;                                    // 0x02D0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData07[0x8];                                       // 0x02E0(0x0008) MISSED OFFSET
	TArray<struct FSubmarinePartsDamageVFXInfo>        PartsDamageEffects;                                       // 0x02E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData08[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SubmarineDamagedState");
		return ptr;
	}


	void OnVisibilityChanged(bool bVisibility);
	void OnRestored();
	void OnComponentHitSurface(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class Nimbus.SubmarineBarrierDroneComponent
// 0x0050 (0x0140 - 0x00F0)
class USubmarineBarrierDroneComponent : public UActorComponent
{
public:
	class AAIGroundVehicle*                            OwningGameObject;                                         // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMesh*                                 BarrierDroneOrbitMesh;                                    // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrierDroneOrbitMeshLerpSpeed;                           // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrierDroneLerpSpeed;                                    // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrierDroneMinAltitudeInMeters;                          // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BarrierDroneOrbitMeshBaseLocationOffset;                  // 0x010C(0x000C) (Edit, IsPlainOldData)
	class UStaticMeshComponent*                        BarrierDroneOrbitMeshComponent;                           // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               BarrierDroneOrbitMeshSocketNames;                         // 0x0120(0x0010) (ZeroConstructor, Transient)
	TArray<struct FBarrierDroneInfo>                   BarrierDroneInfoList;                                     // 0x0130(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SubmarineBarrierDroneComponent");
		return ptr;
	}


	void StartBarrierDroneDefenceBySocketInfo(TArray<struct FBarrierDroneSocketInfo> InBarrierDroneSocketInfoList);
	void StartBarrierDroneDefence(TArray<class AAIHeli*> InBarrierDroneList);
	void OnRestored();
	void EndBarrierDroneDefence();
};


// Class Nimbus.SubmarineMoveComponent
// 0x01A0 (0x0290 - 0x00F0)
class USubmarineMoveComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        SubmarineBodyMeshComponent;                               // 0x00F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0100(0x0028) MISSED OFFSET
	class AActor*                                      OwningActor;                                              // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAIGroundVehicle*                            OwningGameObject;                                         // 0x0130(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveVector*                                TransCurve;                                               // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveVector*                                RotCurve;                                                 // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x78];                                      // 0x0148(0x0078) MISSED OFFSET
	class USkeletalMeshComponent*                      RailgunSkeletalMeshComponent;                             // 0x01C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     NoseLiftLocation;                                         // 0x01C8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    NoseLiftRotation;                                         // 0x01D4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                NoseLiftStartTransCurve;                                  // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                NoseLiftStartRotCurve;                                    // 0x01E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                NoseLiftEndTransCurve;                                    // 0x01F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                NoseLiftEndRotCurve;                                      // 0x01F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BreakDownDuration;                                        // 0x0200(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BreakDownParameter1;                                      // 0x0204(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     UnderWaterLocation;                                       // 0x0208(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	class UCurveVector*                                DiveTransCurve;                                           // 0x0218(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                DiveRotCurve;                                             // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OnWaterLocation;                                          // 0x0228(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class UCurveVector*                                SurfaceTransCurve;                                        // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                SurfaceRotCurve;                                          // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FSubmarineSeaVFXInfo>                DiveEffects;                                              // 0x0248(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSubmarineSeaVFXInfo>                SurfaceEffects;                                           // 0x0258(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSubmarineTrailVFXInfo>              TrailParticles;                                           // 0x0268(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bTrailParticlesDebug;                                     // 0x0278(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	float                                              RailgunExtractDuration;                                   // 0x027C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RailgunBrokenDuration;                                    // 0x0280(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0xC];                                       // 0x0284(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SubmarineMoveComponent");
		return ptr;
	}


	void StartBreakDownProgress();
	void OnRestored();
};


// Class Nimbus.SurveillanceComponent
// 0x0000 (0x00F8 - 0x00F8)
class USurveillanceComponent : public UAIComponentBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SurveillanceComponent");
		return ptr;
	}


	void OnPlayerEngaged();
	void OnPlayerDetected();
	void OnDroneSpawned();
	void OnDroneDestroyed();
};


// Class Nimbus.SubtitleWidget
// 0x00E8 (0x0318 - 0x0230)
class USubtitleWidget : public UNimbusUserWidget
{
public:
	struct FLinearColor                                MessageTextColorOverride;                                 // 0x0230(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	ESlateVisibility                                   RadioBracketLeftVisibility;                               // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESlateVisibility                                   RadioBracketRightTopVisibility;                           // 0x0241(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESlateVisibility                                   RadioBracketRightCenterVisibility;                        // 0x0242(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESlateVisibility                                   RadioBracketRightBottomVisibility;                        // 0x0243(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0244(0x00C0) MISSED OFFSET
	float                                              WarningBlinkTimeSeconds;                                  // 0x0304(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0308(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SubtitleWidget");
		return ptr;
	}


	void RadioMessageReceived(const struct FRadioText& RadioText);
	void OnHUDEnabled();
	void OnHUDDisabled();
	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
	void OnCameraViewChanged(ECameraType CameraType);
	void OnAnalyzeAnimationStart();
	void OnAnalyzeAnimationShow(bool bShow);
	void OnAnalyzeAnimationEnd();
	void DebugSetVRLocation(const struct FVector2D& NewLocation);
	void DebugPrintVRLocation();
};


// Class Nimbus.SystemObject
// 0x0040 (0x0D20 - 0x0CE0)
class ASystemObject : public AAIGameObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0CE0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObject");
		return ptr;
	}

};


// Class Nimbus.SystemObjectDummyTarget
// 0x0050 (0x0D70 - 0x0D20)
class ASystemObjectDummyTarget : public ASystemObject
{
public:
	bool                                               bIsBillboardMove;                                         // 0x0D20(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0D21(0x0007) MISSED OFFSET
	class UCurveFloat*                                 DistanceToOwnerCurve;                                     // 0x0D28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0D30(0x0010) MISSED OFFSET
	class APlayerPlane*                                PlayerPlane;                                              // 0x0D40(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0D48(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectDummyTarget");
		return ptr;
	}

};


// Class Nimbus.SystemObjectImpactArea
// 0x0040 (0x0D60 - 0x0D20)
class ASystemObjectImpactArea : public ASystemObject
{
public:
	float                                              Radius;                                                   // 0x0D20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bInsideImpactAreaIsOutline;                               // 0x0D24(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAreaOutlineSliceDisplay;                                 // 0x0D25(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bImpactAreaSliceDisplay;                                  // 0x0D26(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0D27(0x0001) MISSED OFFSET
	float                                              MinAltitudeInMeter;                                       // 0x0D28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x34];                                      // 0x0D2C(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectImpactArea");
		return ptr;
	}


	void SetAreaModeShrinking(float InTime, float InWaitTime);
	void SetAreaModeExpansion(float InFallDelaySeconds, float InHeliosRadioForeWarnTime);
};


// Class Nimbus.SystemObjectLightning
// 0x00B0 (0x0DD0 - 0x0D20)
class ASystemObjectLightning : public ASystemObject
{
public:
	float                                              BoundingSphereRadiusMeters;                               // 0x0D20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LightningEffectDistanceMeters;                            // 0x0D24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LightningUpDisplayOffsetWhenStruckMeters;                 // 0x0D28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LightningForwardDisplayOffsetWhenStruckMeters;            // 0x0D2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayMin;                                                 // 0x0D30(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DelayMax;                                                 // 0x0D34(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LifeTimeMin;                                              // 0x0D38(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LifeTimeMax;                                              // 0x0D3C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PointLightIntensityMultiplier;                            // 0x0D40(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinimumDistanceFromCamera;                                // 0x0D44(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SoundEvent;                                               // 0x0D48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AmbientSoundEvent;                                        // 0x0D50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AmbientSoundStopEvent;                                    // 0x0D58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 PointLightIntensityCurve;                                 // 0x0D60(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    LightningVFXComponent;                                    // 0x0D68(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        SourcePointLight;                                         // 0x0D70(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0D78(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectLightning");
		return ptr;
	}


	void OnLightningStrike();
	bool IsPositionInRange(const struct FVector& Position);
	bool IsEnableVFX();
	void InitializeVariablesFromBP(float MinDelay, float MaxDelay, float MinLifeTime, float MaxLifetime, float LightIntensityMultiplier, float MinDistanceFromCamera);
	void EnableVFX(bool bEnabled);
};


// Class Nimbus.SystemObjectLine
// 0x0040 (0x0D60 - 0x0D20)
class ASystemObjectLine : public ASystemObject
{
public:
	ESystemLineType                                    LineType;                                                 // 0x0D20(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D21(0x0003) MISSED OFFSET
	struct FVector                                     RadarIndicatorRelativePosition;                           // 0x0D24(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0D30(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectLine");
		return ptr;
	}


	void OnCombatZoneUpdatedEvent();
};


// Class Nimbus.SystemObjectRadarArea
// 0x0010 (0x0D30 - 0x0D20)
class ASystemObjectRadarArea : public ASystemObject
{
public:
	float                                              Radius;                                                   // 0x0D20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0D24(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectRadarArea");
		return ptr;
	}

};


// Class Nimbus.SystemObjectRadarDisplayObject
// 0x0020 (0x0D40 - 0x0D20)
class ASystemObjectRadarDisplayObject : public ASystemObject
{
public:
	TArray<class UTexture2D*>                          DisplayTextures;                                          // 0x0D20(0x0010) (Edit, ZeroConstructor)
	float                                              AnimationCycleTime;                                       // 0x0D30(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimationInitialDelayRatio;                               // 0x0D34(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0D38(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectRadarDisplayObject");
		return ptr;
	}

};


// Class Nimbus.SystemObjectJammingArea
// 0x0010 (0x0D30 - 0x0D20)
class ASystemObjectJammingArea : public ASystemObject
{
public:
	float                                              Radius;                                                   // 0x0D20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0D24(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectJammingArea");
		return ptr;
	}

};


// Class Nimbus.SystemObjectSE
// 0x0020 (0x0D40 - 0x0D20)
class ASystemObjectSE : public ASystemObject
{
public:
	class UAkAudioEvent*                               SoundEventToPlay;                                         // 0x0D20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SoundEventToStop;                                         // 0x0D28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoPlay;                                                // 0x0D30(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0D31(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectSE");
		return ptr;
	}


	void StopAmbientSound();
	void SetVolume(float InVolume);
	void PlayAmbientSound();
};


// Class Nimbus.SystemObjectSearchLight
// 0x0110 (0x0E30 - 0x0D20)
class ASystemObjectSearchLight : public ASystemObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0D20(0x0004) MISSED OFFSET
	struct FRotator                                    OffsetRotate;                                             // 0x0D24(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SearchTargetDeg;                                          // 0x0D30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESearchMoveMode                                    SearchMoveMode;                                           // 0x0D34(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0D35(0x0003) MISSED OFFSET
	float                                              SearchWaitTime;                                           // 0x0D38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SearchingRotateSpeedNew;                                  // 0x0D3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingPitch;                                            // 0x0D40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingYaw;                                              // 0x0D44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingRotateSpeedNew;                                   // 0x0D48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSeeingAproaching;                                        // 0x0D4C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0D4D(0x0003) MISSED OFFSET
	float                                              SeeingAproachingDistance;                                 // 0x0D50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SeeingAproachingSpeed;                                    // 0x0D54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESearchLightTargetPriority                         TargetPriority;                                           // 0x0D58(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0D59(0x0003) MISSED OFFSET
	float                                              RadiationAngle;                                           // 0x0D5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CollisionAngle;                                           // 0x0D60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0D64(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              SeeingAproachingDistanceUU;                               // 0x0D68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ThicknessRete;                                            // 0x0D6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightColor;                                               // 0x0D70(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	class USphereComponent*                            SphereComponent;                                          // 0x0D80(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SearchLightRoot;                                          // 0x0D88(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SearchLightCollisionMesh;                                 // 0x0D90(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         SpotLightComponent;                                       // 0x0D98(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LightBeamMeshComponent;                                   // 0x0DA0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LightBaseMeshComponent;                                   // 0x0DA8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x0DB0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnReached;                                                // 0x0DB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCaptured;                                               // 0x0DC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0DD8(0x0028) MISSED OFFSET
	class AGameObject*                                 TrackingTarget;                                           // 0x0E00(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 SwapAproachingTarget;                                     // 0x0E08(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AGameObject*>                         HitActorLog;                                              // 0x0E10(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0E20(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectSearchLight");
		return ptr;
	}


	void TurnOn();
	void TurnOff();
	void StopAmbientSound();
	void PlayAmbientSound();
	void OnReached__DelegateSignature(class AGameObject* Target);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnCaptured__DelegateSignature(class AGameObject* Target, bool bCaptured);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	bool IsTurnOn();
	bool IsTracking();
	class AGameObject* GetTrackingTarget();
};


// Class Nimbus.SystemObjectSonobuoy
// 0x0070 (0x0D90 - 0x0D20)
class ASystemObjectSonobuoy : public ASystemObject
{
public:
	struct FScriptMulticastDelegate                    OnSonobuoyEventOccurred;                                  // 0x0D20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UParticleSystem*                             SplashVFX;                                                // 0x0D30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterSurface;                                             // 0x0D38(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterDepth;                                               // 0x0D3C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x0D40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFallingSpeed;                                          // 0x0D44(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SinkSpeed;                                                // 0x0D48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0D4C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchInterval;                                           // 0x0D50(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DropOffset;                                               // 0x0D54(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawSonobuoyIcon;                                        // 0x0D58(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x27];                                      // 0x0D59(0x0027) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMeshComp;                                         // 0x0D80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0D88(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectSonobuoy");
		return ptr;
	}


	void Scan();
	void OnSonobuoyEventOccurred__DelegateSignature(class ASystemObjectSonobuoy* Sonobuoy, ESonobuoyEvent Event);
	void Drop(class AGameObject* Dropper);
};


// Class Nimbus.SystemObjectSubmarineSearchArea
// 0x0090 (0x0DB0 - 0x0D20)
class ASystemObjectSubmarineSearchArea : public ASystemObject
{
public:
	bool                                               bAutoEnable;                                              // 0x0D20(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D21(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x0D24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x54];                                      // 0x0D28(0x0054) MISSED OFFSET
	float                                              ContractionTime;                                          // 0x0D7C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0D80(0x0010) MISSED OFFSET
	float                                              IconAlphaFadePerSecond;                                   // 0x0D90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0D94(0x0004) MISSED OFFSET
	class UCurveFloat*                                 IconSubmarineSearchAreaAlphaCurve;                        // 0x0D98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IconDisableSubmarineSearchAreaAlpha;                      // 0x0DA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0DA4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectSubmarineSearchArea");
		return ptr;
	}


	void SetSearchArea(const struct FVector& NewPosition, float InRadius);
	void SetRadius(float InRadius);
	void SetEnable(bool bEnabled);
	void PlaySonarEffect();
};


// Class Nimbus.SystemObjectVFX
// 0x0090 (0x0DB0 - 0x0D20)
class ASystemObjectVFX : public ASystemObject
{
public:
	float                                              Scale;                                                    // 0x0D20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0D24(0x0004) MISSED OFFSET
	class UParticleSystem*                             VFXTemplate;                                              // 0x0D28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DecalTemplate;                                            // 0x0D30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SoundEvent;                                               // 0x0D38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                  // 0x0D40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             DecalComponent;                                           // 0x0D48(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x0D50(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bSpawnLensEffectActor;                                    // 0x0D58(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0D59(0x0007) MISSED OFFSET
	class UClass*                                      LensEffectActorClass;                                     // 0x0D60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0D68(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Nimbus.SystemObjectVFX.LensEffectTarget
	float                                              LensEffectLifeTime;                                       // 0x0D90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0D94(0x0004) MISSED OFFSET
	class AActor*                                      LensEffectActor;                                          // 0x0D98(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAutoEnable;                                              // 0x0DA0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x0DA1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectVFX");
		return ptr;
	}


	void OnSpawnLensEffectActor(class AActor* InLensEffectActor, class AActor* InTarget, float InLifeTime);
	void OnEnablePostProcess(bool bEnable);
	void EnableVFX(bool bEnabled);
};


// Class Nimbus.SystemObjectWayPointMarker
// 0x0030 (0x0D50 - 0x0D20)
class ASystemObjectWayPointMarker : public ASystemObject
{
public:
	EWayPointFriendlyType                              FriendlyType;                                             // 0x0D20(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D21(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x0D24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bShowDistance;                                            // 0x0D28(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0D29(0x0007) MISSED OFFSET
	struct FString                                     ReticleNameID;                                            // 0x0D30(0x0010) (Edit, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnReached;                                                // 0x0D40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.SystemObjectWayPointMarker");
		return ptr;
	}

};


// Class Nimbus.TargetContainer3DUIActor
// 0x0278 (0x05E0 - 0x0368)
class ATargetContainer3DUIActor : public AActor
{
public:
	class UMaterialBillboardComponent*                 ContainerBox;                                             // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialBillboardComponent*                 MultiplayerBillboardImage;                                // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialBillboardComponent*                 ClientNameBillboardImage;                                 // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialBillboardComponent*                 HPGaugeBillboardImage;                                    // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialBillboardComponent*                 HPGaugeSliderBillboardImage;                              // 0x0388(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        AllianceText;                                             // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        DistanceText;                                             // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        ObjectTypeText;                                           // 0x03A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        ObjectCallsignText;                                       // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        GamerTagText;                                             // 0x03B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        NextTargetText;                                           // 0x03B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TextRenderOffsetX;                                        // 0x03C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TextRenderOffsetY;                                        // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseTextRenderOffsetY;                                    // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VRTextRenderOffsetX;                                      // 0x03CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VRTextRenderOffsetY;                                      // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VRBaseTextRenderOffsetY;                                  // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ContainerImageBorder;                                     // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ContainerBoxImageSize;                                    // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TextScreenHeight;                                         // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	class UMaterialInterface*                          ContainerBoxMaterial;                                     // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   EmblemSize;                                               // 0x03F0(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   EmblemOffset;                                             // 0x03F8(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UMaterialInterface*                          EmblemImageMaterial;                                      // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ClientNameSize;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UMaterialInterface*                          ClientNameImageMaterial;                                  // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TargetPinSize;                                            // 0x0418(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   TargetPinOffset;                                          // 0x0420(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UMaterialInterface*                          TargetPinImageMaterial;                                   // 0x0428(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   StarStatusSize;                                           // 0x0430(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   StarStatusOffset;                                         // 0x0438(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UMaterialInterface*                          StarStatusImageMaterial;                                  // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          HPGaugeMaterial;                                          // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          HPGaugeSliderMaterial;                                    // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HPGaugeSize;                                              // 0x0458(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   HPGaugeSliderSize;                                        // 0x0460(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   HPGaugeOffset;                                            // 0x0468(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	class UMaterialInterface*                          TextMaterial;                                             // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          TextMaterialVR;                                           // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       TextFont;                                                 // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       TextFontVR;                                               // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TextFontSize;                                             // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TextFontSizeVR;                                           // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TextYSpacing;                                             // 0x0498(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ContainerBoxMaterialInst;                                 // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    EmblemMaterialInst;                                       // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ClientNameMaterialInst;                                   // 0x04B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    TargetPinsMaterialInst;                                   // 0x04B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StarStatusMaterialInst;                                   // 0x04C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    HPGaugeMaterialInst;                                      // 0x04C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    HPGaugeSliderMaterialInst;                                // 0x04D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AllianceTextMaterialInst;                                 // 0x04D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DistanceTextMaterialInst;                                 // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ObjectTypeTextMaterialInst;                               // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ObjectCallsignTextMaterialInst;                           // 0x04F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    GamerTagTextMaterialInst;                                 // 0x04F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    NextTargetTextMaterialInst;                               // 0x0500(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xD8];                                      // 0x0508(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TargetContainer3DUIActor");
		return ptr;
	}

};


// Class Nimbus.TargetContainerWidget
// 0x0040 (0x0270 - 0x0230)
class UTargetContainerWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0230(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TargetContainerWidget");
		return ptr;
	}


	void OnHUDAlertEnd();
	void OnHUDAlertBegin();
	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.TargetLockonSeeker
// 0x0100 (0x0128 - 0x0028)
class UTargetLockonSeeker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	class AGameObject*                                 LockonTarget;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE8];                                      // 0x0040(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TargetLockonSeeker");
		return ptr;
	}

};


// Class Nimbus.TargetSelectionComponent
// 0x0760 (0x0850 - 0x00F0)
class UTargetSelectionComponent : public UActorComponent
{
public:
	class UTexture2D*                                  UnguidedAssistIconRKT;                                    // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  UnguidedAssistIconMGP;                                    // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SemiActiveAssistIcon;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WingmanIcon;                                              // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WingmanBlockedIcon;                                       // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirTargetIcon;                                            // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirTargetBlockedIcon;                                     // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GroundTargetIcon;                                         // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GroundTargetBlockedIcon;                                  // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  CloudAirTargetIcon;                                       // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  CloudGroundTargetIcon;                                    // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LockonMainIcon;                                           // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LockonMainExIcon;                                         // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UTexture2D*>                          LockonMultiTargetIcons;                                   // 0x0158(0x0010) (Edit, ZeroConstructor)
	int                                                LockonMultiTargetIconRow;                                 // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LockonMultiTargetIconCol;                                 // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LockonSpecialIcon;                                        // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LockonSpecialExIcon;                                      // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LockonImpossibleIcon;                                     // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirLockonImpossibleIcon;                                  // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GroundLockonImpossibleIcon;                               // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirEscortIcon;                                            // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GroundEscortIcon;                                         // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AirEscortLockonImpossibleIcon;                            // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GroundEscortLockonImpossibleIcon;                         // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SurrenderIcon;                                            // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WayPointMarkerIcon;                                       // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TGTPReticleIcon;                                          // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TGTPReticleDrawSize;                                      // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCameraDistance;                                       // 0x01D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	float                                              MaximumHudBoxScale;                                       // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimumHudBoxScale;                                       // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SelectTargetTimeLimit;                                    // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SelectTargetBlinkInterval;                                // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FCloudVisibilityTime>                CloudVisiblityTimeSetting;                                // 0x01E8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCloudVisibilityTime>                CloudVisiblityTimeSettingSWP;                             // 0x01F8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCloudVisibilityDistance>            CloudVisibilityDistanceSettings;                          // 0x0208(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCloudVisibilityDistance>            CloudVisibilityDistanceSettingsSWP;                       // 0x0218(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0228(0x0018) MISSED OFFSET
	float                                              ReactionDuration;                                         // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	class AGameObject*                                 SelectedTarget;                                           // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AGameObject*                                 PreviousSelectedTarget;                                   // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameObject*                                 NextTarget;                                               // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x24];                                      // 0x0260(0x0024) MISSED OFFSET
	bool                                               bIsJammed;                                                // 0x0284(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAngleFirst;                                              // 0x0285(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableNewTargetSelectionAlgorithm;                       // 0x0286(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInWideMode;                                              // 0x0287(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetDistanceLimit[0x3];                                 // 0x0288(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TargetAngleLimit[0x5];                                    // 0x0294(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SeekerReturnToCenterTime;                                 // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekerEnteredCloudTime;                                   // 0x02AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekerEnteredCloudSpeed;                                  // 0x02B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekerLockingInCloudChangeDirectionTime;                  // 0x02B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekerLockingInCloudSpeed;                                // 0x02B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekerMaxCloudOffsetDistance;                             // 0x02BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSeekerJammingParameters                    SeekerJammingParameters;                                  // 0x02C0(0x0048) (Edit, DisableEditOnInstance)
	float                                              UpdateTargetCandidatesRate;                               // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseVisualIdentification;                                 // 0x030C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x030D(0x0003) MISSED OFFSET
	TArray<struct FIdentificationSetting>              AirIdentificationSettings;                                // 0x0310(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FIdentificationConeSetting>          AirIdentificationConeSettings;                            // 0x0320(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FIdentificationSetting>              GroundIdentificationSettings;                             // 0x0330(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FIdentificationConeSetting>          GroundIdentificationConeSettings;                         // 0x0340(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              DistanceToBecomeVisibleInSandMeters;                      // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceToBecomeInvisibleInSandMeters;                    // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x38];                                      // 0x0358(0x0038) MISSED OFFSET
	class UPlayerWeaponActivator*                      PlayerWeaponActivator;                                    // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class AGameObject*>                         LockedTargets;                                            // 0x0398(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET
	TArray<class AGameObject*>                         TargetCandidates;                                         // 0x03B0(0x0010) (ZeroConstructor)
	TArray<class AGameObject*>                         UnTargetableCandidates;                                   // 0x03C0(0x0010) (ZeroConstructor)
	TArray<class AGameObject*>                         AllyGameObjects;                                          // 0x03D0(0x0010) (ZeroConstructor)
	TArray<class ASystemObject*>                       SystemObjects;                                            // 0x03E0(0x0010) (ZeroConstructor)
	TArray<class AGameObject*>                         HighlightedGameObjects;                                   // 0x03F0(0x0010) (ZeroConstructor)
	TArray<class AGameObject*>                         TGTPTargetCandidates;                                     // 0x0400(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	class ANimbusHUD*                                  HUD;                                                      // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetHistoryResetTime;                                   // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	TArray<class AGameObject*>                         TargetHistory;                                            // 0x0428(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData09[0x30];                                      // 0x0438(0x0030) MISSED OFFSET
	TArray<class UTargetLockonSeeker*>                 LockonSeekers;                                            // 0x0468(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData10[0x148];                                     // 0x0478(0x0148) MISSED OFFSET
	class AGameObject*                                 CurrentSelectionAssistLockTarget;                         // 0x05C0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              ShootPromptCloudDensity;                                  // 0x05C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x254];                                     // 0x05CC(0x0254) MISSED OFFSET
	TArray<class AAIGameObject*>                       TargetLostJammerTargets;                                  // 0x0820(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0830(0x0008) MISSED OFFSET
	TArray<class AAIGameObject*>                       SeekerJammerTargets;                                      // 0x0838(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0848(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TargetSelectionComponent");
		return ptr;
	}


	void StartSelectTarget();
	void SetJammed(bool bJammed);
	void SetIsWideMode(bool bWideMode);
	void SetIsAngleFirst(bool bIsAngleFirst);
	class AGameObject* SelectTarget(bool bForcedSelect);
	void Reset(float LockonRange, bool bResetLockOnRange, float LockonHeight);
	void OverrideCloudParameters(TArray<struct FCloudVisibilityTime> VisibilityTimeSettings, TArray<struct FCloudVisibilityTime> SWPVisibilityTimeSettings, TArray<struct FCloudVisibilityDistance> VisibilityDistanceSettings, TArray<struct FCloudVisibilityDistance> SWPVisibilityDistanceSettings);
	void OnToggleWeapon(class AWeaponBase* Weapon, class UWeaponParameters* WeaponParam, bool bIsWeaponSpecial);
	class AGameObject* GetSelectionAssistTarget();
	class AGameObject* GetSelectedTarget();
	class AGameObject* GetFirstLockedOnTarget();
	TArray<class AGameObject*> GetAllLockedOnTargets();
};


// Class Nimbus.TeamDeathMatchInGameUIElements
// 0x0088 (0x0548 - 0x04C0)
class UTeamDeathMatchInGameUIElements : public UMultiPlayerInGameWidget
{
public:
	class UTextBlock*                                  AlphaTeamName;                                            // 0x04C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  BravoTeamName;                                            // 0x04C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  AlphaTeamScore;                                           // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  BravoTeamScore;                                           // 0x04D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  AlphaTeamLead;                                            // 0x04E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  BravoTeamLead;                                            // 0x04E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      AlphaTeamScoreProgress;                                   // 0x04F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      BravoTeamScoreProgress;                                   // 0x04F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      TEAM_1_Max;                                               // 0x0500(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      TEAM_2_Max;                                               // 0x0508(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0510(0x0008) MISSED OFFSET
	TArray<class AGameObject*>                         LockedTargets;                                            // 0x0518(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0528(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TeamDeathMatchInGameUIElements");
		return ptr;
	}

};


// Class Nimbus.TeamDeathMatchResult
// 0x00E8 (0x02F0 - 0x0208)
class UTeamDeathMatchResult : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0208(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TeamDeathMatchResult");
		return ptr;
	}


	void DisplayResults(TArray<struct FString> Team1PlayerNames, TArray<int> Team1PlayerScores, TArray<struct FString> Team2PlayerNames, TArray<int> Team2PlayerScores, int Team1Score, int Team2Score, int LocalTeamIndex);
};


// Class Nimbus.TextBlockCustomized
// 0x0090 (0x02F0 - 0x0260)
class UTextBlockCustomized : public UTextBlock
{
public:
	TArray<struct FCustomizedTextInfo>                 CustomizedTextInfo;                                       // 0x0260(0x0010) (Edit, ZeroConstructor)
	struct FAnimatedText                               AnimatedTextInfo;                                         // 0x0270(0x0030) (Edit)
	bool                                               bDisableForceShowAllText;                                 // 0x02A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4F];                                      // 0x02A1(0x004F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TextBlockCustomized");
		return ptr;
	}

};


// Class Nimbus.ThirdPersonCameraInputComponent
// 0x0030 (0x0430 - 0x0400)
class UThirdPersonCameraInputComponent : public UBasePersonCameraInputComponent
{
public:
	struct FVector                                     NeutralCameraLocation;                                    // 0x0400(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     LookAroundCameraLocation;                                 // 0x040C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     LookAroundOriginLocation;                                 // 0x0418(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0424(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ThirdPersonCameraInputComponent");
		return ptr;
	}

};


// Class Nimbus.TimeScoreStatBaseWidget
// 0x00E8 (0x0318 - 0x0230)
class UTimeScoreStatBaseWidget : public UNimbusUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0230(0x0008) MISSED OFFSET
	float                                              MissionPhaseSecondsLeftToStartBlinking;                   // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimerBlinkRate;                                           // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD8];                                      // 0x0240(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TimeScoreStatBaseWidget");
		return ptr;
	}


	void OnCurrentHUDAlertColorUpdated(const struct FLinearColor& NewColor, bool bIsDefaultColor);
};


// Class Nimbus.TransitionGameMode
// 0x0000 (0x0B80 - 0x0B80)
class ATransitionGameMode : public AMultiPlayerGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TransitionGameMode");
		return ptr;
	}

};


// Class Nimbus.TrueSkyWrapper
// 0x0000 (0x0028 - 0x0028)
class UTrueSkyWrapper : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TrueSkyWrapper");
		return ptr;
	}


	void STATIC_SetTrueSkyVisible(bool bVisible, class UObject* WorldContextObject);
	void STATIC_SetTime(float Value);
	void STATIC_SetShadowBase(float ShadowBaseUU);
	float STATIC_SandPointTest(int QueryID, const struct FVector& Pos);
	float STATIC_SandLineTest(int QueryID, const struct FVector& StartPos, const struct FVector& EndPos);
	struct FRotator STATIC_GetSunRotation();
	struct FRotator STATIC_GetSunOrMoonRotation();
	struct FLinearColor STATIC_GetSunColor();
	float STATIC_GetShadowBase();
	int STATIC_GetNextModifiableCloudKeyframe(int Layer);
	struct FRotator STATIC_GetMoonRotation();
	float STATIC_GetKeyframeFloat(int KeyframeUid, const struct FString& Name);
	float STATIC_GetCloudMinAltitude();
	float STATIC_GetCloudMaxAltitude();
	float STATIC_CloudPointTest(int QueryID, const struct FVector& Pos);
	float STATIC_CloudLineTest(int QueryID, const struct FVector& StartPos, const struct FVector& EndPos);
};


// Class Nimbus.TransitionUIManagerActor
// 0x0010 (0x1070 - 0x1060)
class ATransitionUIManagerActor : public AUIManagerActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x1060(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TransitionUIManagerActor");
		return ptr;
	}

};


// Class Nimbus.TunnelEventVolume
// 0x0058 (0x03F8 - 0x03A0)
class ATunnelEventVolume : public AVolume
{
public:
	ETunnelEventType                                   TunnelEventType;                                          // 0x03A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03A1(0x0003) MISSED OFFSET
	struct FRotator                                    InputDampingFactor_Standard;                              // 0x03A4(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    InputDampingFactor_Expert;                                // 0x03B0(0x000C) (Edit, IsPlainOldData)
	float                                              ElevatorRadius;                                           // 0x03BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityRotateRete;                                        // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ElevatorHeight;                                           // 0x03C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CollisionReductionRate;                                   // 0x03C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ForcedDirection;                                          // 0x03CC(0x000C) (Edit, IsPlainOldData)
	ETunnelForcedConditions                            ForcedConditions;                                         // 0x03D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03D9(0x0003) MISSED OFFSET
	float                                              ForcedAngle;                                              // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForcedCompensation;                                       // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForcedCompensationAngle;                                  // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForcedPassLine;                                           // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOffForcedSideways;                                       // 0x03EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOffForcedVertical;                                       // 0x03ED(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOffForcedRoll;                                           // 0x03EE(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ETunnelForcedType                                  ForcedType;                                               // 0x03EF(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForcedLength;                                             // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TunnelEventVolume");
		return ptr;
	}

};


// Class Nimbus.TunnelMoveForcedVolume
// 0x0030 (0x0428 - 0x03F8)
class ATunnelMoveForcedVolume : public ATunnelEventVolume
{
public:
	class USphereComponent*                            MoveTargetLocation;                                       // 0x03F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             ArrowComponent;                                           // 0x0400(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             AngleArrowComponentL;                                     // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             AngleArrowComponentR;                                     // 0x0410(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             AngleArrowComponentU;                                     // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             AngleArrowComponentD;                                     // 0x0420(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.TunnelMoveForcedVolume");
		return ptr;
	}

};


// Class Nimbus.UI3DWidgetActor
// 0x01A8 (0x0510 - 0x0368)
class AUI3DWidgetActor : public AActor
{
public:
	unsigned char                                      bUpdateTransformByCamera : 1;                             // 0x0368(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0369(0x0007) MISSED OFFSET
	class UWidgetComponent*                            WidgetComponent;                                          // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x198];                                     // 0x0378(0x0198) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UI3DWidgetActor");
		return ptr;
	}


	class UWidgetComponent* GetWidgetComponent();
};


// Class Nimbus.UIFrontScreenWidget
// 0x00B0 (0x03A0 - 0x02F0)
class UUIFrontScreenWidget : public UUIBaseWidget
{
public:
	class UUIFrontScreenInfoDataAsset*                 InfoData;                                                 // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBackgroundBlur*                             UMGBackgroundBlur;                                        // 0x02F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UMGBackgroundColor;                                       // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UMGFrontWindow;                                           // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x0310(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIFrontScreenWidget");
		return ptr;
	}

};


// Class Nimbus.UIBackgroundActor
// 0x0010 (0x0520 - 0x0510)
class AUIBackgroundActor : public AUI3DWidgetActor
{
public:
	class UManaComponent*                              ManaComponent;                                            // 0x0510(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0518(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIBackgroundActor");
		return ptr;
	}

};


// Class Nimbus.UIFrontScreenFilterWidget
// 0x0060 (0x0350 - 0x02F0)
class UUIFrontScreenFilterWidget : public UUIBaseWidget
{
public:
	class UUIFrontScreenInfoDataAsset*                 InfoData;                                                 // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 UMGFilter;                                                // 0x02F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0300(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIFrontScreenFilterWidget");
		return ptr;
	}

};


// Class Nimbus.UIFrontScreenInfoDataAsset
// 0x0020 (0x0050 - 0x0030)
class UUIFrontScreenInfoDataAsset : public UDataAsset
{
public:
	float                                              DefaultBGBlurStrength;                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DefaultBGColor;                                           // 0x0034(0x0010) (Edit, IsPlainOldData)
	float                                              BackgroundShowTime;                                       // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FilterShowTime;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnableBGBlurInMission;                                  // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnableBGBlurInOnlineMission;                            // 0x004D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIFrontScreenInfoDataAsset");
		return ptr;
	}

};


// Class Nimbus.UIFrontWindowWidget
// 0x0090 (0x0380 - 0x02F0)
class UUIFrontWindowWidget : public UUIBaseWidget
{
public:
	class UCanvasPanel*                                WindowRoot;                                               // 0x02F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TMap<EDialogType, class UDialogWidget*>            DialogWidgets;                                            // 0x02F8(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UGuideWidget*                                GuideWidget;                                              // 0x0348(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgSaveIcon;                                              // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgButtonText;                                            // 0x0360(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UDialogWidget*                               CurrentDialog;                                            // 0x0368(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0370(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIFrontWindowWidget");
		return ptr;
	}

};


// Class Nimbus.UIGameMode
// 0x0000 (0x1050 - 0x1050)
class AUIGameMode : public ALobbyGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIGameMode");
		return ptr;
	}

};


// Class Nimbus.UIImageDataAsset
// 0x0010 (0x0040 - 0x0030)
class UUIImageDataAsset : public UDataAsset
{
public:
	TArray<class UTexture2D*>                          Images;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIImageDataAsset");
		return ptr;
	}

};


// Class Nimbus.UILayerLinkButton
// 0x0018 (0x03F0 - 0x03D8)
class UUILayerLinkButton : public UButton
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x03D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UILayerLinkButton");
		return ptr;
	}

};


// Class Nimbus.UICategoryColor
// 0x0260 (0x0290 - 0x0030)
class UUICategoryColor : public UDataAsset
{
public:
	struct FUIMenuColor                                AircraftFighter;                                          // 0x0030(0x0020) (Edit)
	struct FUIMenuColor                                AircraftMultirole;                                        // 0x0050(0x0020) (Edit)
	struct FUIMenuColor                                AircraftAttacker;                                         // 0x0070(0x0020) (Edit)
	struct FUIMenuColor                                WeaponAir;                                                // 0x0090(0x0020) (Edit)
	struct FUIMenuColor                                WeaponGround;                                             // 0x00B0(0x0020) (Edit)
	struct FUIMenuColor                                WeaponOther;                                              // 0x00D0(0x0020) (Edit)
	struct FUIMenuColor                                PartsBody;                                                // 0x00F0(0x0020) (Edit)
	struct FUIMenuColor                                PartsArms;                                                // 0x0110(0x0020) (Edit)
	struct FUIMenuColor                                PartsMisc;                                                // 0x0130(0x0020) (Edit)
	struct FUIMenuColor                                PilotDataAlly;                                            // 0x0150(0x0020) (Edit)
	struct FUIMenuColor                                PilotDataEnemy;                                           // 0x0170(0x0020) (Edit)
	struct FUIMenuColor                                PilotDataNamed;                                           // 0x0190(0x0020) (Edit)
	struct FUIMenuColor                                LockNode;                                                 // 0x01B0(0x0020) (Edit)
	struct FUIMenuColor                                StatusIcon;                                               // 0x01D0(0x0020) (Edit)
	struct FUIMenuColor                                Blank;                                                    // 0x01F0(0x0020) (Edit)
	struct FUIMenuColor                                RadioEquipped;                                            // 0x0210(0x0020) (Edit)
	struct FUIMenuColor                                RadioEquippedWithPing;                                    // 0x0230(0x0020) (Edit)
	struct FUIMenuColor                                RadioNotEquipped;                                         // 0x0250(0x0020) (Edit)
	struct FUIMenuColor                                RadioNotEquippedWithPing;                                 // 0x0270(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UICategoryColor");
		return ptr;
	}

};


// Class Nimbus.MenuWidgetClassDataAsset
// 0x0050 (0x0080 - 0x0030)
class UMenuWidgetClassDataAsset : public UDataAsset
{
public:
	TMap<EMenuIDs, class UClass*>                      ClassTable;                                               // 0x0030(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.MenuWidgetClassDataAsset");
		return ptr;
	}

};


// Class Nimbus.UIPawn
// 0x0000 (0x03C8 - 0x03C8)
class AUIPawn : public APawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIPawn");
		return ptr;
	}

};


// Class Nimbus.UIScrollBarWidget
// 0x00A0 (0x02A8 - 0x0208)
class UUIScrollBarWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0208(0x0088) MISSED OFFSET
	class UImage*                                      UmgScrollBarTrack;                                        // 0x0290(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgBackground;                                            // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgTranstion;                                             // 0x02A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIScrollBarWidget");
		return ptr;
	}

};


// Class Nimbus.UIUtil
// 0x0000 (0x0028 - 0x0028)
class UUIUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIUtil");
		return ptr;
	}

};


// Class Nimbus.UIVRPawn
// 0x0018 (0x03E0 - 0x03C8)
class AUIVRPawn : public AUIPawn
{
public:
	float                                              BaseTurnRate;                                             // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseLookUpRate;                                           // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UPawnMovementComponent*                      MovementComponent;                                        // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bAddDefaultMovementBindings : 1;                          // 0x03D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UIVRPawn");
		return ptr;
	}


	void TurnAtRate(float Rate);
	void MoveUp_World(float Val);
	void MoveRight(float Val);
	void MoveForward(float Val);
	void LookUpAtRate(float Rate);
};


// Class Nimbus.Unit
// 0x0148 (0x04B0 - 0x0368)
class AUnit : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnStartedMovingOnPath;                                    // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedPathPoint;                                       // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedPathEntryPoint;                                  // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFinishedMovingOnPath;                                   // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResetPath;                                              // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bIsMoving;                                                // 0x03B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUsingSpecifiedFormation;                                 // 0x03B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x03BA(0x0001) MISSED OFFSET
	bool                                               bActivateFromStart;                                       // 0x03BB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFaction                                           Faction;                                                  // 0x03BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x03BD(0x0001) MISSED OFFSET
	ESubFaction                                        SubFaction;                                               // 0x03BE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x03BF(0x0001) MISSED OFFSET
	float                                              MinAltitude;                                              // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	float                                              MaxAltitude;                                              // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	float                                              Radius;                                                   // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x03D4(0x000C) MISSED OFFSET
	TArray<class AAIGameObject*>                       AttachedObjects;                                          // 0x03E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AGameObject*>                         HostileGameObjects;                                       // 0x03F0(0x0010) (ZeroConstructor, Transient)
	TArray<class UAIUAVComponent*>                     UAVComponents;                                            // 0x0400(0x0010) (ExportObject, ZeroConstructor, Transient)
	float                                              HostileSearchDuration;                                    // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	bool                                               bIsNotActivateDeadObjectOnRestart;                        // 0x0418(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0419(0x0007) MISSED OFFSET
	TArray<struct FFormationSlot>                      FormationSlots;                                           // 0x0420(0x0010) (ZeroConstructor)
	TArray<struct FFormationSlot>                      DefaultFormationSlots;                                    // 0x0430(0x0010) (ZeroConstructor)
	TArray<struct FFormationSlot>                      DefaultFormationSlotsBackup;                              // 0x0440(0x0010) (ZeroConstructor)
	struct FVector                                     FormationOffset;                                          // 0x0450(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class UAsyncTaskProcessUnit*                       UnitAsyncTask;                                            // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x28];                                      // 0x0468(0x0028) MISSED OFFSET
	TArray<struct FUnitChildActor>                     ChildActorList;                                           // 0x0490(0x0010) (Edit, ZeroConstructor)
	class UAIPathComponent*                            AIPathComp;                                               // 0x04A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bNotUnitIconCandidate;                                    // 0x04A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x04A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Unit");
		return ptr;
	}


	void UndockChildActorUAVs();
	void SkipOutOfWoldCheck(bool bSkip);
	void SetWeaponSpecialBehavior(EWeaponNumber WeaponNumber, EWeaponSpecialBehaviorType BehaviorType);
	void SetWeaponSettings(bool bInCanDamageTGT, bool bInCanFireNoCollisionWeapon);
	void SetShowHudBox(bool bShowHUDBox);
	void SetRadiusMeters(float RadiusInMeters);
	void SetPathParameter(float InSpeedKmph, float InAccelerationMpss, float InRotationSpeedDegree);
	void SetMinHealth(float InHealth);
	void SetMinAltitudeMeters(float MinAltitudeMeters);
	void SetMaxAltitudeMeters(float MaxAltitudeMeters);
	void SetIsTGT(bool bIsTarget);
	void SetIsInvincible(bool bInvincible);
	void SetIsCosmetic();
	void SetIsAttackTargetsException(bool bAttackTargetsException);
	void SetHudBoxVisibilityRange(float RadiusMeters);
	void SetHudBoxAttribute(EHudBoxAttribute Attribute);
	void SetGameObjectCurrentSpeed(float SpeedKmph);
	void SetFaction(EFaction NewFaction);
	void SetExceptionTarget(class AGameObject* ExceptionTarget);
	void SetEnemySearchType(ETargetType InType);
	void SetCommonAttributes(bool bShowHUDBox, bool bIsInvincible, bool bIsTGT);
	void RestoreUnit();
	void RequestSpecialAction(const struct FAISpecialActionRequestInfo& SpecialActionRequestInfo);
	void RepositionUnit(EUnitActivationType RepositionType, const struct FVector& Position, const struct FRotator& Rotation, class AActor* TransformReferenceActor, bool bAddHeightOfGroundToZ);
	void RemoveAIGameObject(class AAIGameObject* Object);
	void OnStartedMovingOnPath__DelegateSignature(class AAIPath* Path);
	void OnRestored();
	void OnResetPath__DelegateSignature(class AAIPath* Path);
	void OnReachedPathPoint__DelegateSignature(class AAIPathPoint* PathPoint);
	void OnReachedPathEntryPoint__DelegateSignature(class AAIPath* Path);
	void OnFinishedMovingOnPath__DelegateSignature(class AAIPath* Path);
	void OnDeath(class AUnit* DeadUnit);
	void OnActivation(class AUnit* ActivatedUnit);
	void ModifyHealth(EHPModifier ModType, float InValue, class APawn* DamageCauser, bool bCauseDamageEvent);
	void K2_DestroyActor();
	bool IsDestroyed();
	bool IsActivated();
	bool HasAliveGameObject(bool bIncludeChild);
	float GetUnitDamagePercentage();
	int GetTotalGameObjectNum(bool bIncludeChild);
	ESubFaction GetSubFaction();
	float GetRadiusMeters();
	EFaction GetFaction();
	int GetDeadGameObjectNum(bool bIncludeChild);
	int GetAliveGameObjectNum(bool bIncludeChild);
	TArray<class AAIGameObject*> GetAIGameObjectsCopy(class UClass* SubClass);
	void EngagementOrder(EEngagement Order, class AActor* TargetEnemy, EEnemySearchPriority SearchPriority, EEnemySearchPriorityExtension SearchPriorityExtension, bool bIgnoreUnidentifiedObject, bool IgnoreAttackQuota, bool CanFireWeapon1, bool CanFireWeapon2, bool CanFireWeapon3);
	void EnableKDSMode(bool bInEnabled);
	void DockUAVsToActor(class AGameObject* ParentObject, const struct FString& DockSocketName, int FirstSlot, int LastSlot);
	void DockChildActorUAVs();
	void DeactivateUnit();
	bool STATIC_AreAllUnitsUAVDocked(TArray<class AUnit*> Units);
	bool AreAllUAVDocked();
	void AddAIGameObject(class AAIGameObject* Object);
	void Activate(bool bActivate);
};


// Class Nimbus.UnitFormationElementLocator
// 0x0008 (0x0370 - 0x0368)
class AUnitFormationElementLocator : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UnitFormationElementLocator");
		return ptr;
	}

};


// Class Nimbus.UnlockMenuBaseWidget
// 0x0080 (0x0550 - 0x04D0)
class UUnlockMenuBaseWidget : public UMenuBaseWidget
{
public:
	class URewardScrollboxItemWidget*                  ScrollboxItemWidget;                                      // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  FeatureTextBlock;                                         // 0x04D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                FeaturePanelWidget;                                       // 0x04E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TitleTextBlock;                                           // 0x04E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ButtonTextWidget;                                         // 0x04F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x04F8(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UnlockMenuBaseWidget");
		return ptr;
	}

};


// Class Nimbus.UpgradeParts
// 0x2B68 (0x2B90 - 0x0028)
class UUpgradeParts : public UObject
{
public:
	unsigned char                                      UnknownData00[0x2B68];                                    // 0x0028(0x2B68) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UpgradeParts");
		return ptr;
	}

};


// Class Nimbus.UserWidgetAnimatable
// 0x0010 (0x0218 - 0x0208)
class UUserWidgetAnimatable : public UUserWidget
{
public:
	TArray<struct FUserWidgetAnimationInfo>            UmgAnimationList;                                         // 0x0208(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.UserWidgetAnimatable");
		return ptr;
	}

};


// Class Nimbus.ViewerGridMenuBaseWidget
// 0x0050 (0x0520 - 0x04D0)
class UViewerGridMenuBaseWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x04D0(0x0040) MISSED OFFSET
	struct FVector2D                                   SelectorTranslation;                                      // 0x0510(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   SelectorOffset;                                           // 0x0518(0x0008) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerGridMenuBaseWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerBaseMedalWidget
// 0x0080 (0x05A0 - 0x0520)
class UViewerBaseMedalWidget : public UViewerGridMenuBaseWidget
{
public:
	class UMaterialInterface*                          MedalMaterialRef;                                         // 0x0520(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET
	struct FHugeMedalInstance                          HugeMedal;                                                // 0x0530(0x0018) (Transient, IsPlainOldData)
	TArray<class UMedalWidget*>                        ThumbnailMedals;                                          // 0x0548(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FMedalViewerParameter>               MedalViewerParameters;                                    // 0x0558(0x0010) (ZeroConstructor, Transient)
	class UPanelWidget*                                CampaignIconPanel;                                        // 0x0568(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPanelWidget*                                MultiIconPanel;                                           // 0x0570(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPanelWidget*                                VRIconPanel;                                              // 0x0578(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UImage*>                              MedalIcon;                                                // 0x0580(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              MedalGray;                                                // 0x0590(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerBaseMedalWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerBasePilotDataWidget
// 0x0090 (0x05B0 - 0x0520)
class UViewerBasePilotDataWidget : public UViewerGridMenuBaseWidget
{
public:
	class UMaterialInterface*                          PilotDataMaterialRef;                                     // 0x0520(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0528(0x0020) MISSED OFFSET
	struct FHugePilotDataInstance                      HugePilotData;                                            // 0x0548(0x0018) (Transient, IsPlainOldData)
	TArray<class UPilotDataWidget*>                    ThumbnailPilotData;                                       // 0x0560(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              AircraftIcon;                                             // 0x0570(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              AircraftGrayed;                                           // 0x0580(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UImage*>                              AircraftFrame;                                            // 0x0590(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FPilotDataViewerParameter>           PilotDataViewerParameters;                                // 0x05A0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerBasePilotDataWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerCampaignMedalWidget
// 0x0000 (0x05A0 - 0x05A0)
class UViewerCampaignMedalWidget : public UViewerBaseMedalWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerCampaignMedalWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerCampaignPilotDataWidget
// 0x01B0 (0x0760 - 0x05B0)
class UViewerCampaignPilotDataWidget : public UViewerBasePilotDataWidget
{
public:
	unsigned char                                      UnknownData00[0x140];                                     // 0x05B0(0x0140) MISSED OFFSET
	TArray<class UPlayerDataProfile*>                  AllProfileData;                                           // 0x06F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x60];                                      // 0x0700(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerCampaignPilotDataWidget");
		return ptr;
	}

};


// Class Nimbus.PlayerDataProfile
// 0x0078 (0x00A0 - 0x0028)
class UPlayerDataProfile : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	class UTexture2D*                                  VisualTexture;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0048(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.PlayerDataProfile");
		return ptr;
	}

};


// Class Nimbus.ViewerRecordsWidgetBase
// 0x0200 (0x06D0 - 0x04D0)
class UViewerRecordsWidgetBase : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x200];                                     // 0x04D0(0x0200) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerRecordsWidgetBase");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarAircraft
// 0x0000 (0x0580 - 0x0580)
class UViewerHangarAircraft : public UCommonHangarAircraftWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarAircraft");
		return ptr;
	}

};


// Class Nimbus.ViewerCampaignRecordsWidget
// 0x0080 (0x0750 - 0x06D0)
class UViewerCampaignRecordsWidget : public UViewerRecordsWidgetBase
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x06D0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerCampaignRecordsWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarEmblemSwitch
// 0x0000 (0x04E0 - 0x04E0)
class UViewerHangarEmblemSwitch : public UCommonHangarEmblemSwitchWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarEmblemSwitch");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarEmblem
// 0x0000 (0x0550 - 0x0550)
class UViewerHangarEmblem : public UCommonHangarEmblemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarEmblem");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarNameWidget
// 0x0000 (0x05A0 - 0x05A0)
class UViewerHangarNameWidget : public UCommonHangarNameWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarNameWidget");
		return ptr;
	}

};


// Class Nimbus.ViewrHangarReview
// 0x0000 (0x04D0 - 0x04D0)
class UViewrHangarReview : public UCommonHangarBaseMenuWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewrHangarReview");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarSelect
// 0x0010 (0x04E0 - 0x04D0)
class UViewerHangarSelect : public UCommonHangarBaseMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarSelect");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarSkinWidget
// 0x0000 (0x0500 - 0x0500)
class UViewerHangarSkinWidget : public UCommonHangarSkinWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarSkinWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerHangarWeapon
// 0x0000 (0x0520 - 0x0520)
class UViewerHangarWeapon : public UCommonHangarWeaponWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerHangarWeapon");
		return ptr;
	}

};


// Class Nimbus.ViewerMenuCampaignWidget
// 0x0000 (0x04D0 - 0x04D0)
class UViewerMenuCampaignWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMenuCampaignWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMenuGalleryWidget
// 0x0000 (0x04D0 - 0x04D0)
class UViewerMenuGalleryWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMenuGalleryWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMenuMultiplayWidget
// 0x0000 (0x04D0 - 0x04D0)
class UViewerMenuMultiplayWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMenuMultiplayWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMenuVRWidget
// 0x0000 (0x04D0 - 0x04D0)
class UViewerMenuVRWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMenuVRWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMenuWidget
// 0x0000 (0x04D0 - 0x04D0)
class UViewerMenuWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMenuWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMultiplayRecordsWidget
// 0x00F0 (0x07C0 - 0x06D0)
class UViewerMultiplayRecordsWidget : public UViewerRecordsWidgetBase
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x06D0(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMultiplayRecordsWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMultiplayMedalWidget
// 0x0000 (0x05A0 - 0x05A0)
class UViewerMultiplayMedalWidget : public UViewerBaseMedalWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMultiplayMedalWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerMusicWidget
// 0x0160 (0x0630 - 0x04D0)
class UViewerMusicWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x160];                                     // 0x04D0(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerMusicWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerSceneWidget
// 0x0080 (0x0550 - 0x04D0)
class UViewerSceneWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET
	class UImage*                                      UmgSceneImageOverlay;                                     // 0x04D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      UmgSceneImageHolder;                                      // 0x04E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UTextBlock*>                          UmgAdditionalText;                                        // 0x04E8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class USceneDataAsset*>                     SceneDataArr;                                             // 0x04F8(0x0010) (ZeroConstructor)
	TArray<struct FSoftObjectPath>                     ThumbnailTextureRef;                                      // 0x0508(0x0010) (ZeroConstructor)
	TArray<class UTexture2D*>                          ThumbnailTextureCache;                                    // 0x0518(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0528(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerSceneWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerVRMedalWidget
// 0x0000 (0x05A0 - 0x05A0)
class UViewerVRMedalWidget : public UViewerBaseMedalWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerVRMedalWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerVRPilotDataWidget
// 0x0000 (0x0760 - 0x0760)
class UViewerVRPilotDataWidget : public UViewerCampaignPilotDataWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerVRPilotDataWidget");
		return ptr;
	}

};


// Class Nimbus.ViewerVRRecordsWidget
// 0x0070 (0x0740 - 0x06D0)
class UViewerVRRecordsWidget : public UViewerRecordsWidgetBase
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x06D0(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ViewerVRRecordsWidget");
		return ptr;
	}

};


// Class Nimbus.VLSMissile
// 0x0008 (0x08A8 - 0x08A0)
class AVLSMissile : public AMissile
{
public:
	float                                              OmnidirectionalDuration;                                  // 0x08A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OmnidirectionalAbility;                                   // 0x08A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VLSMissile");
		return ptr;
	}

};


// Class Nimbus.VLSMovementParameters
// 0x0000 (0x0078 - 0x0078)
class UVLSMovementParameters : public UMissileMovementParameters
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VLSMovementParameters");
		return ptr;
	}

};


// Class Nimbus.VLSHomingParameters
// 0x0008 (0x0080 - 0x0078)
class UVLSHomingParameters : public UMissileHomingParameters
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VLSHomingParameters");
		return ptr;
	}

};


// Class Nimbus.VLSMovementComponent
// 0x0008 (0x0350 - 0x0348)
class UVLSMovementComponent : public UMissileMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VLSMovementComponent");
		return ptr;
	}

};


// Class Nimbus.VRMenuBaseWidget
// 0x0150 (0x0620 - 0x04D0)
class UVRMenuBaseWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x04D0(0x0078) MISSED OFFSET
	class AActor*                                      HangarCamera;                                             // 0x0548(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0550(0x0020) MISSED OFFSET
	class AStaticMeshActor*                            ViewerIndicator;                                          // 0x0570(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x88];                                      // 0x0578(0x0088) MISSED OFFSET
	TArray<class UTextBlockCustomized*>                AnimationTextList;                                        // 0x0600(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0610(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMenuBaseWidget");
		return ptr;
	}


	void PlayViewerFrameOutAnimBP();
	void PlayViewerFrameInAnimBP();
	void PlayFrameOutAnimBP();
	void PlayFrameInAnimBP();
	void OnFrameOutAnimationEndBP();
};


// Class Nimbus.VRAircraftViewerWidget
// 0x0050 (0x0670 - 0x0620)
class UVRAircraftViewerWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0620(0x0018) MISSED OFFSET
	class AStaticMeshActor*                            HangarLadder;                                             // 0x0638(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0640(0x0020) MISSED OFFSET
	class UTextBlock*                                  UmgControlText;                                           // 0x0660(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0668(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRAircraftViewerWidget");
		return ptr;
	}


	void OnFrameInAnimationFinished();
	void OnFadeOutStarted();
};


// Class Nimbus.VRAircraftWidget
// 0x0050 (0x0670 - 0x0620)
class UVRAircraftWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0620(0x0028) MISSED OFFSET
	TArray<class UImage*>                              UmgSpecGraphBar;                                          // 0x0648(0x0010) (ExportObject, ZeroConstructor)
	class UVRSelectorUnit*                             SelectorUnitWidget;                                       // 0x0658(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0660(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRAircraftWidget");
		return ptr;
	}

};


// Class Nimbus.VRBriefingWidget
// 0x0020 (0x0640 - 0x0620)
class UVRBriefingWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0620(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRBriefingWidget");
		return ptr;
	}


	void PlayMapAnimationBP(int Mission, int Index);
};


// Class Nimbus.VRDebriefingWidget
// 0x0040 (0x0660 - 0x0620)
class UVRDebriefingWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0620(0x0008) MISSED OFFSET
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FSoftObjectPath                             ThumbnailAssetReference;                                  // 0x0630(0x0018)
	class UTexture2D*                                  ThumbnailTexture;                                         // 0x0648(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      MissionThumbnailImage;                                    // 0x0650(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0658(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRDebriefingWidget");
		return ptr;
	}


	void OnInitializedCustom();
};


// Class Nimbus.VRDescriptionTextWidget
// 0x0010 (0x0218 - 0x0208)
class UVRDescriptionTextWidget : public UUserWidget
{
public:
	float                                              DelaySeconds;                                             // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	class UTextBlockCustomized*                        DescriptionText;                                          // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRDescriptionTextWidget");
		return ptr;
	}


	void InitializeAnimate();
};


// Class Nimbus.VRDialogWidget
// 0x0060 (0x0390 - 0x0330)
class UVRDialogWidget : public UDialogWidget
{
public:
	TArray<class UTextBlock*>                          UmgItemText;                                              // 0x0330(0x0010) (ExportObject, ZeroConstructor)
	class UTextBlock*                                  UmgDescriptionText;                                       // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgLoadIcon;                                              // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 UmgSaveIcon;                                              // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	class UCanvasPanel*                                DialogPanel;                                              // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UBorder*>                             UmgBorderNormal;                                          // 0x0368(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UBorder*>                             UmgBorderSelected;                                        // 0x0378(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRDialogWidget");
		return ptr;
	}


	void PlayFrameOutAnimBP();
	void PlayFrameInAnimBP();
	void OnFrameOutAnimationEndBP();
};


// Class Nimbus.VRDifficultySelectWidget
// 0x0070 (0x0690 - 0x0620)
class UVRDifficultySelectWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0620(0x0048) MISSED OFFSET
	class UTextBlock*                                  UmgTitleTextVR;                                           // 0x0668(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UBorder*>                             UmgBorderNormal;                                          // 0x0670(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UBorder*>                             UmgBorderSelected;                                        // 0x0680(0x0010) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRDifficultySelectWidget");
		return ptr;
	}

};


// Class Nimbus.VREdWidget
// 0x0040 (0x0660 - 0x0620)
class UVREdWidget : public UVRMenuBaseWidget
{
public:
	float                                              FadeOutSeconds;                                           // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastKeepingBlackSeconds;                                  // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSoftObjectPath                             SubtitleDataTable;                                        // 0x0628(0x0018) (Edit)
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0640(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0648(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VREdWidget");
		return ptr;
	}


	void PlaySubtitleAnimationBP(int Index);
};


// Class Nimbus.VRDifficultyWidget
// 0x0000 (0x04D0 - 0x04D0)
class UVRDifficultyWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRDifficultyWidget");
		return ptr;
	}

};


// Class Nimbus.VRHangarCockpitWidget
// 0x0010 (0x0630 - 0x0620)
class UVRHangarCockpitWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0620(0x0008) MISSED OFFSET
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRHangarCockpitWidget");
		return ptr;
	}


	void OnInitializedCustom();
};


// Class Nimbus.VRHangarWidget
// 0x0020 (0x0640 - 0x0620)
class UVRHangarWidget : public UVRMenuBaseWidget
{
public:
	float                                              PreStartDelaySeconds;                                     // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutSeconds;                                           // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0628(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRHangarWidget");
		return ptr;
	}


	void SkipVisorAnimation();
	void OnVRFadingCompletedCustom(bool IsFadeIn);
	void OnVisorStartupAnimFinishedBP();
	void ChangeNextMenu();
};


// Class Nimbus.VRHmdWidget
// 0x0010 (0x0630 - 0x0620)
class UVRHmdWidget : public UVRMenuBaseWidget
{
public:
	class UUserWidget*                                 LoadingWidget;                                            // 0x0620(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0628(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRHmdWidget");
		return ptr;
	}

};


// Class Nimbus.VRHudPauseWidget
// 0x00D0 (0x05B0 - 0x04E0)
class UVRHudPauseWidget : public UMissionBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04E0(0x0008) MISSED OFFSET
	class ANimbusHUD*                                  HUD;                                                      // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x04F0(0x0050) MISSED OFFSET
	class UTextBlock*                                  UmgDescriptionTextVR;                                     // 0x0540(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UBorder*>                             UmgBorderNormal;                                          // 0x0548(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UBorder*>                             UmgBorderSelected;                                        // 0x0558(0x0010) (ExportObject, ZeroConstructor)
	class UTextBlock*                                  UmgDialogNormalItemText[0x4];                             // 0x0568(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  UmgDialogSelectedItemText[0x4];                           // 0x0588(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRHudPauseWidget");
		return ptr;
	}


	void PlayFrameOutAnimBP();
	void PlayFrameInAnimBP();
	void OnFrameOutAnimationEndBP();
};


// Class Nimbus.VRMainTitleWidget
// 0x0090 (0x06B0 - 0x0620)
class UVRMainTitleWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0620(0x0060) MISSED OFFSET
	class UTextBlock*                                  UmgTitleTextVR;                                           // 0x0680(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UBorder*>                             UmgBorderNormal;                                          // 0x0688(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UBorder*>                             UmgBorderSelected;                                        // 0x0698(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMainTitleWidget");
		return ptr;
	}

};


// Class Nimbus.VRKeyEventActor
// 0x0020 (0x0388 - 0x0368)
class AVRKeyEventActor : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnKeyJustPressed;                                         // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnKeyRepeated;                                            // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRKeyEventActor");
		return ptr;
	}


	void OnKeyRepeated__DelegateSignature(EUIKeys Key);
	void OnKeyJustPressed__DelegateSignature(EUIKeys Key);
	bool IsKeyDown(EUIKeys Key);
};


// Class Nimbus.VRMenuMainWidget
// 0x0000 (0x04D0 - 0x04D0)
class UVRMenuMainWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMenuMainWidget");
		return ptr;
	}

};


// Class Nimbus.VRMissionLoadWidget
// 0x0000 (0x04D0 - 0x04D0)
class UVRMissionLoadWidget : public UMenuBaseWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMissionLoadWidget");
		return ptr;
	}


	void PlayFrameOutAnimBP();
	void PlayFrameInAnimBP();
	void OnFrameOutAnimationEndBP();
};


// Class Nimbus.VRMissionSelectWidget
// 0x0070 (0x0690 - 0x0620)
class UVRMissionSelectWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0620(0x0018) MISSED OFFSET
	TArray<struct FSoftObjectPath>                     ThumbnailAssetReferences;                                 // 0x0638(0x0010) (ZeroConstructor)
	TArray<class UTexture2D*>                          ThumbnailTextures;                                        // 0x0648(0x0010) (ZeroConstructor)
	class UPanelWidget*                                InfoPanel;                                                // 0x0658(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      MissionThumbnailImage;                                    // 0x0660(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0668(0x0010) MISSED OFFSET
	class UVRSelectorUnit*                             SelectorUnitWidget;                                       // 0x0678(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              FadeInSeconds;                                            // 0x0680(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutSeconds;                                           // 0x0684(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0688(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMissionSelectWidget");
		return ptr;
	}


	void STATIC_SetVRMissionSelectBgAlreadyFrameInFlag(bool Flag);
	bool IsToPlayFrameInAnimation();
};


// Class Nimbus.VRPlaneHealthWarningLight
// 0x0028 (0x0390 - 0x0368)
class AVRPlaneHealthWarningLight : public AActor
{
public:
	class APlayerPlane*                                PlayerPlane;                                              // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     WarningLightName;                                         // 0x0370(0x0010) (Edit, ZeroConstructor)
	class UPointLightComponent*                        WarningLight;                                             // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    WarningMat;                                               // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRPlaneHealthWarningLight");
		return ptr;
	}


	void SetPlayerPlane(class APlayerPlane* Plane);
};


// Class Nimbus.VRRetryWidget
// 0x0030 (0x05D0 - 0x05A0)
class UVRRetryWidget : public UCampaignRetryWidget
{
public:
	class UTextBlock*                                  UmgDescriptionTextVR;                                     // 0x05A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UBorder*>                             UmgBorderNormal;                                          // 0x05A8(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UBorder*>                             UmgBorderSelected;                                        // 0x05B8(0x0010) (ExportObject, ZeroConstructor)
	float                                              FadeOutSeconds;                                           // 0x05C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRRetryWidget");
		return ptr;
	}


	void PlayFrameOutAnimBP();
	void PlayFrameInAnimBP();
	void OnFrameOutAnimationEndBP();
};


// Class Nimbus.VRPrologueWidget
// 0x0040 (0x0660 - 0x0620)
class UVRPrologueWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0620(0x0020) MISSED OFFSET
	float                                              BgmDelaySeconds;                                          // 0x0640(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastWaitSeconds;                                          // 0x0644(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              KeepingBlackSeconds;                                      // 0x0648(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeInSeconds;                                            // 0x064C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMovieSubtitleWidget*                        UmgMovieSubtitle;                                         // 0x0650(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0658(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRPrologueWidget");
		return ptr;
	}


	void PlaySubtitleAnimationBP(int Index);
	bool IsToPlayFrameInAnimation();
};


// Class Nimbus.VRReviewWidget
// 0x0010 (0x0630 - 0x0620)
class UVRReviewWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0620(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRReviewWidget");
		return ptr;
	}

};


// Class Nimbus.VRMenuForegroundWidget
// 0x0080 (0x0370 - 0x02F0)
class UVRMenuForegroundWidget : public UUIBaseWidget
{
public:
	class UWidgetAnimation*                            UmgStartAnimation;                                        // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  LockedIcon;                                               // 0x02F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  UnlockedIcon;                                             // 0x0300(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0308(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRMenuForegroundWidget");
		return ptr;
	}

};


// Class Nimbus.VRPlaneSubActor
// 0x0058 (0x03C0 - 0x0368)
class AVRPlaneSubActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0368(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRPlaneSubActor");
		return ptr;
	}


	bool IsKeyDown(EUIKeys Key);
};


// Class Nimbus.VRSelectorUnit
// 0x0040 (0x0248 - 0x0208)
class UVRSelectorUnit : public UUserWidget
{
public:
	float                                              DelaySecondsBase;                                         // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelaySecondsStep;                                         // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CursorAnimSeconds;                                        // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CursorAnimCounts;                                         // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0218(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRSelectorUnit");
		return ptr;
	}

};


// Class Nimbus.VRSimpleUserWidget
// 0x0020 (0x0228 - 0x0208)
class UVRSimpleUserWidget : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnKeyJustPressed;                                         // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnKeyRepeated;                                            // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRSimpleUserWidget");
		return ptr;
	}


	void OnKeyRepeated__DelegateSignature(EUIKeys Key);
	void OnKeyJustPressed__DelegateSignature(EUIKeys Key);
	bool IsKeyDown(EUIKeys Key);
};


// Class Nimbus.VRWarningLookFrontWidget
// 0x0010 (0x04E0 - 0x04D0)
class UVRWarningLookFrontWidget : public UMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRWarningLookFrontWidget");
		return ptr;
	}

};


// Class Nimbus.VRWeaponWidget
// 0x00C0 (0x06E0 - 0x0620)
class UVRWeaponWidget : public UVRMenuBaseWidget
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0620(0x00A8) MISSED OFFSET
	TArray<class UImage*>                              UmgSpecGraphBar;                                          // 0x06C8(0x0010) (ExportObject, ZeroConstructor)
	class UVRSelectorUnit*                             SelectorUnitWidget;                                       // 0x06D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRWeaponWidget");
		return ptr;
	}

};


// Class Nimbus.VRUnlockWidget
// 0x0030 (0x0650 - 0x0620)
class UVRUnlockWidget : public UVRMenuBaseWidget
{
public:
	float                                              RewardIntervalSeconds;                                    // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0624(0x0004) MISSED OFFSET
	class UTextBlockCustomized*                        UmgRewardText;                                            // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0630(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.VRUnlockWidget");
		return ptr;
	}

};


// Class Nimbus.WeaponConceptWidget
// 0x0038 (0x0240 - 0x0208)
class UWeaponConceptWidget : public UUserWidget
{
public:
	class AUIManagerActor*                             UIManagerActor;                                           // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UImage*                                      UmgVideoImage;                                            // 0x0210(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0218(0x0010) MISSED OFFSET
	class UManaTexture*                                ManaTexture;                                              // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0230(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponConceptWidget");
		return ptr;
	}

};


// Class Nimbus.WeaponManager
// 0x00D0 (0x01C0 - 0x00F0)
class UWeaponManager : public UActorComponent
{
public:
	TArray<struct FEquippedWeaponConfig>               EquippedWeapons;                                          // 0x00F0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0100(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponManager");
		return ptr;
	}

};


// Class Nimbus.ReturnMoveSplineDataActor
// 0x0010 (0x0378 - 0x0368)
class AReturnMoveSplineDataActor : public AActor
{
public:
	float                                              ReturnTime;                                               // 0x0368(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ReturnMoveSpeedCurve;                                     // 0x0370(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.ReturnMoveSplineDataActor");
		return ptr;
	}

};


// Class Nimbus.WeaponMeshManager
// 0x00C0 (0x01B0 - 0x00F0)
class UWeaponMeshManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00F0(0x0050) MISSED OFFSET
	TArray<class UStaticMeshComponent*>                MainWeaponMeshCache;                                      // 0x0140(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                Spw0MeshCache;                                            // 0x0150(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                Spw1MeshCache;                                            // 0x0160(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                Spw2MeshCache;                                            // 0x0170(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0180(0x0020) MISSED OFFSET
	class AReturnMoveSplineDataActor*                  SplineActor;                                              // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class USplineComponent*                            SplineComponent;                                          // 0x01A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponMeshManager");
		return ptr;
	}


	void SetAllExtraMeshesMasterVisibility(bool bShowAllMeshes, bool bForceOperation);
};


// Class Nimbus.WeaponPassSoundComponent
// 0x0010 (0x0158 - 0x0148)
class UWeaponPassSoundComponent : public UBasePassSoundComponent
{
public:
	class UAkAudioEvent*                               PassSound;                                                // 0x0148(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PassSoundSwitch;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponPassSoundComponent");
		return ptr;
	}

};


// Class Nimbus.WeaponUAV
// 0x01E0 (0x0A80 - 0x08A0)
class AWeaponUAV : public AMissile
{
public:
	struct FUAVWeaponData                              WeaponData;                                               // 0x08A0(0x0040) (Edit, DisableEditOnInstance)
	float                                              AttackStartTime;                                          // 0x08E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttackTime;                                               // 0x08E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationDistance;                                     // 0x08E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationSpeed;                                        // 0x08EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSpeed;                                             // 0x08F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AirCorrectionOffset;                                      // 0x08F4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationDistance_Ground;                              // 0x0900(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationSpeed_Ground;                                 // 0x0904(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSpeed_Ground;                                      // 0x0908(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttackDistance_Ground;                                    // 0x090C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundCorrectionHeight;                                   // 0x0910(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationDistance_Fas;                                 // 0x0914(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecelerationSpeed_Fas;                                    // 0x0918(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSpeed_Fas;                                         // 0x091C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     FasOffset;                                                // 0x0920(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              AttackDistance_Fas;                                       // 0x092C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OverShootAngle;                                           // 0x0930(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0934(0x0004) MISSED OFFSET
	class USceneComponent*                             LastDestinationPointSceneComponent;                       // 0x0938(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              FirstLookAtSlope;                                         // 0x0940(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxLookAtSlope;                                           // 0x0944(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FString>                             TomorrowShootTargetList;                                  // 0x0948(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             GoStraightTargetList;                                     // 0x0958(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             FasParameterTargetList;                                   // 0x0968(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             FasInvincibleAttackTargetList;                            // 0x0978(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             FasUnderAttackTargetList;                                 // 0x0988(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             FasIgnoreMoveRayCastTargetList;                           // 0x0998(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x09A8(0x00D0) MISSED OFFSET
	class AActor*                                      BalletIgnoreActor;                                        // 0x0A78(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WeaponUAV");
		return ptr;
	}

};


// Class Nimbus.Widget3D
// 0x0038 (0x03A0 - 0x0368)
class AWidget3D : public AActor
{
public:
	class UWidgetComponent*                            Widget2D;                                                 // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0370(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.Widget3D");
		return ptr;
	}

};


// Class Nimbus.WidgetToTextureConverter
// 0x00C8 (0x00F0 - 0x0028)
class UWidgetToTextureConverter : public UObject
{
public:
	struct FIntPoint                                   DrawSize;                                                 // 0x0028(0x0008) (Edit, IsPlainOldData)
	class UUserWidget*                                 Widget;                                                   // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET
	class UTextureRenderTarget2D*                      RenderTarget;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0050(0x0020) MISSED OFFSET
	float                                              RefreshFPS;                                               // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4C];                                      // 0x0074(0x004C) MISSED OFFSET
	class UTextureRenderTarget2D*                      DownSampleRT;                                             // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      BlurXRT;                                                  // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      BlurYRT;                                                  // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      RenderTargetWithGlow;                                     // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x00E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Nimbus.WidgetToTextureConverter");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
